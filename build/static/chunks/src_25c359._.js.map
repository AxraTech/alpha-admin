{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/@core/components/mui/Avatar.jsx"],"sourcesContent":["'use client'\r\n\r\n// React Imports\r\nimport { forwardRef } from 'react'\r\n\r\n// MUI Imports\r\nimport MuiAvatar from '@mui/material/Avatar'\r\nimport { lighten, styled } from '@mui/material/styles'\r\n\r\nconst Avatar = styled(MuiAvatar)(({ skin, color, size, theme }) => {\r\n  return {\r\n    ...(color &&\r\n      skin === 'light' && {\r\n        backgroundColor: `var(--mui-palette-${color}-lightOpacity)`,\r\n        color: `var(--mui-palette-${color}-main)`\r\n      }),\r\n    ...(color &&\r\n      skin === 'light-static' && {\r\n        backgroundColor: lighten(theme.palette[color].main, 0.84),\r\n        color: `var(--mui-palette-${color}-main)`\r\n      }),\r\n    ...(color &&\r\n      skin === 'filled' && {\r\n        backgroundColor: `var(--mui-palette-${color}-main)`,\r\n        color: `var(--mui-palette-${color}-contrastText)`\r\n      }),\r\n    ...(size && {\r\n      height: size,\r\n      width: size\r\n    })\r\n  }\r\n})\r\n\r\nconst CustomAvatar = forwardRef((props, ref) => {\r\n  // Props\r\n  const { color, skin = 'filled', ...rest } = props\r\n\r\n  return <Avatar color={color} skin={skin} ref={ref} {...rest} />\r\n})\r\n\r\nexport default CustomAvatar\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;AASA,MAAM,SAAS,CAAA,GAAA,6LAAA,CAAA,SAAM,AAAD,EAAE,wJAAA,CAAA,UAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;IAC5D,OAAO;QACL,GAAI,SACF,SAAS,WAAW;YAClB,iBAAiB,CAAC,kBAAkB,EAAE,MAAM,cAAc,CAAC;YAC3D,OAAO,CAAC,kBAAkB,EAAE,MAAM,MAAM,CAAC;QAC3C,CAAC;QACH,GAAI,SACF,SAAS,kBAAkB;YACzB,iBAAiB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD,EAAE,MAAM,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE;YACpD,OAAO,CAAC,kBAAkB,EAAE,MAAM,MAAM,CAAC;QAC3C,CAAC;QACH,GAAI,SACF,SAAS,YAAY;YACnB,iBAAiB,CAAC,kBAAkB,EAAE,MAAM,MAAM,CAAC;YACnD,OAAO,CAAC,kBAAkB,EAAE,MAAM,cAAc,CAAC;QACnD,CAAC;QACH,GAAI,QAAQ;YACV,QAAQ;YACR,OAAO;QACT,CAAC;IACH;AACF;KAtBM;AAwBN,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,QAAE,CAAC,OAAO;IACtC,QAAQ;IACR,MAAM,EAAE,KAAK,EAAE,OAAO,QAAQ,EAAE,GAAG,MAAM,GAAG;IAE5C,qBAAO,6LAAC;QAAO,OAAO;QAAO,MAAM;QAAM,KAAK;QAAM,GAAG,IAAI;;;;;;AAC7D;;uCAEe"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/@core/styles/table.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"cellWithInput\": \"table-module__Mig-TG__cellWithInput\",\n  \"table\": \"table-module__Mig-TG__table\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/views/user/view/user-right/order/ProjectListTable.jsx"],"sourcesContent":["'use client'\r\n\r\n// React Imports\r\nimport { useState, useMemo, useEffect } from 'react'\r\n\r\n// MUI Imports\r\nimport Typography from '@mui/material/Typography'\r\nimport LinearProgress from '@mui/material/LinearProgress'\r\nimport TextField from '@mui/material/TextField'\r\nimport Card from '@mui/material/Card'\r\nimport CardHeader from '@mui/material/CardHeader'\r\n\r\n// THird-party Imports\r\nimport classnames from 'classnames'\r\nimport { rankItem } from '@tanstack/match-sorter-utils'\r\nimport {\r\n  createColumnHelper,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  useReactTable,\r\n  getFilteredRowModel,\r\n  getFacetedRowModel,\r\n  getFacetedUniqueValues,\r\n  getFacetedMinMaxValues,\r\n  getPaginationRowModel,\r\n  getSortedRowModel\r\n} from '@tanstack/react-table'\r\n\r\n// Component Imports\r\nimport CustomAvatar from '@core/components/mui/Avatar'\r\n\r\n// Style Imports\r\nimport tableStyles from '@core/styles/table.module.css'\r\n\r\n// Vars\r\nconst projectTable = [\r\n  {\r\n    id: 1,\r\n    hours: '18:42',\r\n    progressValue: 78,\r\n    totalTask: '122/240',\r\n    progressColor: 'success',\r\n    projectType: 'React Project',\r\n    projectTitle: 'BGC eCommerce App',\r\n    img: '/images/logos/react-bg.png'\r\n  },\r\n  {\r\n    id: 2,\r\n    hours: '20:42',\r\n    progressValue: 18,\r\n    totalTask: '9/56',\r\n    progressColor: 'error',\r\n    projectType: 'Figma Project',\r\n    projectTitle: 'Falcon Logo Design',\r\n    img: '/images/logos/figma-bg.png'\r\n  },\r\n  {\r\n    id: 3,\r\n    hours: '120:87',\r\n    progressValue: 62,\r\n    totalTask: '290/320',\r\n    progressColor: 'primary',\r\n    projectType: 'VueJs Project',\r\n    projectTitle: 'Dashboard Design',\r\n    img: '/images/logos/vue-bg.png'\r\n  },\r\n  {\r\n    id: 4,\r\n    hours: '89:19',\r\n    progressValue: 8,\r\n    totalTask: '7/63',\r\n    progressColor: 'error',\r\n    projectType: 'Xamarin Project',\r\n    projectTitle: 'Foodista Mobile App',\r\n    img: '/images/icons/mobile-bg.png'\r\n  },\r\n  {\r\n    id: 5,\r\n    hours: '230:10',\r\n    progressValue: 49,\r\n    totalTask: '120/186',\r\n    progressColor: 'warning',\r\n    projectType: 'Python Project',\r\n    projectTitle: 'Dojo React Project',\r\n    img: '/images/logos/python-bg.png'\r\n  },\r\n  {\r\n    id: 6,\r\n    hours: '342:41',\r\n    progressValue: 92,\r\n    totalTask: '99/109',\r\n    progressColor: 'success',\r\n    projectType: 'Sketch Project',\r\n    projectTitle: 'Blockchain Website',\r\n    img: '/images/logos/sketch-bg.png'\r\n  },\r\n  {\r\n    id: 7,\r\n    hours: '12:45',\r\n    progressValue: 88,\r\n    totalTask: '98/110',\r\n    progressColor: 'success',\r\n    projectType: 'HTML Project',\r\n    projectTitle: 'Hoffman Website',\r\n    img: '/images/logos/html-bg.png'\r\n  }\r\n]\r\n\r\nconst fuzzyFilter = (row, columnId, value, addMeta) => {\r\n  // Rank the item\r\n  const itemRank = rankItem(row.getValue(columnId), value)\r\n\r\n  // Store the itemRank info\r\n  addMeta({\r\n    itemRank\r\n  })\r\n\r\n  // Return if the item should be filtered in/out\r\n  return itemRank.passed\r\n}\r\n\r\nconst DebouncedInput = ({ value: initialValue, onChange, debounce = 500, ...props }) => {\r\n  // States\r\n  const [value, setValue] = useState(initialValue)\r\n\r\n  useEffect(() => {\r\n    setValue(initialValue)\r\n  }, [initialValue])\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      onChange(value)\r\n    }, debounce)\r\n\r\n    return () => clearTimeout(timeout)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [value])\r\n\r\n  return <TextField {...props} value={value} onChange={e => setValue(e.target.value)} size='small' />\r\n}\r\n\r\n// Column Definitions\r\nconst columnHelper = createColumnHelper()\r\n\r\nconst ProjectListTable = () => {\r\n  // States\r\n  const [rowSelection, setRowSelection] = useState({})\r\n\r\n  const [data, setData] = useState(...[projectTable])\r\n  const [globalFilter, setGlobalFilter] = useState('')\r\n\r\n  // Hooks\r\n  const columns = useMemo(\r\n    () => [\r\n      columnHelper.accessor('projectTitle', {\r\n        header: 'Project',\r\n        cell: ({ row }) => (\r\n          <div className='flex items-center gap-4'>\r\n            <CustomAvatar src={row.original.img} size={34} />\r\n            <div className='flex flex-col'>\r\n              <Typography className='font-medium' color='text.primary'>\r\n                {row.original.projectTitle}\r\n              </Typography>\r\n              <Typography variant='body2'>{row.original.projectType}</Typography>\r\n            </div>\r\n          </div>\r\n        )\r\n      }),\r\n      columnHelper.accessor('totalTask', {\r\n        header: 'Total Task',\r\n        cell: ({ row }) => <Typography color='text.primary'>{row.original.totalTask}</Typography>\r\n      }),\r\n      columnHelper.accessor('progressValue', {\r\n        header: 'Progress',\r\n        cell: ({ row }) => (\r\n          <>\r\n            <Typography color='text.primary'>{`${row.original.progressValue}%`}</Typography>\r\n            <LinearProgress\r\n              color={row.original.progressColor}\r\n              value={row.original.progressValue}\r\n              variant='determinate'\r\n              className='is-full'\r\n            />\r\n          </>\r\n        )\r\n      }),\r\n      columnHelper.accessor('hours', {\r\n        header: 'Hours',\r\n        cell: ({ row }) => <Typography>{row.original.hours}</Typography>\r\n      })\r\n    ],\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  )\r\n\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    filterFns: {\r\n      fuzzy: fuzzyFilter\r\n    },\r\n    state: {\r\n      rowSelection,\r\n      globalFilter\r\n    },\r\n    initialState: {\r\n      pagination: {\r\n        pageSize: 7\r\n      }\r\n    },\r\n    enableRowSelection: true, //enable row selection for all rows\r\n    // enableRowSelection: row => row.original.age > 18, // or enable row selection conditionally per row\r\n    globalFilterFn: fuzzyFilter,\r\n    onRowSelectionChange: setRowSelection,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    onGlobalFilterChange: setGlobalFilter,\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n    getFacetedRowModel: getFacetedRowModel(),\r\n    getFacetedUniqueValues: getFacetedUniqueValues(),\r\n    getFacetedMinMaxValues: getFacetedMinMaxValues()\r\n  })\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title='Project List'\r\n        className='flex flex-wrap gap-4'\r\n        action={\r\n          <DebouncedInput\r\n            value={globalFilter ?? ''}\r\n            onChange={value => setGlobalFilter(String(value))}\r\n            placeholder='Search Project'\r\n          />\r\n        }\r\n      />\r\n\r\n      <div className='overflow-x-auto'>\r\n        <table className={tableStyles.table}>\r\n          <thead>\r\n            {table.getHeaderGroups().map(headerGroup => (\r\n              <tr key={headerGroup.id}>\r\n                {headerGroup.headers.map(header => (\r\n                  <th key={header.id}>\r\n                    {header.isPlaceholder ? null : (\r\n                      <>\r\n                        <div\r\n                          className={classnames({\r\n                            'flex items-center': header.column.getIsSorted(),\r\n                            'cursor-pointer select-none': header.column.getCanSort()\r\n                          })}\r\n                          onClick={header.column.getToggleSortingHandler()}\r\n                        >\r\n                          {flexRender(header.column.columnDef.header, header.getContext())}\r\n                          {{\r\n                            asc: <i className='ri-arrow-up-s-line text-xl' />,\r\n                            desc: <i className='ri-arrow-down-s-line text-xl' />\r\n                          }[header.column.getIsSorted()] ?? null}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          {table.getFilteredRowModel().rows.length === 0 ? (\r\n            <tbody>\r\n              <tr>\r\n                <td colSpan={table.getVisibleFlatColumns().length} className='text-center'>\r\n                  No data available\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          ) : (\r\n            <tbody>\r\n              {table\r\n                .getRowModel()\r\n                .rows.slice(0, table.getState().pagination.pageSize)\r\n                .map(row => {\r\n                  return (\r\n                    <tr key={row.id} className={classnames({ selected: row.getIsSelected() })}>\r\n                      {row.getVisibleCells().map(cell => (\r\n                        <td key={cell.id}>{flexRender(cell.column.columnDef.cell, cell.getContext())}</td>\r\n                      ))}\r\n                    </tr>\r\n                  )\r\n                })}\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ProjectListTable\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;AAkCA,OAAO;AACP,MAAM,eAAe;IACnB;QACE,IAAI;QACJ,OAAO;QACP,eAAe;QACf,WAAW;QACX,eAAe;QACf,aAAa;QACb,cAAc;QACd,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,eAAe;QACf,WAAW;QACX,eAAe;QACf,aAAa;QACb,cAAc;QACd,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,eAAe;QACf,WAAW;QACX,eAAe;QACf,aAAa;QACb,cAAc;QACd,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,eAAe;QACf,WAAW;QACX,eAAe;QACf,aAAa;QACb,cAAc;QACd,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,eAAe;QACf,WAAW;QACX,eAAe;QACf,aAAa;QACb,cAAc;QACd,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,eAAe;QACf,WAAW;QACX,eAAe;QACf,aAAa;QACb,cAAc;QACd,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,eAAe;QACf,WAAW;QACX,eAAe;QACf,aAAa;QACb,cAAc;QACd,KAAK;IACP;CACD;AAED,MAAM,cAAc,CAAC,KAAK,UAAU,OAAO;IACzC,gBAAgB;IAChB,MAAM,WAAW,CAAA,GAAA,mLAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,QAAQ,CAAC,WAAW;IAElD,0BAA0B;IAC1B,QAAQ;QACN;IACF;IAEA,+CAA+C;IAC/C,OAAO,SAAS,MAAM;AACxB;AAEA,MAAM,iBAAiB,CAAC,EAAE,OAAO,YAAY,EAAE,QAAQ,EAAE,WAAW,GAAG,EAAE,GAAG,OAAO;;IACjF,SAAS;IACT,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;QACR,SAAS;IACX,GAAG;QAAC;KAAa;IACjB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,UAAU,WAAW;YACzB,SAAS;QACX,GAAG;QAEH,OAAO,IAAM,aAAa;IAC1B,uDAAuD;IACzD,GAAG;QAAC;KAAM;IAEV,qBAAO,6LAAC,8JAAA,CAAA,UAAS;QAAE,GAAG,KAAK;QAAE,OAAO;QAAO,UAAU,CAAA,IAAK,SAAS,EAAE,MAAM,CAAC,KAAK;QAAG,MAAK;;;;;;AAC3F;GAjBM;KAAA;AAmBN,qBAAqB;AACrB,MAAM,eAAe,CAAA,GAAA,wKAAA,CAAA,qBAAkB,AAAD;AAEtC,MAAM,mBAAmB;;IACvB,SAAS;IACT,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,CAAC;IAElD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,KAAK;QAAC;KAAa;IAClD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,QAAQ;IACR,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD,EACpB,IAAM;YACJ,aAAa,QAAQ,CAAC,gBAAgB;gBACpC,QAAQ;gBACR,MAAM,CAAC,EAAE,GAAG,EAAE,iBACZ,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,gJAAA,CAAA,UAAY;gCAAC,KAAK,IAAI,QAAQ,CAAC,GAAG;gCAAE,MAAM;;;;;;0CAC3C,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,gKAAA,CAAA,UAAU;wCAAC,WAAU;wCAAc,OAAM;kDACvC,IAAI,QAAQ,CAAC,YAAY;;;;;;kDAE5B,6LAAC,gKAAA,CAAA,UAAU;wCAAC,SAAQ;kDAAS,IAAI,QAAQ,CAAC,WAAW;;;;;;;;;;;;;;;;;;YAI7D;YACA,aAAa,QAAQ,CAAC,aAAa;gBACjC,QAAQ;gBACR,MAAM,CAAC,EAAE,GAAG,EAAE,iBAAK,6LAAC,gKAAA,CAAA,UAAU;wBAAC,OAAM;kCAAgB,IAAI,QAAQ,CAAC,SAAS;;;;;;YAC7E;YACA,aAAa,QAAQ,CAAC,iBAAiB;gBACrC,QAAQ;gBACR,MAAM,CAAC,EAAE,GAAG,EAAE,iBACZ;;0CACE,6LAAC,gKAAA,CAAA,UAAU;gCAAC,OAAM;0CAAgB,CAAC,EAAE,IAAI,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;;;;;;0CAClE,6LAAC,wKAAA,CAAA,UAAc;gCACb,OAAO,IAAI,QAAQ,CAAC,aAAa;gCACjC,OAAO,IAAI,QAAQ,CAAC,aAAa;gCACjC,SAAQ;gCACR,WAAU;;;;;;;;YAIlB;YACA,aAAa,QAAQ,CAAC,SAAS;gBAC7B,QAAQ;gBACR,MAAM,CAAC,EAAE,GAAG,EAAE,iBAAK,6LAAC,gKAAA,CAAA,UAAU;kCAAE,IAAI,QAAQ,CAAC,KAAK;;;;;;YACpD;SACD,EACD,uDAAuD;IACvD,EAAE;IAGJ,MAAM,QAAQ,CAAA,GAAA,yLAAA,CAAA,gBAAa,AAAD,EAAE;QAC1B;QACA;QACA,WAAW;YACT,OAAO;QACT;QACA,OAAO;YACL;YACA;QACF;QACA,cAAc;YACZ,YAAY;gBACV,UAAU;YACZ;QACF;QACA,oBAAoB;QACpB,qGAAqG;QACrG,gBAAgB;QAChB,sBAAsB;QACtB,iBAAiB,CAAA,GAAA,wKAAA,CAAA,kBAAe,AAAD;QAC/B,sBAAsB;QACtB,qBAAqB,CAAA,GAAA,wKAAA,CAAA,sBAAmB,AAAD;QACvC,mBAAmB,CAAA,GAAA,wKAAA,CAAA,oBAAiB,AAAD;QACnC,uBAAuB,CAAA,GAAA,wKAAA,CAAA,wBAAqB,AAAD;QAC3C,oBAAoB,CAAA,GAAA,wKAAA,CAAA,qBAAkB,AAAD;QACrC,wBAAwB,CAAA,GAAA,wKAAA,CAAA,yBAAsB,AAAD;QAC7C,wBAAwB,CAAA,GAAA,wKAAA,CAAA,yBAAsB,AAAD;IAC/C;IAEA,qBACE,6LAAC,oJAAA,CAAA,UAAI;;0BACH,6LAAC,gKAAA,CAAA,UAAU;gBACT,OAAM;gBACN,WAAU;gBACV,sBACE,6LAAC;oBACC,OAAO,gBAAgB;oBACvB,UAAU,CAAA,QAAS,gBAAgB,OAAO;oBAC1C,aAAY;;;;;;;;;;;0BAKlB,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAM,WAAW,+IAAA,CAAA,UAAW,CAAC,KAAK;;sCACjC,6LAAC;sCACE,MAAM,eAAe,GAAG,GAAG,CAAC,CAAA,4BAC3B,6LAAC;8CACE,YAAY,OAAO,CAAC,GAAG,CAAC,CAAA,uBACvB,6LAAC;sDACE,OAAO,aAAa,GAAG,qBACtB;0DACE,cAAA,6LAAC;oDACC,WAAW,CAAA,GAAA,sIAAA,CAAA,UAAU,AAAD,EAAE;wDACpB,qBAAqB,OAAO,MAAM,CAAC,WAAW;wDAC9C,8BAA8B,OAAO,MAAM,CAAC,UAAU;oDACxD;oDACA,SAAS,OAAO,MAAM,CAAC,uBAAuB;;wDAE7C,CAAA,GAAA,yLAAA,CAAA,aAAU,AAAD,EAAE,OAAO,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,UAAU;wDAC5D;4DACC,mBAAK,6LAAC;gEAAE,WAAU;;;;;;4DAClB,oBAAM,6LAAC;gEAAE,WAAU;;;;;;wDACrB,CAAC,CAAC,OAAO,MAAM,CAAC,WAAW,GAAG,IAAI;;;;;;;;2CAdjC,OAAO,EAAE;;;;;mCAFb,YAAY,EAAE;;;;;;;;;;wBAyB1B,MAAM,mBAAmB,GAAG,IAAI,CAAC,MAAM,KAAK,kBAC3C,6LAAC;sCACC,cAAA,6LAAC;0CACC,cAAA,6LAAC;oCAAG,SAAS,MAAM,qBAAqB,GAAG,MAAM;oCAAE,WAAU;8CAAc;;;;;;;;;;;;;;;iDAM/E,6LAAC;sCACE,MACE,WAAW,GACX,IAAI,CAAC,KAAK,CAAC,GAAG,MAAM,QAAQ,GAAG,UAAU,CAAC,QAAQ,EAClD,GAAG,CAAC,CAAA;gCACH,qBACE,6LAAC;oCAAgB,WAAW,CAAA,GAAA,sIAAA,CAAA,UAAU,AAAD,EAAE;wCAAE,UAAU,IAAI,aAAa;oCAAG;8CACpE,IAAI,eAAe,GAAG,GAAG,CAAC,CAAA,qBACzB,6LAAC;sDAAkB,CAAA,GAAA,yLAAA,CAAA,aAAU,AAAD,EAAE,KAAK,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,UAAU;2CAAhE,KAAK,EAAE;;;;;mCAFX,IAAI,EAAE;;;;;4BAMnB;;;;;;;;;;;;;;;;;;;;;;;AAOhB;IAvJM;;QAmDU,yLAAA,CAAA,gBAAa;;;MAnDvB;uCAyJS"}},
    {"offset": {"line": 498, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 503, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/views/user/view/user-right/order/UserActivityTimeline.jsx"],"sourcesContent":["'use client'\r\n\r\n// MUI Imports\r\nimport Card from '@mui/material/Card'\r\nimport CardHeader from '@mui/material/CardHeader'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport AvatarGroup from '@mui/material/AvatarGroup'\r\nimport { styled } from '@mui/material/styles'\r\nimport TimelineDot from '@mui/lab/TimelineDot'\r\nimport TimelineItem from '@mui/lab/TimelineItem'\r\nimport Typography from '@mui/material/Typography'\r\nimport TimelineContent from '@mui/lab/TimelineContent'\r\nimport TimelineSeparator from '@mui/lab/TimelineSeparator'\r\nimport TimelineConnector from '@mui/lab/TimelineConnector'\r\nimport MuiTimeline from '@mui/lab/Timeline'\r\n\r\n// Component Imports\r\nimport CustomAvatarAvatar from '@core/components/mui/Avatar'\r\n\r\n// Styled Timeline component\r\nconst Timeline = styled(MuiTimeline)({\r\n  paddingLeft: 0,\r\n  paddingRight: 0,\r\n  '& .MuiTimelineItem-root': {\r\n    width: '100%',\r\n    '&:before': {\r\n      display: 'none'\r\n    }\r\n  }\r\n})\r\n\r\nconst UserActivityTimeLine = () => {\r\n  return (\r\n    <Card>\r\n      <CardHeader title='User Activity Timeline' />\r\n      <CardContent>\r\n        <Timeline>\r\n          <TimelineItem>\r\n            <TimelineSeparator>\r\n              <TimelineDot color='primary' />\r\n              <TimelineConnector />\r\n            </TimelineSeparator>\r\n            <TimelineContent>\r\n              <div className='flex flex-wrap items-center justify-between gap-x-2 mbe-2.5'>\r\n                <Typography className='font-medium' color='text.primary'>\r\n                  12 Invoices have been paid\r\n                </Typography>\r\n                <Typography variant='caption'>12 min ago</Typography>\r\n              </div>\r\n              <Typography className='mbe-2'>Invoices have been paid to the company</Typography>\r\n              <div className='flex items-center gap-2.5 is-fit bg-actionHover rounded plb-[5px] pli-2.5'>\r\n                <img height={20} alt='invoice.pdf' src='/images/icons/pdf-document.png' />\r\n                <Typography className='font-medium' color='text.primary'>\r\n                  invoices.pdf\r\n                </Typography>\r\n              </div>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n          <TimelineItem>\r\n            <TimelineSeparator>\r\n              <TimelineDot color='success' />\r\n              <TimelineConnector />\r\n            </TimelineSeparator>\r\n            <TimelineContent>\r\n              <div className='flex flex-wrap items-center justify-between gap-x-2 mbe-2.5'>\r\n                <Typography className='font-medium' color='text.primary'>\r\n                  Client Meeting\r\n                </Typography>\r\n                <Typography variant='caption'>45 min ago</Typography>\r\n              </div>\r\n              <Typography className='mbe-2'>Project meeting with john @10:15am</Typography>\r\n              <div className='flex items-center gap-2.5'>\r\n                <CustomAvatarAvatar src='/images/avatars/1.png' size={32} />\r\n                <div className='flex flex-col flex-wrap'>\r\n                  <Typography variant='body2' className='font-medium'>\r\n                    Lester McCarthy (Client)\r\n                  </Typography>\r\n                  <Typography variant='body2'>CEO of ThemeSelection</Typography>\r\n                </div>\r\n              </div>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n          <TimelineItem>\r\n            <TimelineSeparator>\r\n              <TimelineDot color='info' />\r\n              <TimelineConnector />\r\n            </TimelineSeparator>\r\n            <TimelineContent>\r\n              <div className='flex flex-wrap items-center justify-between gap-x-2 mbe-2.5'>\r\n                <Typography className='font-medium' color='text.primary'>\r\n                  Create a new project for client\r\n                </Typography>\r\n                <Typography variant='caption'>2 Day Ago</Typography>\r\n              </div>\r\n              <Typography className='mbe-2'>6 team members in a project</Typography>\r\n              <AvatarGroup total={6} className='pull-up'>\r\n                <Avatar alt='Travis Howard' src='/images/avatars/1.png' />\r\n                <Avatar alt='Agnes Walker' src='/images/avatars/8.png' />\r\n                <Avatar alt='John Doe' src='/images/avatars/6.png' />\r\n              </AvatarGroup>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        </Timeline>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UserActivityTimeLine\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 900, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 905, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/configs/themeConfig.js"],"sourcesContent":["/*\r\n * If you change the following items in the config object, you will not see any effect in the local development server\r\n * as these are stored in the cookie (cookie has the highest priority over the themeConfig):\r\n * 1. mode\r\n * 2. skin\r\n * 3. semiDark\r\n * 4. layout\r\n * 5. navbar.contentWidth\r\n * 6. contentWidth\r\n * 7. footer.contentWidth\r\n *\r\n * To see the effect of the above items, you can click on the reset button from the Customizer\r\n * which is on the top-right corner of the customizer besides the close button.\r\n * This will reset the cookie to the values provided in the config object below.\r\n *\r\n * Another way is to clear the cookie from the browser's Application/Storage tab and then reload the page.\r\n */\r\nconst themeConfig = {\r\n  templateName: 'ALPHA',\r\n  homePageUrl: '/dashboards/crm',\r\n  settingsCookieName: 'Alpha',\r\n  mode: 'system', // 'system', 'light', 'dark'\r\n  skin: 'default', // 'default', 'bordered'\r\n  semiDark: false, // true, false\r\n  layout: 'vertical', // 'vertical', 'collapsed', 'horizontal'\r\n  layoutPadding: 24, // Common padding for header, content, footer layout components (in px)\r\n  compactContentWidth: 1440, // in px\r\n  navbar: {\r\n    type: 'fixed', // 'fixed', 'static'\r\n    contentWidth: 'compact', // 'compact', 'wide'\r\n    floating: false, //! true, false (This will not work in the Horizontal Layout)\r\n    detached: true, //! true, false (This will not work in the Horizontal Layout or floating navbar is enabled)\r\n    blur: true // true, false\r\n  },\r\n  contentWidth: 'compact', // 'compact', 'wide'\r\n  footer: {\r\n    type: 'static', // 'fixed', 'static'\r\n    contentWidth: 'compact', // 'compact', 'wide'\r\n    detached: true //! true, false (This will not work in the Horizontal Layout)\r\n  },\r\n  disableRipple: false, // true, false\r\n  toastPosition: 'top-right' // 'top-right', 'top-center', 'top-left', 'bottom-right', 'bottom-center', 'bottom-left'\r\n}\r\n\r\nexport default themeConfig\r\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;CAgBC;;;AACD,MAAM,cAAc;IAClB,cAAc;IACd,aAAa;IACb,oBAAoB;IACpB,MAAM;IACN,MAAM;IACN,UAAU;IACV,QAAQ;IACR,eAAe;IACf,qBAAqB;IACrB,QAAQ;QACN,MAAM;QACN,cAAc;QACd,UAAU;QACV,UAAU;QACV,MAAM,KAAK,cAAc;IAC3B;IACA,cAAc;IACd,QAAQ;QACN,MAAM;QACN,cAAc;QACd,UAAU,KAAK,6DAA6D;IAC9E;IACA,eAAe;IACf,eAAe,YAAY,wFAAwF;AACrH;uCAEe"}},
    {"offset": {"line": 951, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 956, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/configs/primaryColorConfig.js"],"sourcesContent":["// Primary color config object\r\nconst primaryColorConfig = [\r\n  {\r\n    name: 'primary-1',\r\n    light: '#A379FF',\r\n    main: '#8C57FF',\r\n    dark: '#7E4EE6'\r\n  },\r\n  {\r\n    name: 'primary-2',\r\n    light: '#4EB0B1',\r\n    main: '#0D9394',\r\n    dark: '#096B6C'\r\n  },\r\n  {\r\n    name: 'primary-3',\r\n    light: '#F0718D',\r\n    main: '#EB3D63',\r\n    dark: '#AC2D48'\r\n  },\r\n  {\r\n    name: 'primary-4',\r\n    light: '#FFC25A',\r\n    main: '#FFAB1D',\r\n    dark: '#BA7D15'\r\n  },\r\n  {\r\n    name: 'primary-5',\r\n    light: '#5CAFF1',\r\n    main: '#2092EC',\r\n    dark: '#176BAC'\r\n  }\r\n]\r\n\r\nexport default primaryColorConfig\r\n"],"names":[],"mappings":"AAAA,8BAA8B;;;;AAC9B,MAAM,qBAAqB;IACzB;QACE,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM;IACR;IACA;QACE,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM;IACR;IACA;QACE,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM;IACR;IACA;QACE,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM;IACR;IACA;QACE,MAAM;QACN,OAAO;QACP,MAAM;QACN,MAAM;IACR;CACD;uCAEc"}},
    {"offset": {"line": 993, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 998, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/@core/hooks/useObjectCookie.js"],"sourcesContent":["// React Imports\r\nimport { useMemo } from 'react'\r\n\r\n// Third-party Imports\r\nimport { useCookie } from 'react-use'\r\n\r\nexport const useObjectCookie = (key, fallback) => {\r\n  // Hooks\r\n  const [valStr, updateCookie] = useCookie(key)\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const value = useMemo(() => (valStr ? JSON.parse(valStr) : fallback), [valStr])\r\n\r\n  const updateValue = newVal => {\r\n    updateCookie(JSON.stringify(newVal))\r\n  }\r\n\r\n  return [value, updateValue]\r\n}\r\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;;;;;;;AAMT,MAAM,kBAAkB,CAAC,KAAK;;IACnC,QAAQ;IACR,MAAM,CAAC,QAAQ,aAAa,GAAG,CAAA,GAAA,2LAAA,CAAA,YAAS,AAAD,EAAE;IACzC,uDAAuD;IACvD,MAAM,QAAQ,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD,EAAE,IAAO,SAAS,KAAK,KAAK,CAAC,UAAU,UAAW;QAAC;KAAO;IAE9E,MAAM,cAAc,CAAA;QAClB,aAAa,KAAK,SAAS,CAAC;IAC9B;IAEA,OAAO;QAAC;QAAO;KAAY;AAC7B;GAXa;;QAEoB,2LAAA,CAAA,YAAS"}},
    {"offset": {"line": 1029, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1034, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/@core/contexts/settingsContext.jsx"],"sourcesContent":["'use client'\r\nimport { createContext, useMemo, useState } from 'react'\r\n\r\n// Config Imports\r\nimport themeConfig from '@configs/themeConfig'\r\nimport primaryColorConfig from '@configs/primaryColorConfig'\r\n\r\n// Hook Imports\r\nimport { useObjectCookie } from '@core/hooks/useObjectCookie'\r\n\r\n// Initial Settings Context\r\nexport const SettingsContext = createContext(null)\r\n\r\n// Settings Provider\r\nexport const SettingsProvider = props => {\r\n  // Initial Settings\r\n  const initialSettings = {\r\n    mode: themeConfig.mode,\r\n    skin: themeConfig.skin,\r\n    semiDark: themeConfig.semiDark,\r\n    layout: themeConfig.layout,\r\n    navbarContentWidth: themeConfig.navbar.contentWidth,\r\n    contentWidth: themeConfig.contentWidth,\r\n    footerContentWidth: themeConfig.footer.contentWidth,\r\n    primaryColor: primaryColorConfig[0].main\r\n  }\r\n\r\n  const updatedInitialSettings = {\r\n    ...initialSettings,\r\n    mode: props.mode || themeConfig.mode\r\n  }\r\n\r\n  // Cookies\r\n  const [settingsCookie, updateSettingsCookie] = useObjectCookie(\r\n    themeConfig.settingsCookieName,\r\n    JSON.stringify(props.settingsCookie) !== '{}' ? props.settingsCookie : updatedInitialSettings\r\n  )\r\n\r\n  // State\r\n  const [_settingsState, _updateSettingsState] = useState(\r\n    JSON.stringify(settingsCookie) !== '{}' ? settingsCookie : updatedInitialSettings\r\n  )\r\n\r\n  const updateSettings = (settings, options) => {\r\n    const { updateCookie = true } = options || {}\r\n\r\n    _updateSettingsState(prev => {\r\n      const newSettings = { ...prev, ...settings }\r\n\r\n      // Update cookie if needed\r\n      if (updateCookie) updateSettingsCookie(newSettings)\r\n\r\n      return newSettings\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Updates the settings for page with the provided settings object.\r\n   * Updated settings won't be saved to cookie hence will be reverted once navigating away from the page.\r\n   *\r\n   * @param settings - The partial settings object containing the properties to update.\r\n   * @returns A function to reset the page settings.\r\n   *\r\n   * @example\r\n   * useEffect(() => {\r\n   *     return updatePageSettings({ theme: 'dark' });\r\n   * }, []);\r\n   */\r\n  const updatePageSettings = settings => {\r\n    updateSettings(settings, { updateCookie: false })\r\n\r\n    // Returns a function to reset the page settings\r\n    return () => updateSettings(settingsCookie, { updateCookie: false })\r\n  }\r\n\r\n  const resetSettings = () => {\r\n    updateSettings(initialSettings)\r\n  }\r\n\r\n  const isSettingsChanged = useMemo(\r\n    () => JSON.stringify(initialSettings) !== JSON.stringify(_settingsState),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [_settingsState]\r\n  )\r\n\r\n  return (\r\n    <SettingsContext.Provider\r\n      value={{\r\n        settings: _settingsState,\r\n        updateSettings,\r\n        isSettingsChanged,\r\n        resetSettings,\r\n        updatePageSettings\r\n      }}\r\n    >\r\n      {props.children}\r\n    </SettingsContext.Provider>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;;;;AAWO,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAE;AAGtC,MAAM,mBAAmB,CAAA;;IAC9B,mBAAmB;IACnB,MAAM,kBAAkB;QACtB,MAAM,gIAAA,CAAA,UAAW,CAAC,IAAI;QACtB,MAAM,gIAAA,CAAA,UAAW,CAAC,IAAI;QACtB,UAAU,gIAAA,CAAA,UAAW,CAAC,QAAQ;QAC9B,QAAQ,gIAAA,CAAA,UAAW,CAAC,MAAM;QAC1B,oBAAoB,gIAAA,CAAA,UAAW,CAAC,MAAM,CAAC,YAAY;QACnD,cAAc,gIAAA,CAAA,UAAW,CAAC,YAAY;QACtC,oBAAoB,gIAAA,CAAA,UAAW,CAAC,MAAM,CAAC,YAAY;QACnD,cAAc,uIAAA,CAAA,UAAkB,CAAC,EAAE,CAAC,IAAI;IAC1C;IAEA,MAAM,yBAAyB;QAC7B,GAAG,eAAe;QAClB,MAAM,MAAM,IAAI,IAAI,gIAAA,CAAA,UAAW,CAAC,IAAI;IACtC;IAEA,UAAU;IACV,MAAM,CAAC,gBAAgB,qBAAqB,GAAG,CAAA,GAAA,4IAAA,CAAA,kBAAe,AAAD,EAC3D,gIAAA,CAAA,UAAW,CAAC,kBAAkB,EAC9B,KAAK,SAAS,CAAC,MAAM,cAAc,MAAM,OAAO,MAAM,cAAc,GAAG;IAGzE,QAAQ;IACR,MAAM,CAAC,gBAAgB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EACpD,KAAK,SAAS,CAAC,oBAAoB,OAAO,iBAAiB;IAG7D,MAAM,iBAAiB,CAAC,UAAU;QAChC,MAAM,EAAE,eAAe,IAAI,EAAE,GAAG,WAAW,CAAC;QAE5C,qBAAqB,CAAA;YACnB,MAAM,cAAc;gBAAE,GAAG,IAAI;gBAAE,GAAG,QAAQ;YAAC;YAE3C,0BAA0B;YAC1B,IAAI,cAAc,qBAAqB;YAEvC,OAAO;QACT;IACF;IAEA;;;;;;;;;;;GAWC,GACD,MAAM,qBAAqB,CAAA;QACzB,eAAe,UAAU;YAAE,cAAc;QAAM;QAE/C,gDAAgD;QAChD,OAAO,IAAM,eAAe,gBAAgB;gBAAE,cAAc;YAAM;IACpE;IAEA,MAAM,gBAAgB;QACpB,eAAe;IACjB;IAEA,MAAM,oBAAoB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD,EAC9B,IAAM,KAAK,SAAS,CAAC,qBAAqB,KAAK,SAAS,CAAC,iBACzD,uDAAuD;IACvD;QAAC;KAAe;IAGlB,qBACE,6LAAC,gBAAgB,QAAQ;QACvB,OAAO;YACL,UAAU;YACV;YACA;YACA;YACA;QACF;kBAEC,MAAM,QAAQ;;;;;;AAGrB;GApFa;;QAmBoC,4IAAA,CAAA,kBAAe;;;KAnBnD"}},
    {"offset": {"line": 1135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1140, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/@core/hooks/useSettings.jsx"],"sourcesContent":["// React Imports\r\nimport { useContext } from 'react'\r\n\r\n// Context Imports\r\nimport { SettingsContext } from '@core/contexts/settingsContext'\r\n\r\nexport const useSettings = () => {\r\n  // Hooks\r\n  const context = useContext(SettingsContext)\r\n\r\n  if (!context) {\r\n    throw new Error('useSettingsContext must be used within a SettingsProvider')\r\n  }\r\n\r\n  return context\r\n}\r\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;;;;;;;AAMT,MAAM,cAAc;;IACzB,QAAQ;IACR,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE,gJAAA,CAAA,kBAAe;IAE1C,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;GATa"}},
    {"offset": {"line": 1160, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1165, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/@core/components/option-menu/index.jsx"],"sourcesContent":["'use client'\r\n\r\n// React Imports\r\nimport { useRef, useState } from 'react'\r\n\r\n// Next Imports\r\nimport Link from 'next/link'\r\n\r\n// MUI Imports\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport Box from '@mui/material/Box'\r\nimport Popper from '@mui/material/Popper'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport MenuList from '@mui/material/MenuList'\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\r\nimport Fade from '@mui/material/Fade'\r\nimport Paper from '@mui/material/Paper'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Divider from '@mui/material/Divider'\r\n\r\n// Third-party Imports\r\nimport classnames from 'classnames'\r\n\r\n// Hook Imports\r\nimport { useSettings } from '@core/hooks/useSettings'\r\n\r\nconst IconButtonWrapper = props => {\r\n  // Props\r\n  const { tooltipProps, children } = props\r\n\r\n  return tooltipProps?.title ? <Tooltip {...tooltipProps}>{children}</Tooltip> : children\r\n}\r\n\r\nconst MenuItemWrapper = ({ children, option }) => {\r\n  if (option.href) {\r\n    return (\r\n      <Box component={Link} href={option.href} {...option.linkProps}>\r\n        {children}\r\n      </Box>\r\n    )\r\n  } else {\r\n    return <>{children}</>\r\n  }\r\n}\r\n\r\nconst OptionMenu = props => {\r\n  // Props\r\n  const { tooltipProps, icon, iconClassName, options, leftAlignMenu, iconButtonProps } = props\r\n\r\n  // States\r\n  const [open, setOpen] = useState(false)\r\n\r\n  // Refs\r\n  const anchorRef = useRef(null)\r\n\r\n  // Hooks\r\n  const { settings } = useSettings()\r\n\r\n  const handleToggle = () => {\r\n    setOpen(prevOpen => !prevOpen)\r\n  }\r\n\r\n  const handleClose = event => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return\r\n    }\r\n\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButtonWrapper tooltipProps={tooltipProps}>\r\n        <IconButton ref={anchorRef} size='small' onClick={handleToggle} {...iconButtonProps}>\r\n          {typeof icon === 'string' ? (\r\n            <i className={classnames(icon, iconClassName)} />\r\n          ) : icon ? (\r\n            icon\r\n          ) : (\r\n            <i className={classnames('ri-more-2-line', iconClassName)} />\r\n          )}\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n      <Popper\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        placement={leftAlignMenu ? 'bottom-start' : 'bottom-end'}\r\n        transition\r\n        disablePortal\r\n        sx={{ zIndex: 1 }}\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps}>\r\n            <Paper className={settings.skin === 'bordered' ? 'border shadow-none' : 'shadow-lg'}>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MenuList autoFocusItem={open}>\r\n                  {options.map((option, index) => {\r\n                    if (typeof option === 'string') {\r\n                      return (\r\n                        <MenuItem key={index} onClick={handleClose}>\r\n                          {option}\r\n                        </MenuItem>\r\n                      )\r\n                    } else if ('divider' in option) {\r\n                      return option.divider && <Divider key={index} {...option.dividerProps} />\r\n                    } else {\r\n                      return (\r\n                        <MenuItem\r\n                          key={index}\r\n                          {...option.menuItemProps}\r\n                          {...(option.href && { className: 'p-0' })}\r\n                          onClick={e => {\r\n                            handleClose(e)\r\n                            option.menuItemProps && option.menuItemProps.onClick\r\n                              ? option.menuItemProps.onClick(e)\r\n                              : null\r\n                          }}\r\n                        >\r\n                          <MenuItemWrapper option={option}>\r\n                            {(typeof option.icon === 'string' ? <i className={option.icon} /> : option.icon) || null}\r\n                            {option.text}\r\n                          </MenuItemWrapper>\r\n                        </MenuItem>\r\n                      )\r\n                    }\r\n                  })}\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OptionMenu\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1392, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1397, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/helper/StatusColor.jsx"],"sourcesContent":["export const serviceStatusChipColor = {\r\n  completed: 'success',\r\n  canceled: 'error',\r\n  'received token': 'info',\r\n  'picking up': 'primary',\r\n  processing: 'warning'\r\n}\r\n\r\nexport const quotationstatusChipColor = {\r\n  pending: 'warning',\r\n  completed: 'success',\r\n  accepted: 'info',\r\n  rejected: 'error'\r\n}\r\n\r\nexport const orderStatusColor = {\r\n  delivering: 'secondary',\r\n  completed: 'success',\r\n  ordered: 'info',\r\n  preparing: 'primary',\r\n  refunded: 'warning',\r\n  canceled: 'error'\r\n}\r\n\r\nexport const invoiceStatusColor = {\r\n  paid: 'primary',\r\n  'partially paid': 'info',\r\n  completed: 'success',\r\n  unpaid: 'error',\r\n  pending: 'warning'\r\n}\r\n\r\nexport const userStatusObj = {\r\n  verified: 'success',\r\n  pending: 'warning',\r\n  unverified: 'primary',\r\n  disable: 'error'\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAAO,MAAM,yBAAyB;IACpC,WAAW;IACX,UAAU;IACV,kBAAkB;IAClB,cAAc;IACd,YAAY;AACd;AAEO,MAAM,2BAA2B;IACtC,SAAS;IACT,WAAW;IACX,UAAU;IACV,UAAU;AACZ;AAEO,MAAM,mBAAmB;IAC9B,YAAY;IACZ,WAAW;IACX,SAAS;IACT,WAAW;IACX,UAAU;IACV,UAAU;AACZ;AAEO,MAAM,qBAAqB;IAChC,MAAM;IACN,kBAAkB;IAClB,WAAW;IACX,QAAQ;IACR,SAAS;AACX;AAEO,MAAM,gBAAgB;IAC3B,UAAU;IACV,SAAS;IACT,YAAY;IACZ,SAAS;AACX"}},
    {"offset": {"line": 1438, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1443, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/helper/StatusIcon.jsx"],"sourcesContent":["export const serviceStatusIcon = {\r\n  completed: 'ri-check-double-line',\r\n  canceled: 'ri-close-circle-fill',\r\n  'received token': 'ri-check-double-line',\r\n  'picking up': 'ri-check-double-line',\r\n  processing: 'ri-check-double-line'\r\n}\r\nexport const orderStausIcon = {\r\n  delivering: 'ri-truck-line',\r\n  completed: 'ri-check-line',\r\n  ordered: 'ri-shopping-cart-line',\r\n  preparing: 'ri-knife-line',\r\n  refunded: 'ri-refund-2-line',\r\n  canceled: 'ri-close-circle-line'\r\n}\r\n\r\nexport const invoiceStatusIcon = {\r\n  paid: 'ri-check-double-line',\r\n  'partially paid': 'ri-check-line',\r\n  completed: 'ri-checkbox-circle-line',\r\n  unpaid: 'ri-close-circle-line',\r\n  pending: 'ri-time-line'\r\n}\r\n\r\nexport const quotationStatusIcon = {\r\n  pending: 'ri-time-line',\r\n  completed: 'ri-check-line',\r\n  accepted: 'ri-thumb-up-line',\r\n  rejected: 'ri-close-line'\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAO,MAAM,oBAAoB;IAC/B,WAAW;IACX,UAAU;IACV,kBAAkB;IAClB,cAAc;IACd,YAAY;AACd;AACO,MAAM,iBAAiB;IAC5B,YAAY;IACZ,WAAW;IACX,SAAS;IACT,WAAW;IACX,UAAU;IACV,UAAU;AACZ;AAEO,MAAM,oBAAoB;IAC/B,MAAM;IACN,kBAAkB;IAClB,WAAW;IACX,QAAQ;IACR,SAAS;AACX;AAEO,MAAM,sBAAsB;IACjC,SAAS;IACT,WAAW;IACX,UAAU;IACV,UAAU;AACZ"}},
    {"offset": {"line": 1477, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1482, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/configs/i18n.js"],"sourcesContent":["export const i18n = {\r\n  defaultLocale: 'en',\r\n  locales: ['en', 'fr', 'ar'],\r\n  langDirection: {\r\n    en: 'ltr',\r\n    fr: 'ltr',\r\n    ar: 'rtl'\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAO,MAAM,OAAO;IAClB,eAAe;IACf,SAAS;QAAC;QAAM;QAAM;KAAK;IAC3B,eAAe;QACb,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;AACF"}},
    {"offset": {"line": 1498, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1503, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/utils/string.js"],"sourcesContent":["export const ensurePrefix = (str, prefix) => (str.startsWith(prefix) ? str : `${prefix}${str}`)\r\nexport const withoutSuffix = (str, suffix) => (str.endsWith(suffix) ? str.slice(0, -suffix.length) : str)\r\nexport const withoutPrefix = (str, prefix) => (str.startsWith(prefix) ? str.slice(prefix.length) : str)\r\n"],"names":[],"mappings":";;;;;AAAO,MAAM,eAAe,CAAC,KAAK,SAAY,IAAI,UAAU,CAAC,UAAU,MAAM,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC;AACvF,MAAM,gBAAgB,CAAC,KAAK,SAAY,IAAI,QAAQ,CAAC,UAAU,IAAI,KAAK,CAAC,GAAG,CAAC,OAAO,MAAM,IAAI;AAC9F,MAAM,gBAAgB,CAAC,KAAK,SAAY,IAAI,UAAU,CAAC,UAAU,IAAI,KAAK,CAAC,OAAO,MAAM,IAAI"}},
    {"offset": {"line": 1511, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1516, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/utils/i18n.js"],"sourcesContent":["// Config Imports\r\nimport { i18n } from '@configs/i18n'\r\n\r\n// Util Imports\r\nimport { ensurePrefix } from '@/utils/string'\r\n\r\n// Check if the url is missing the locale\r\nexport const isUrlMissingLocale = url => {\r\n  return i18n.locales.every(locale => !(url.startsWith(`/${locale}/`) || url === `/${locale}`))\r\n}\r\n\r\n// Get the localized url\r\nexport const getLocalizedUrl = (url, languageCode) => {\r\n  if (!url || !languageCode) throw new Error(\"URL or Language Code can't be empty\")\r\n\r\n  return isUrlMissingLocale(url) ? `/${languageCode}${ensurePrefix(url, '/')}` : url\r\n}\r\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;;;;;;;AAOV,MAAM,qBAAqB,CAAA;IAChC,OAAO,yHAAA,CAAA,OAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA,SAAU,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC;AAC7F;AAGO,MAAM,kBAAkB,CAAC,KAAK;IACnC,IAAI,CAAC,OAAO,CAAC,cAAc,MAAM,IAAI,MAAM;IAE3C,OAAO,mBAAmB,OAAO,CAAC,CAAC,EAAE,aAAa,EAAE,CAAA,GAAA,yHAAA,CAAA,eAAY,AAAD,EAAE,KAAK,KAAK,CAAC,GAAG;AACjF"}},
    {"offset": {"line": 1533, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1538, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/graphql/fragments.js"],"sourcesContent":["import {gql} from \"@apollo/client\";\r\n\r\nexport const PRODUCT_BASE_FIELDS = gql`\r\nfragment productBaseFields on products {\r\n  id\r\n  title\r\n  price\r\n  product_medias(order_by: {updated_at: desc}, limit: 1) {\r\n    id\r\n    media_url\r\n  }\r\n  product_discounts(limit: 1, order_by: {discounted_value: desc}) {\r\n    id\r\n    discount_type\r\n    discounted_value\r\n  }\r\n}\r\n`;\r\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,sBAAsB,iJAAA,CAAA,MAAG,CAAC;;;;;;;;;;;;;;;AAevC,CAAC"}},
    {"offset": {"line": 1560, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1565, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/graphql/queries.js"],"sourcesContent":["import { gql } from '@apollo/client'\r\nimport { PRODUCT_BASE_FIELDS } from './fragments'\r\n\r\nexport const GET_USERS = gql`\r\n  query getUsers {\r\n    users {\r\n      id\r\n      name\r\n      phone\r\n      profile_picture_url\r\n      role\r\n      status\r\n      delivery_name\r\n      delivery_phone\r\n      delivery_address\r\n      created_at\r\n      dealer {\r\n        id\r\n        name\r\n        phone\r\n        address\r\n        city_name\r\n        township_name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_USER_BY_ID = gql`\r\n  query getUsers($userId: uuid!) {\r\n    users_by_pk(id: $userId) {\r\n      id\r\n      name\r\n      phone\r\n      profile_picture_url\r\n      role\r\n      status\r\n      delivery_name\r\n      delivery_phone\r\n      delivery_address\r\n      dealer {\r\n        id\r\n        name\r\n        phone\r\n        address\r\n        city_name\r\n        township_name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n// product\r\nexport const GET_PRODUCT_CATEGORIES = gql`\r\n  query getProductCategories {\r\n    product_categories(order_by: { updated_at: desc }) {\r\n      id\r\n      title\r\n      image_url\r\n      created_at\r\n      updated_at\r\n      products_aggregate {\r\n        aggregate {\r\n          count\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_PRODUCTS = gql`\r\n  query getProducts {\r\n    products(order_by: { updated_at: desc }) {\r\n      id\r\n      title\r\n      created_at\r\n      updated_at\r\n      description_html\r\n      serial_number\r\n      product_medias(order_by: { updated_at: desc }, limit: 1) {\r\n        id\r\n        media_url\r\n      }\r\n      product_category {\r\n        id\r\n        title\r\n        image_url\r\n      }\r\n      brand {\r\n        id\r\n        title\r\n        image_url\r\n      }\r\n      price\r\n      sku\r\n      disabled\r\n    }\r\n  }\r\n`\r\n\r\nexport const PRODUCTS_BY_ID = gql`\r\n  query productById($id: uuid!) {\r\n    products_by_pk(id: $id) {\r\n      id\r\n      title\r\n      serial_number\r\n      description_html\r\n      product_medias(order_by: { updated_at: desc }, limit: 1) {\r\n        id\r\n        media_url\r\n      }\r\n      product_category {\r\n        id\r\n        title\r\n        image_url\r\n      }\r\n      product_discounts {\r\n        id\r\n        min_order\r\n        discounted_value\r\n      }\r\n      brand {\r\n        id\r\n        title\r\n        image_url\r\n      }\r\n      price\r\n      sku\r\n      disabled\r\n    }\r\n  }\r\n`\r\n\r\nexport const PRODUCT_BRANDs = gql`\r\n  query productBrand {\r\n    brands {\r\n      id\r\n      title\r\n    }\r\n  }\r\n`\r\nexport const PRODUCT_CATS = gql`\r\n  query productCat {\r\n    product_categories {\r\n      id\r\n      title\r\n    }\r\n  }\r\n`\r\nexport const GET_BRANDS = gql`\r\n  query brands {\r\n    brands(order_by: { updated_at: desc }) {\r\n      id\r\n      title\r\n      image_url\r\n      created_at\r\n      updated_at\r\n      products_aggregate {\r\n        aggregate {\r\n          count\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const GET_NEWS_CATS = gql`\r\n  query newCategorys {\r\n    news_categories {\r\n      id\r\n      title\r\n      created_at\r\n      updated_at\r\n      news_aggregate {\r\n        aggregate {\r\n          count\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const NEW_CAT_BY_ID = gql`\r\n  query newCatById($id: uuid!) {\r\n    news_categories_by_pk(id: $id) {\r\n      id\r\n      title\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_NEWS = gql`\r\n  query news {\r\n    news(order_by: { updated_at: desc }) {\r\n      id\r\n      title\r\n      body_html\r\n      image_url\r\n      disabled\r\n      created_at\r\n      news_category_id\r\n      news_category {\r\n        id\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const NEW_BY_ID = gql`\r\n  query newId($id: uuid!) {\r\n    news_by_pk(id: $id) {\r\n      id\r\n      title\r\n      image_url\r\n      news_category {\r\n        id\r\n        title\r\n      }\r\n      news_related_products {\r\n        product {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const NEWS_CATS = gql`\r\n  query newCats {\r\n    news_categories {\r\n      id\r\n      title\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_ALL_INVOICES = gql`\r\n  query getAllInvoices {\r\n    invoices(order_by: { updated_at: desc }) {\r\n      id\r\n      invoice_number\r\n      status\r\n      balance\r\n      created_at\r\n      total\r\n      discount\r\n      invoice_status {\r\n        id\r\n        name\r\n      }\r\n      user {\r\n        id\r\n        name\r\n        profile_picture_url\r\n      }\r\n      created_at\r\n      updated_at\r\n\r\n      invoice_file_url\r\n    }\r\n  }\r\n`\r\nexport const INVOICE_TABS = gql`\r\n  query invoiceTabs($user_id: uuid!) {\r\n    invoices(where: { user_id: { _eq: $user_id } }) {\r\n      id\r\n      invoice_number\r\n      status\r\n      balance\r\n      total\r\n      discount\r\n      invoice_status {\r\n        id\r\n        name\r\n      }\r\n      user {\r\n        id\r\n        name\r\n        profile_picture_url\r\n      }\r\n      created_at\r\n      updated_at\r\n\r\n      invoice_file_url\r\n    }\r\n  }\r\n`\r\n\r\nexport const INVOICE_STATUS = gql`\r\n  query invoiceStatus {\r\n    invoice_status {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`\r\n\r\nexport const INVOICE_BY_ID = gql`\r\n  query invoiceById($id: uuid!) {\r\n    invoices_by_pk(id: $id) {\r\n      id\r\n      balance\r\n      invoice_number\r\n      status\r\n      note\r\n      total\r\n      created_at\r\n      updated_at\r\n      user {\r\n        id\r\n        name\r\n        email\r\n        phone\r\n      }\r\n      order {\r\n        id\r\n        items_total\r\n        order_items {\r\n          product {\r\n            title\r\n            id\r\n            price\r\n            brand {\r\n              id\r\n              title\r\n            }\r\n          }\r\n\r\n          quantity\r\n          total\r\n        }\r\n        receiver_name\r\n        receiver_phone\r\n        receiver_address\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAYMENT_BY_INVOICE_ID = gql`\r\n  query payments($invoice_id: uuid!) {\r\n    payments(where: { invoice_id: { _eq: $invoice_id } }) {\r\n      id\r\n      amount\r\n      payment_date\r\n      payment_method\r\n      updated_at\r\n      created_at\r\n      invoice_id\r\n    }\r\n  }\r\n`\r\nexport const NEWS_RELATED_PRODUCTS = gql`\r\n  query newProduct($news_id: uuid!) {\r\n    news_related_products(where: { news_id: { _eq: $news_id } }) {\r\n      id\r\n      news_id\r\n      product_id\r\n    }\r\n  }\r\n`\r\n\r\nexport const PRODUCT_SELECT = gql`\r\n  query productSelect {\r\n    products {\r\n      id\r\n      title\r\n    }\r\n  }\r\n`\r\nexport const GET_ALL_QUOTATIONS = gql`\r\n  query getAllQuotations {\r\n    quotations(order_by: { updated_at: desc }) {\r\n      id\r\n      dealer_remark\r\n      created_at\r\n      updated_at\r\n      status\r\n      quotation_status {\r\n        id\r\n        name\r\n      }\r\n      user {\r\n        id\r\n        name\r\n        profile_picture_url\r\n      }\r\n      quotation_file_url\r\n      quotation_number\r\n      total_amount\r\n    }\r\n  }\r\n`\r\nexport const QUOTATION_TABS = gql`\r\n  query quotationTabs($user_id: uuid!) {\r\n    quotations(where: { user_id: { _eq: $user_id } }) {\r\n      id\r\n      dealer_remark\r\n      created_at\r\n      updated_at\r\n      status\r\n      quotation_status {\r\n        id\r\n        name\r\n      }\r\n      user {\r\n        id\r\n        name\r\n        profile_picture_url\r\n      }\r\n      quotation_file_url\r\n      quotation_number\r\n      total_amount\r\n    }\r\n  }\r\n`\r\nexport const GET_ALL_SERVICE_CENTERS = gql`\r\n  query serviceCenters {\r\n    service_centers(order_by: { updated_at: desc }) {\r\n      id\r\n      name\r\n      address\r\n      phone\r\n      created_at\r\n      updated_at\r\n    }\r\n  }\r\n`\r\nexport const QUOTATION_STATUS = gql`\r\n  query aa {\r\n    quotation_status {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`\r\nexport const QUOTATION_BY_ID = gql`\r\n  query quotationById($id: uuid!) {\r\n    quotations_by_pk(id: $id) {\r\n      id\r\n      created_at\r\n      updated_at\r\n      dealer_remark\r\n      total_amount\r\n      quotation_number\r\n      status\r\n      user {\r\n        id\r\n        name\r\n        phone\r\n        orders {\r\n          receiver_address\r\n          receiver_name\r\n          receiver_phone\r\n        }\r\n      }\r\n      quotation_items {\r\n        id\r\n        quantity\r\n        product {\r\n          price\r\n          title\r\n\r\n          brand {\r\n            id\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const GET_ALL_SERVICE_TOKENS = gql`\r\n  query getAllServiceTokens {\r\n    service_tokens(order_by: { updated_at: desc }) {\r\n      id\r\n      completed_at\r\n      created_at\r\n      description\r\n      delivering_at\r\n      document_photo_url\r\n      is_warranty_valid\r\n      issue_media_type\r\n      issue_media_url\r\n      picking_up_at\r\n      product\r\n      processing_at\r\n      service_fee\r\n      service_status {\r\n        name\r\n      }\r\n      status\r\n      token_number\r\n      updated_at\r\n      user {\r\n        name\r\n        id\r\n        profile_picture_url\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const SERVICE_TOKEN_TABS = gql`\r\n  query serviceTokenTabs($user_id: uuid!) {\r\n    service_tokens(where: { user_id: { _eq: $user_id } }) {\r\n      id\r\n      completed_at\r\n      created_at\r\n      description\r\n      delivering_at\r\n      document_photo_url\r\n      is_warranty_valid\r\n      issue_media_type\r\n      issue_media_url\r\n      picking_up_at\r\n      product\r\n      processing_at\r\n      service_fee\r\n      service_status {\r\n        name\r\n      }\r\n      status\r\n      token_number\r\n      updated_at\r\n      user {\r\n        name\r\n        id\r\n        profile_picture_url\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const SERVICE_TOKEN_BY_ID = gql`\r\n  query serviceTokensById($id: uuid!) {\r\n    service_tokens_by_pk(id: $id) {\r\n      id\r\n      completed_at\r\n      created_at\r\n      description\r\n      delivering_at\r\n      document_photo_url\r\n      is_warranty_valid\r\n      issue_media_type\r\n      issue_media_url\r\n      picking_up_at\r\n      product\r\n      processing_at\r\n      service_fee\r\n      service_status {\r\n        name\r\n      }\r\n      status\r\n      token_number\r\n      updated_at\r\n      user {\r\n        name\r\n        id\r\n        phone\r\n        email\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const ORDER_STATUS = gql`\r\n  query OrderStatus {\r\n    order_status {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`\r\nexport const GET_ALL_ORDERS = gql`\r\n  query getAllOrders {\r\n    orders(order_by: { updated_at: desc }) {\r\n      id\r\n      order_number\r\n      completion_photo_url\r\n      completed_at\r\n      created_at\r\n      delivering_at\r\n      delivery_fee\r\n      discount\r\n      items_total\r\n      order_status {\r\n        name\r\n        id\r\n      }\r\n      ordered_at\r\n      preparing_at\r\n      receiver_address\r\n      receiver_name\r\n      receiver_phone\r\n      remark\r\n      status\r\n      total\r\n      updated_at\r\n      user {\r\n        id\r\n        name\r\n        profile_picture_url\r\n        user_role {\r\n          role_name\r\n        }\r\n      }\r\n      user_id\r\n    }\r\n  }\r\n`\r\nexport const ORDERS_TABS = gql`\r\n  query orderTabs($user_id: uuid!) {\r\n    orders(where: { user_id: { _eq: $user_id } }) {\r\n      id\r\n      order_number\r\n      completion_photo_url\r\n      completed_at\r\n      created_at\r\n      delivering_at\r\n      delivery_fee\r\n      discount\r\n      items_total\r\n      order_status {\r\n        name\r\n        id\r\n      }\r\n      ordered_at\r\n      preparing_at\r\n      receiver_address\r\n      receiver_name\r\n      receiver_phone\r\n      remark\r\n      status\r\n      total\r\n      updated_at\r\n      user {\r\n        id\r\n        name\r\n        profile_picture_url\r\n        user_role {\r\n          role_name\r\n        }\r\n      }\r\n      user_id\r\n    }\r\n  }\r\n`\r\nexport const ORDERS_BY_ID = gql`\r\n  query ordersById($id: uuid!) {\r\n    orders_by_pk(id: $id) {\r\n      id\r\n      order_number\r\n      completion_photo_url\r\n      completed_at\r\n      created_at\r\n      delivering_at\r\n      delivery_fee\r\n      discount\r\n      items_total\r\n      order_status {\r\n        name\r\n        id\r\n      }\r\n      ordered_at\r\n      preparing_at\r\n      receiver_address\r\n      receiver_name\r\n      receiver_phone\r\n      remark\r\n      status\r\n      total\r\n      updated_at\r\n      receiver_name\r\n      receiver_phone\r\n      order_items {\r\n        id\r\n        quantity\r\n        total\r\n        unit_price\r\n        product {\r\n          id\r\n          title\r\n          brand {\r\n            id\r\n            title\r\n          }\r\n        }\r\n      }\r\n      user {\r\n        id\r\n        name\r\n        phone\r\n        email\r\n        profile_picture_url\r\n        user_role {\r\n          role_name\r\n        }\r\n      }\r\n      user_id\r\n    }\r\n  }\r\n`\r\nexport const ORDERS_AGGREGATE = gql`\r\n  query orderAggregate {\r\n    activeOrder: orders_aggregate(\r\n      where: {\r\n        _and: [{ status: { _neq: \"completed\" } }, { status: { _neq: \"canceled\" } }, { status: { _neq: \"refunded\" } }]\r\n      }\r\n    ) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    completeOrder: orders_aggregate(where: { status: { _eq: \"completed\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    refundedOrder: orders_aggregate(where: { status: { _eq: \"refunded\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    canceledOrder: orders_aggregate(where: { status: { _eq: \"canceled\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const PRODUCT_AGGREGATE = gql`\r\n  query productAggregate {\r\n    brandProduct: products_aggregate(distinct_on: brand_id) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    categoryProduct: products_aggregate(distinct_on: category_id) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    disableProduct: products_aggregate(where: { disabled: { _eq: true } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    activeProduct: products_aggregate(where: { disabled: { _eq: false } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const NEWS_AGGREGATE = gql`\r\n  query productAggregate {\r\n    totalNews: news_aggregate {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    categoryNews: news_aggregate(distinct_on: news_category_id) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    disableNews: news_aggregate(where: { disabled: { _eq: true } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    activeNews: news_aggregate(where: { disabled: { _eq: false } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const GET_ALL_DEALERS = gql`\r\n  query getAllDealers {\r\n    dealers {\r\n      id\r\n      address\r\n      city_name\r\n      name\r\n      phone\r\n      township_name\r\n      user {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const GET_ALL_ADMINS = gql`\r\n  query admins {\r\n    admins(order_by: { updated_at: desc }) {\r\n      id\r\n      name\r\n      email\r\n      role\r\n      password\r\n      created_at\r\n      updated_at\r\n    }\r\n  }\r\n`\r\nexport const USER_ROLES = gql`\r\n  query userRoles {\r\n    user_roles {\r\n      id\r\n      role_name\r\n    }\r\n  }\r\n`\r\nexport const GET_PAYMENT_METHODS = gql`\r\n  query paymentMethods {\r\n    payment_methods {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`\r\n\r\nexport const ADMIN_BY_PK = gql`\r\n  query adminById($id: uuid!) {\r\n    admins_by_pk(id: $id) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`\r\nexport const ADMIN_ROLES = gql`\r\n  query adminRoles {\r\n    admin_roles {\r\n      id\r\n      role_name\r\n    }\r\n  }\r\n`\r\nexport const ADMIN_ROLES_AGGREGATE = gql`\r\n  query orderAggregate {\r\n    saleRole: admin_roles_aggregate(where: { role_name: { _eq: \"sale\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    financeRole: admin_roles_aggregate(where: { role_name: { _eq: \"finance\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    serviceRole: admin_roles_aggregate(where: { role_name: { _eq: \"service\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    adminRole: admin_roles_aggregate(where: { role_name: { _eq: \"admin\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n\r\n    managerRole: admin_roles_aggregate(where: { role_name: { _eq: \"manager\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n\r\n    deliveryRole: admin_roles_aggregate(where: { role_name: { _eq: \"delivery\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DEALERS_BY_ID = gql`\r\n  query dealerById($id: uuid!) {\r\n    dealers_by_pk(id: $id) {\r\n      id\r\n      address\r\n      city_name\r\n      name\r\n      phone\r\n      township_name\r\n      user {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const USER_STATUS_AGGREGATE = gql`\r\n  query userAggregate {\r\n    activeUser: users_aggregate(where: { status: { _eq: \"active\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    pendingUser: users_aggregate(where: { status: { _eq: \"pending\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    disabelUser: users_aggregate(where: { status: { _eq: \"disabled\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const USERS_ROLE_AGGREGATES = gql`\r\n  query userAggregate {\r\n    consumerUser: users_aggregate(where: { role: { _eq: \"consumer\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    dealerUser: users_aggregate(where: { role: { _eq: \"dealer\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const SERVICE_AGGREGATE = gql`\r\n  query userAggregate {\r\n    completedService: service_tokens_aggregate(where: { status: { _eq: \"complete\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    activeService: service_tokens_aggregate(\r\n      where: { _and: [{ status: { _neq: \"completed\" } }, { status: { _neq: \"canceled\" } }] }\r\n    ) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    canceledService: service_tokens_aggregate(where: { status: { _eq: \"canceled\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    pickService: service_tokens_aggregate(where: { status: { _eq: \"picking up\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    receivedService: service_tokens_aggregate(where: { status: { _eq: \"received token\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    processingService: service_tokens_aggregate(where: { status: { _eq: \"processing\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    deliverService: service_tokens_aggregate(where: { status: { _eq: \"delivering\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const USER_SERVICE_AGGREGATE = gql`\r\n  query userServiceAggregate {\r\n    users_aggregate(where: { service_tokens: { id: { _is_null: false } } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const USER_INVOICE_AGGREGATE = gql`\r\n  query userServiceAggregate {\r\n    users_aggregate(where: { invoices: { id: { _is_null: false } } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const USER_QUOTATION_AGGREGATE = gql`\r\n  query userServiceAggregate {\r\n    users_aggregate(where: { quotations: { id: { _is_null: false } } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const INVOICE_AGGREGATE = gql`\r\n  query userAggregate {\r\n    paidInvoice: invoices_aggregate(where: { status: { _eq: \"paid\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    UnPaindInvoice: users_aggregate(where: { status: { _eq: \"unpaid\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    completeInvoice: users_aggregate(where: { status: { _eq: \"completed\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    pendingInvoice: users_aggregate(where: { status: { _eq: \"pending\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    partiallPaidInvoice: users_aggregate(where: { status: { _eq: \"partially paid\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const QUOTATION_AGGREGATE = gql`\r\n  query quotationAggregate {\r\n    pendingQuotation: quotations_aggregate(where: { status: { _eq: \"pending\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    acceptedQuotation: quotations_aggregate(where: { status: { _eq: \"accepted\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    rejectedQuotation: quotations_aggregate(where: { status: { _eq: \"rejected\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    completedQuotation: quotations_aggregate(where: { status: { _eq: \"completed\" } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const SERVICE_STATUS = gql`\r\n  query serviceStatus {\r\n    service_status {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_ALL_PRODUCT_DISCOUNT = gql`\r\n  query produtDiscount($product_id: uuid!) {\r\n    product_discounts(order_by: { updated_at: desc }, where: { product_id: { _eq: $product_id } }) {\r\n      id\r\n      customer_type\r\n      discount_type\r\n      created_at\r\n      updated_at\r\n      discounted_value\r\n      min_order\r\n      product {\r\n        brand {\r\n          id\r\n          title\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const PRODCUT_DISCOUNT_BY_ID = gql`\r\n  query productDiscountById($id: uuid!) {\r\n    product_discounts_by_pk(id: $id) {\r\n      id\r\n      customer_type\r\n      discount_type\r\n      created_at\r\n      updated_at\r\n      discounted_value\r\n      min_order\r\n      product {\r\n        brand {\r\n          id\r\n          title\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2697, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2702, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/views/user/view/user-right/order/OrderUserListTable.jsx"],"sourcesContent":["'use client'\r\n\r\n// React Imports\r\nimport { useState, useMemo } from 'react'\r\n\r\n// Next Imports\r\nimport Link from 'next/link'\r\nimport { useParams } from 'next/navigation'\r\n\r\n// MUI Imports\r\nimport Card from '@mui/material/Card'\r\nimport CardHeader from '@mui/material/CardHeader'\r\nimport Button from '@mui/material/Button'\r\nimport Typography from '@mui/material/Typography'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Menu from '@mui/material/Menu'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport TablePagination from '@mui/material/TablePagination'\r\n\r\n// Third-party Imports\r\nimport classnames from 'classnames'\r\nimport { rankItem } from '@tanstack/match-sorter-utils'\r\nimport {\r\n  createColumnHelper,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  useReactTable,\r\n  getFilteredRowModel,\r\n  getFacetedRowModel,\r\n  getFacetedUniqueValues,\r\n  getFacetedMinMaxValues,\r\n  getPaginationRowModel,\r\n  getSortedRowModel\r\n} from '@tanstack/react-table'\r\n\r\n// Component Imports\r\nimport OptionMenu from '@core/components/option-menu'\r\nimport CustomAvatar from '@core/components/mui/Avatar'\r\nimport { orderStatusColor } from '@/components/helper/StatusColor'\r\nimport { orderStausIcon } from '@/components/helper/StatusIcon'\r\n// Util Imports\r\nimport { getLocalizedUrl } from '@/utils/i18n'\r\n\r\n// Style Imports\r\nimport { useSuspenseQuery } from '@apollo/client'\r\nimport { GET_ALL_INVOICES, GET_USER_BY_ID, ORDERS_TABS } from '@/graphql/queries'\r\nimport tableStyles from '@core/styles/table.module.css'\r\nimport { Chip } from '@mui/material'\r\n\r\nconst fuzzyFilter = (row, columnId, value, addMeta) => {\r\n  // Rank the item\r\n  const itemRank = rankItem(row.getValue(columnId), value)\r\n\r\n  // Store the itemRank info\r\n  addMeta({\r\n    itemRank\r\n  })\r\n\r\n  // Return if the item should be filtered in/out\r\n  return itemRank.passed\r\n}\r\n\r\n// Column Definitions\r\nconst columnHelper = createColumnHelper()\r\n\r\nconst OrderUserListTable = () => {\r\n  const { userId } = useParams()\r\n\r\n  const { data: userIds } = useSuspenseQuery(GET_USER_BY_ID, {\r\n    variables: { userId: userId }\r\n  })\r\n\r\n  const { data: orderTabs } = useSuspenseQuery(ORDERS_TABS, { variables: { user_id: userIds?.users_by_pk?.id } })\r\n\r\n  // States\r\n  const [rowSelection, setRowSelection] = useState({})\r\n  const [data, setData] = useState(...[orderTabs.orders])\r\n  const [globalFilter, setGlobalFilter] = useState('')\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n\r\n  // Vars\r\n  const open = Boolean(anchorEl)\r\n\r\n  // Hooks\r\n  const { lang: locale } = useParams()\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      columnHelper.accessor('id', {\r\n        header: 'Order Number',\r\n        cell: ({ row }) => (\r\n          <Typography\r\n            component={Link}\r\n            href={getLocalizedUrl(`/orders/details/${row.original.id}`, locale)}\r\n            color='primary'\r\n          >{`${row.original.order_number}`}</Typography>\r\n        )\r\n      }),\r\n\r\n      columnHelper.accessor('total', {\r\n        header: 'Total',\r\n        cell: ({ row }) => <Typography>{`${row.original.total.toLocaleString()}`}</Typography>\r\n      }),\r\n\r\n      columnHelper.accessor('status', {\r\n        header: 'Status',\r\n        cell: ({ row }) => (\r\n          // <Tooltip\r\n          //   title={\r\n          //     <div>\r\n          //       <Typography variant='body2' component='span' className='text-inherit'>\r\n          //         {row.original.status}\r\n          //       </Typography>\r\n          //       <br />\r\n          //       <Typography variant='body2' component='span' className='text-inherit'>\r\n          //         Receiver Name:\r\n          //       </Typography>\r\n          //       {row.original.receiver_name}\r\n          //       <br />\r\n          //       <Typography variant='body2' component='span' className='text-inherit'>\r\n          //         Due Date:\r\n          //       </Typography>\r\n          //       {row.original.created_at.substring(0, 10)}\r\n          //     </div>\r\n          //   }\r\n          // >\r\n          //   <CustomAvatar skin='light' color={orderStatusColor[row.original.status]} size={28}>\r\n          //     <i className={classnames('text-base', orderStausIcon[row.original.status])} />\r\n          //   </CustomAvatar>\r\n          // </Tooltip>\r\n          <div className='flex items-center gap-3'>\r\n            <Chip\r\n              variant='tonal'\r\n              label={row.original.status}\r\n              size='small'\r\n              color={orderStatusColor[row.original.status]}\r\n              className='capitalize'\r\n            />\r\n          </div>\r\n        )\r\n      }),\r\n      columnHelper.accessor('action', {\r\n        header: 'Action',\r\n        cell: ({ row }) => (\r\n          <div className='flex items-center'>\r\n            {/* <IconButton onClick={() => setData(data?.filter(invoice => invoice.id !== row.original.id))}>\r\n              <i className='ri-delete-bin-7-line text-textSecondary' />\r\n            </IconButton> */}\r\n            <IconButton>\r\n              <Link href={getLocalizedUrl(`/orders/details/${row.original.id}`, locale)} className='flex'>\r\n                <i className='ri-eye-line text-textSecondary' />\r\n              </Link>\r\n            </IconButton>\r\n            {/* <OptionMenu\r\n              iconButtonProps={{ size: 'medium' }}\r\n              iconClassName='text-textSecondary'\r\n              options={[\r\n                {\r\n                  text: 'Download',\r\n                  icon: 'ri-download-line',\r\n                  menuItemProps: { className: 'flex items-center gap-2 text-textSecondary' }\r\n                },\r\n                {\r\n                  text: 'Edit',\r\n                  icon: 'ri-pencil-line',\r\n                  href: getLocalizedUrl(`/invoice/edit/${row.original.id}`, locale),\r\n                  linkProps: {\r\n                    className: classnames('flex items-center bs-[40px] plb-2 pli-4 is-full gap-2 text-textSecondary')\r\n                  }\r\n                },\r\n                {\r\n                  text: 'Duplicate',\r\n                  icon: 'ri-file-copy-line',\r\n                  menuItemProps: { className: 'flex items-center gap-2 text-textSecondary' }\r\n                }\r\n              ]}\r\n            /> */}\r\n          </div>\r\n        ),\r\n        enableSorting: false\r\n      })\r\n    ],\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  )\r\n\r\n  const table = useReactTable({\r\n    data: data,\r\n    columns,\r\n    filterFns: {\r\n      fuzzy: fuzzyFilter\r\n    },\r\n    state: {\r\n      rowSelection,\r\n      globalFilter\r\n    },\r\n    initialState: {\r\n      pagination: {\r\n        pageSize: 10\r\n      }\r\n    },\r\n    enableRowSelection: true, //enable row selection for all rows\r\n    // enableRowSelection: row => row.original.age > 18, // or enable row selection conditionally per row\r\n    globalFilterFn: fuzzyFilter,\r\n    onRowSelectionChange: setRowSelection,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    onGlobalFilterChange: setGlobalFilter,\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n    getFacetedRowModel: getFacetedRowModel(),\r\n    getFacetedUniqueValues: getFacetedUniqueValues(),\r\n    getFacetedMinMaxValues: getFacetedMinMaxValues()\r\n  })\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title='Order List'\r\n        sx={{ '& .MuiCardHeader-action': { m: 0 } }}\r\n        // action={\r\n        //   <>\r\n        //     <Button\r\n        //       variant='contained'\r\n        //       aria-haspopup='true'\r\n        //       onClick={handleClick}\r\n        //       aria-expanded={open ? 'true' : undefined}\r\n        //       endIcon={<i className='ri-arrow-down-s-line' />}\r\n        //       aria-controls={open ? 'user-view-overview-export' : undefined}\r\n        //     >\r\n        //       Export\r\n        //     </Button>\r\n        //     <Menu open={open} anchorEl={anchorEl} onClose={handleClose} id='user-view-overview-export'>\r\n        //       <MenuItem onClick={handleClose} className='uppercase'>\r\n        //         pdf\r\n        //       </MenuItem>\r\n        //       <MenuItem onClick={handleClose} className='uppercase'>\r\n        //         xlsx\r\n        //       </MenuItem>\r\n        //       <MenuItem onClick={handleClose} className='uppercase'>\r\n        //         csv\r\n        //       </MenuItem>\r\n        //     </Menu>\r\n        //   </>\r\n        // }\r\n      />\r\n      <div className='overflow-x-auto'>\r\n        <table className={tableStyles.table}>\r\n          <thead>\r\n            {table.getHeaderGroups().map(headerGroup => (\r\n              <tr key={headerGroup.id}>\r\n                {headerGroup.headers.map(header => (\r\n                  <th key={header.id} {...(header.id === 'action' && { className: 'is-24' })}>\r\n                    {header.isPlaceholder ? null : (\r\n                      <>\r\n                        <div\r\n                          className={classnames({\r\n                            'flex items-center': header.column.getIsSorted(),\r\n                            'cursor-pointer select-none': header.column.getCanSort()\r\n                          })}\r\n                          onClick={header.column.getToggleSortingHandler()}\r\n                        >\r\n                          {flexRender(header.column.columnDef.header, header.getContext())}\r\n                          {{\r\n                            asc: <i className='ri-arrow-up-s-line text-xl' />,\r\n                            desc: <i className='ri-arrow-down-s-line text-xl' />\r\n                          }[header.column.getIsSorted()] ?? null}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody>\r\n            {table\r\n              .getRowModel()\r\n              .rows.slice(0, table.getState().pagination.pageSize)\r\n              .map(row => {\r\n                return (\r\n                  <tr key={row.id} className={classnames({ selected: row.getIsSelected() })}>\r\n                    {row.getVisibleCells().map(cell => (\r\n                      <td key={cell.id} {...(cell.id.includes('action') && { className: 'is-24' })}>\r\n                        {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                )\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50]}\r\n        component='div'\r\n        className='border-bs'\r\n        count={table.getFilteredRowModel().rows.length}\r\n        rowsPerPage={table.getState().pagination.pageSize}\r\n        page={table.getState().pagination.pageIndex}\r\n        SelectProps={{\r\n          inputProps: { 'aria-label': 'rows per page' }\r\n        }}\r\n        onPageChange={(_, page) => {\r\n          table.setPageIndex(page)\r\n        }}\r\n        onRowsPerPageChange={e => table.setPageSize(Number(e.target.value))}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default OrderUserListTable\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3086, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3091, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/server/actions.js"],"sourcesContent":["/**\r\n * ! The server actions below are used to fetch the static data from the fake-db. If you're using an ORM\r\n * ! (Object-Relational Mapping) or a database, you can swap the code below with your own database queries.\r\n */\r\n'use server'\r\n\r\n// Data Imports\r\nimport { db as eCommerceData } from '@/fake-db/apps/ecommerce'\r\nimport { db as academyData } from '@/fake-db/apps/academy'\r\nimport { db as vehicleData } from '@/fake-db/apps/logistics'\r\nimport { db as invoiceData } from '@/fake-db/apps/invoice'\r\nimport { db as userData } from '@/fake-db/apps/userList'\r\nimport { db as permissionData } from '@/fake-db/apps/permissions'\r\nimport { db as profileData } from '@/fake-db/pages/userProfile'\r\nimport { db as faqData } from '@/fake-db/pages/faq'\r\nimport { db as pricingData } from '@/fake-db/pages/pricing'\r\nimport { db as statisticsData } from '@/fake-db/pages/widgetExamples'\r\n\r\nexport const getEcommerceData = async () => {\r\n  return eCommerceData\r\n}\r\n\r\nexport const getAcademyData = async () => {\r\n  return academyData\r\n}\r\n\r\nexport const getLogisticsData = async () => {\r\n  return vehicleData\r\n}\r\n\r\nexport const getInvoiceData = async () => {\r\n  return invoiceData\r\n}\r\n\r\nexport const getUserData = async () => {\r\n  return userData\r\n}\r\n\r\nexport const getPermissionsData = async () => {\r\n  return permissionData\r\n}\r\n\r\nexport const getProfileData = async () => {\r\n  return profileData\r\n}\r\n\r\nexport const getFaqData = async () => {\r\n  return faqData\r\n}\r\n\r\nexport const getPricingData = async () => {\r\n  return pricingData\r\n}\r\n\r\nexport const getStatisticsData = async () => {\r\n  return statisticsData\r\n}\r\n"],"names":[],"mappings":"AAAA;;;CAGC"}},
    {"offset": {"line": 3119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3124, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/views/user/view/user-right/order/index.jsx"],"sourcesContent":["// MUI Imports\r\nimport Grid from '@mui/material/Grid'\r\n\r\n// Component Imports\r\nimport ProjectListTable from './ProjectListTable'\r\nimport UserActivityTimeLine from './UserActivityTimeline'\r\nimport OrderUserListTable from './OrderUserListTable'\r\n\r\n// Data Imports\r\nimport { getInvoiceData } from '@/app/server/actions'\r\nimport { useSuspenseQuery } from '@apollo/client'\r\nimport { GET_ALL_INVOICES } from '@/graphql/queries'\r\n\r\nconst OverViewTab = async () => {\r\n  return (\r\n    <Grid container spacing={6}>\r\n      <Grid item xs={12}>\r\n        <OrderUserListTable />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default OverViewTab\r\n"],"names":[],"mappings":"AAAA,cAAc;;;;;;;;;;;;;;;;;;;;;AAad,MAAM,cAAc;IAClB,qBACE,6LAAC,oJAAA,CAAA,UAAI;QAAC,SAAS;QAAC,SAAS;kBACvB,cAAA,6LAAC,oJAAA,CAAA,UAAI;YAAC,IAAI;YAAC,IAAI;sBACb,cAAA,6LAAC,gLAAA,CAAA,UAAkB;;;;;;;;;;;;;;;AAI3B;KARM;uCAUS"}},
    {"offset": {"line": 3172, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}