{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/Link.jsx"],"sourcesContent":["'use client'\r\n\r\n// React Imports\r\nimport { forwardRef } from 'react'\r\n\r\n// Next Imports\r\nimport NextLink from 'next/link'\r\n\r\nconst Link = (props, ref) => {\r\n  // Props\r\n  const { href, onClick, ...rest } = props\r\n\r\n  return (\r\n    <NextLink\r\n      ref={ref}\r\n      {...rest}\r\n      href={href || '/'}\r\n      onClick={onClick ? e => onClick(e) : !href ? e => e.preventDefault() : undefined}\r\n    />\r\n  )\r\n}\r\n\r\nexport default forwardRef(Link)\r\n"],"names":[],"mappings":";;;;;;;AAAA;;;;AAQA,MAAM,OAAO,CAAC,OAAO;IACnB,QAAQ;IACR,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,MAAM,GAAG;IAEnC,qBACE,uXAAC,2PAAA,CAAA,UAAQ;QACP,KAAK;QACJ,GAAG,IAAI;QACR,MAAM,QAAQ;QACd,SAAS,UAAU,CAAA,IAAK,QAAQ,KAAK,CAAC,OAAO,CAAA,IAAK,EAAE,cAAc,KAAK;;;;;;AAG7E;qDAEe,CAAA,GAAA,8UAAA,CAAA,aAAU,AAAD,EAAE"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/@core/styles/table.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"cellWithInput\": \"table-module__Mig-TG__cellWithInput\",\n  \"table\": \"table-module__Mig-TG__table\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/helper/Alert.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Snackbar } from '@mui/material'\r\nimport { useApp } from '@/app/ApolloWrapper'\r\nconst Alert = () => {\r\n  const { globalMsg, setGlobalMsg } = useApp()\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          horizontal: 'center',\r\n          vertical: 'top'\r\n        }}\r\n        open={Boolean(globalMsg)}\r\n        autoHideDuration={3000}\r\n        onClose={() => setGlobalMsg(null)}\r\n        message={globalMsg}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n"],"names":[],"mappings":";;;;;;;;;;;;AAGA,MAAM,QAAQ;IACZ,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,SAAM,AAAD;IAEzC,qBACE,uXAAC;kBACC,cAAA,uXAAC,iZAAA,CAAA,WAAQ;YACP,cAAc;gBACZ,YAAY;gBACZ,UAAU;YACZ;YACA,MAAM,QAAQ;YACd,kBAAkB;YAClB,SAAS,IAAM,aAAa;YAC5B,SAAS;;;;;;;;;;;AAIjB;uCAEe"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/graphql/mutations.js"],"sourcesContent":["import { gql } from '@apollo/client'\r\n\r\nexport const ADMIN_SIGN_IN = gql`\r\n  mutation adminSignIn($email: String!, $password: String!) {\r\n    AdminSignIn(email: $email, password: $password) {\r\n      token\r\n      message\r\n    }\r\n  }\r\n`\r\nexport const ADD_CATEGORY = gql`\r\n  mutation addCategory($data: product_categories_insert_input!) {\r\n    insert_product_categories_one(object: $data) {\r\n      id\r\n      title\r\n      image_url\r\n      created_at\r\n      products_aggregate {\r\n        aggregate {\r\n          count\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const ADD_BRAND = gql`\r\n  mutation addCategory($data: brands_insert_input!) {\r\n    insert_brands_one(object: $data) {\r\n      id\r\n      title\r\n      image_url\r\n      created_at\r\n      products_aggregate {\r\n        aggregate {\r\n          count\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const ADD_PRODUCT = gql`\r\n  mutation addProduct(\r\n    $title: String!\r\n    $description_html: String!\r\n    $brand_id: uuid!\r\n    $category_id: uuid!\r\n    $serial_number: String!\r\n    $price: numeric!\r\n    $product_medias: product_medias_arr_rel_insert_input!\r\n  ) {\r\n    insert_products_one(\r\n      object: {\r\n        title: $title\r\n        description_html: $description_html\r\n        brand_id: $brand_id\r\n        category_id: $category_id\r\n        serial_number: $serial_number\r\n        price: $price\r\n        product_medias: $product_medias\r\n      }\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const EDIT_RPODUCTS = gql`\r\n  mutation editProduct(\r\n    $id: uuid!\r\n    $title: String!\r\n    $description_html: String!\r\n    $brand_id: uuid!\r\n    $category_id: uuid!\r\n    $serial_number: String!\r\n    $price: numeric!\r\n  ) {\r\n    update_products_by_pk(\r\n      pk_columns: { id: $id }\r\n      _set: {\r\n        title: $title\r\n        description_html: $description_html\r\n        brand_id: $brand_id\r\n        category_id: $category_id\r\n        serial_number: $serial_number\r\n        price: $price\r\n      }\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const ADD_NEWS = gql`\r\n  mutation addNews($data: news_insert_input!) {\r\n    insert_news_one(object: $data) {\r\n      id\r\n      image_url\r\n      body_html\r\n      created_at\r\n      news_category {\r\n        title\r\n        id\r\n      }\r\n      disabled\r\n      news_category_id\r\n      title\r\n      updated_at\r\n    }\r\n  }\r\n`\r\n// delete\r\nexport const DELETE_PRODUCT = gql`\r\n  mutation deleteProduct($id: uuid!) {\r\n    delete_products_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const DELETE_PRODUCT_BRAND = gql`\r\n  mutation deleteBrand($id: uuid!) {\r\n    delete_brands_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const DELETE_PRODUCT_CAT = gql`\r\n  mutation deleteProductCat($id: uuid!) {\r\n    delete_product_categories_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const DELETE_NEW_CAT = gql`\r\n  mutation deleteNewCat($id: uuid!) {\r\n    delete_news_categories_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const ADD_NEWS_CAT = gql`\r\n  mutation addNewCat($title: String!) {\r\n    insert_news_categories_one(object: { title: $title }) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const DELETE_NEWS = gql`\r\n  mutation deleteNews($id: uuid!) {\r\n    delete_news_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const DELETE_INVOICE = gql`\r\n  mutation deleteInvoice($id: uuid!) {\r\n    delete_invoices_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const DELETE_ORDERS = gql`\r\n  mutation aa($id: uuid!) {\r\n    delete_orders_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const DELETE_DEALER = gql`\r\n  mutation deleteDealer($id: uuid!) {\r\n    delete_dealers_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const ADD_DEALERS = gql`\r\n  mutation addDealer($data: dealers_insert_input!) {\r\n    insert_dealers_one(object: $data) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const ADD_NEWS_PRODUCTS = gql`\r\n  mutation addNewProducts($data: news_related_products_insert_input!) {\r\n    insert_news_related_products_one(object: $data) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const EDIT_NEWS = gql`\r\n  mutation editNewProducts($id: uuid!, $data: news_set_input!) {\r\n    update_news_by_pk(pk_columns: { id: $id }, _set: $data) {\r\n      id\r\n      image_url\r\n      body_html\r\n      created_at\r\n      news_category {\r\n        title\r\n        id\r\n      }\r\n      disabled\r\n      news_category_id\r\n      title\r\n      updated_at\r\n    }\r\n  }\r\n`\r\nexport const DELETE_NEW_RELATED_PRODUCTS = gql`\r\n  mutation aa($news_id: uuid!) {\r\n    delete_news_related_products(where: { news_id: { _eq: $news_id } }) {\r\n      returning {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const IMGAE_UPLOAD = gql`\r\n  mutation aa($content_type: String!, $folder: String!) {\r\n    getFileUploadUrl(content_type: $content_type, folder: $folder) {\r\n      error\r\n      message\r\n      fileName\r\n      fileUploadUrl\r\n    }\r\n  }\r\n`\r\nexport const CHANGE_ORDER_STATUS = gql`\r\n  mutation orderStatus($order_id: uuid!, $status: String!) {\r\n    updateOrderStatus(order_id: $order_id, status: $status) {\r\n      message\r\n    }\r\n  }\r\n`\r\nexport const CHANGE_SERVICE_STATUS = gql`\r\n  mutation updateServiceStatus($service_token_id: uuid!, $status: String!) {\r\n    updateServiceStatus(service_token_id: $service_token_id, status: $status) {\r\n      message\r\n    }\r\n  }\r\n`\r\nexport const ACCEPT_SERVICE_TOKEN = gql`\r\n  mutation updateServiceStatus($is_warranty_valid: Boolean!, $service_fee: numeric!, $service_token_id: uuid!) {\r\n    acceptServiceToken(\r\n      is_warranty_valid: $is_warranty_valid\r\n      service_fee: $service_fee\r\n      service_token_id: $service_token_id\r\n    ) {\r\n      message\r\n    }\r\n  }\r\n`\r\n\r\nexport const REJECT_SERVICE_TOKEN = gql`\r\n  mutation rejectServiceToken($rejected_reason: String!, $service_token_id: uuid!) {\r\n    rejectServiceToken(rejected_reason: $rejected_reason, service_token_id: $service_token_id) {\r\n      message\r\n    }\r\n  }\r\n`\r\nexport const CHANGE_USER_STATUS = gql`\r\n  mutation changeUserStatus($id: uuid!, $data: users_set_input!) {\r\n    update_users_by_pk(pk_columns: { id: $id }, _set: $data) {\r\n      id\r\n      role\r\n      status\r\n    }\r\n  }\r\n`\r\nexport const CHANGE_USER_ACTIVATE = gql`\r\n  mutation userStatus($user_id: uuid!, $is_verified: Boolean!) {\r\n    updateUserStatus(user_id: $user_id, is_verified: $is_verified) {\r\n      message\r\n    }\r\n  }\r\n`\r\nexport const CHANGE_QUOTATION_STATUS = gql`\r\n  mutation updateQuotationStatus($quotation_id: uuid!, $status: String!) {\r\n    updateQuotationStatus(quotation_id: $quotation_id, status: $status) {\r\n      message\r\n    }\r\n  }\r\n`\r\nexport const CHANGE_INVOICE_STATUS = gql`\r\n  mutation updateInvoiceStatus {\r\n    updateInvoiceStatus(invoice_id: \"\", status: \"\") {\r\n      message\r\n    }\r\n  }\r\n`\r\nexport const SEND_QUOTATION_FILE = gql`\r\n  mutation updateQuotationStatus($quotation_file_url: String!, $quotation_id: uuid!) {\r\n    sendQuotationFIle(quotation_file_url: $quotation_file_url, quotation_id: $quotation_id) {\r\n      message\r\n    }\r\n  }\r\n`\r\n\r\nexport const ADD_PARYMENT = gql`\r\n  mutation addPayment($amount: numeric!, $invoice_id: uuid!, $payment_date: timestamp!, $payment_method: String!) {\r\n    addInvoicePayment(\r\n      amount: $amount\r\n      invoice_id: $invoice_id\r\n      payment_date: $payment_date\r\n      payment_method: $payment_method\r\n    ) {\r\n      message\r\n    }\r\n  }\r\n`\r\nexport const SEND_Q_INVOICE_FILE = gql`\r\n  mutation sendQInvoice($quotation_id: uuid!) {\r\n    sendInvoice(quotation_id: $quotation_id) {\r\n      message\r\n    }\r\n  }\r\n`\r\nexport const SEND_INVOICE_FILE = gql`\r\n  mutation sendQuotationPdf($id: uuid!, $invoice_file_url: String!) {\r\n    update_invoices_by_pk(pk_columns: { id: $id }, _set: { invoice_file_url: $invoice_file_url }) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const DELETE_ADMIN = gql`\r\n  mutation deleteAdmin($id: uuid!) {\r\n    delete_admins_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const DELETE_SERVICE_CENTER = gql`\r\n  mutation deleteServiceCenter($id: uuid!) {\r\n    delete_service_centers_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const ADD_ADMIN = gql`\r\n  mutation aa($email: String!, $password: String!, $name: String!, $role: String!) {\r\n    AdminSignUp(email: $email, password: $password, name: $name, role: $role) {\r\n      message\r\n      token\r\n    }\r\n  }\r\n`\r\nexport const EDIT_ADMIN = gql`\r\n  mutation updateAdmin($id: uuid!, $data: admins_set_input!) {\r\n    update_admins_by_pk(pk_columns: { id: $id }, _set: $data) {\r\n      id\r\n      name\r\n      email\r\n      role\r\n    }\r\n  }\r\n`\r\nexport const ADD_USER = gql`\r\n  mutation aa($name: String!, $password: String!, $role: String!, $phone: String!) {\r\n    UserSignUp(name: $name, password: $password, role: $role, phone: $phone) {\r\n      message\r\n      token\r\n    }\r\n  }\r\n`\r\nexport const ADD_SERVICE_CENTER = gql`\r\n  mutation addSeriveCenter($data: service_centers_insert_input!) {\r\n    insert_service_centers_one(object: $data) {\r\n      id\r\n      name\r\n      phone\r\n      address\r\n      created_at\r\n      updated_at\r\n    }\r\n  }\r\n`\r\nexport const IS_WARRANTY_VALID = gql`\r\n  mutation editService($id: uuid!, $data: service_tokens_set_input!) {\r\n    update_service_tokens_by_pk(pk_columns: { id: $id }, _set: $data) {\r\n      id\r\n      service_fee\r\n    }\r\n  }\r\n`\r\nexport const EDIT_SERVICE_CENTER = gql`\r\n  mutation editServiceCenter($id: uuid!, $data: service_centers_set_input!) {\r\n    update_service_centers_by_pk(pk_columns: { id: $id }, _set: $data) {\r\n      id\r\n      name\r\n      phone\r\n      address\r\n    }\r\n  }\r\n`\r\nexport const DELETE_PRODUCT_DISCOUNT = gql`\r\n  mutation deleteProductDiscount($id: uuid!) {\r\n    delete_product_discounts_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const ORDER_COMPLETE = gql`\r\n  mutation orderComplete($id: uuid!, $completion_photo_url: String!, $remark: String!) {\r\n    update_orders_by_pk(\r\n      pk_columns: { id: $id }\r\n      _set: { completion_photo_url: $completion_photo_url, remark: $remark }\r\n    ) {\r\n      id\r\n      completion_photo_url\r\n      remark\r\n    }\r\n  }\r\n`\r\n\r\nexport const ADD_DISCOUNT = gql`\r\n  mutation addDiscount($data: product_discounts_insert_input!) {\r\n    insert_product_discounts_one(object: $data) {\r\n      id\r\n      min_order\r\n      product_id\r\n      discount_type\r\n      discounted_value\r\n      customer_type\r\n      created_at\r\n      updated_at\r\n    }\r\n  }\r\n`\r\n\r\nexport const EDIT_DISCOUNT = gql`\r\n  mutation updateProductDiscount($id: uuid!, $data: product_discounts_set_input!) {\r\n    update_product_discounts_by_pk(pk_columns: { id: $id }, _set: $data) {\r\n      id\r\n      min_order\r\n      discount_type\r\n      customer_type\r\n      discounted_value\r\n      created_at\r\n      updated_at\r\n    }\r\n  }\r\n`\r\n\r\nexport const EDIT_PRODUCT_CATEGORY = gql`\r\n  mutation editCategory($id: uuid!, $data: product_categories_set_input!) {\r\n    update_product_categories_by_pk(pk_columns: { id: $id }, _set: $data) {\r\n      id\r\n      title\r\n      image_url\r\n    }\r\n  }\r\n`\r\nexport const EDIT_BRAND = gql`\r\n  mutation eidtBrand($id: uuid!, $data: brands_set_input!) {\r\n    update_brands_by_pk(pk_columns: { id: $id }, _set: $data) {\r\n      id\r\n      title\r\n      image_url\r\n    }\r\n  }\r\n`\r\nexport const EDIt_NEWS_CAT = gql`\r\n  mutation editNewCat($id: uuid!, $title: String!) {\r\n    update_news_categories_by_pk(pk_columns: { id: $id }, _set: { title: $title }) {\r\n      id\r\n      title\r\n    }\r\n  }\r\n`\r\n//product image upload\r\nexport const PRODUCT_IMAGE_UPLOAD = gql`\r\n  mutation imageUpload($data: product_medias_insert_input!) {\r\n    insert_product_medias_one(object: $data) {\r\n      id\r\n      product_id\r\n      media_url\r\n      media_type\r\n    }\r\n  }\r\n`\r\nexport const DELETE_PRODUCT_IMAGE = gql`\r\n  mutation deleteProductImage($id: uuid!) {\r\n    delete_product_medias_by_pk(id: $id) {\r\n      id\r\n      media_url\r\n      media_type\r\n    }\r\n  }\r\n`\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 615, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 620, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/views/products/discount/AddDiscountDrawer.jsx"],"sourcesContent":["'use client'\r\n// React Imports\r\nimport { useRef, useState } from 'react'\r\n\r\n// MUI Imports\r\nimport Button from '@mui/material/Button'\r\nimport Divider from '@mui/material/Divider'\r\nimport Drawer from '@mui/material/Drawer'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport InputLabel from '@mui/material/InputLabel'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport Select from '@mui/material/Select'\r\nimport TextField from '@mui/material/TextField'\r\nimport Typography from '@mui/material/Typography'\r\n// Third-party Imports\r\nimport { useApp } from '@/app/ApolloWrapper'\r\nimport Alert from '@/components/helper/Alert'\r\nimport { ADD_DISCOUNT } from '@/graphql/mutations'\r\nimport { USER_ROLES } from '@/graphql/queries'\r\nimport { useMutation, useSuspenseQuery } from '@apollo/client'\r\nimport { FormHelperText } from '@mui/material'\r\nimport { Controller, useForm } from 'react-hook-form'\r\nimport { GET_ALL_PRODUCT_DISCOUNT, PRODCUT_DISCOUNT_BY_ID, PRODUCTS_BY_ID } from '../../../graphql/queries'\r\nconst AddDiscountDrawer = props => {\r\n  const { setGlobalMsg } = useApp()\r\n  // Propss\r\n  const { open, handleClose, data, productId, loading, setLoading, setData } = props\r\n  const [addDiscount] = useMutation(ADD_DISCOUNT)\r\n\r\n  const [customerType, setCustomerType] = useState('')\r\n  const { data: userRoles } = useSuspenseQuery(USER_ROLES)\r\n  // States\r\n  const [fileName, setFileName] = useState(null)\r\n  const [customerTypeError, setCustomerTypeError] = useState(false)\r\n  // Refs\r\n  const fileInputRef = useRef(null)\r\n\r\n  // Hooks\r\n  const {\r\n    control,\r\n    reset: resetForm,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({\r\n    defaultValues: {\r\n      min_order: '',\r\n      customer_type: '',\r\n      discounted_value: '',\r\n      product_id: ''\r\n    }\r\n  })\r\n\r\n  // Handle Form Submit\r\n  const handleFormSubmit = async datas => {\r\n    if (!customerType) {\r\n      setCustomerTypeError(true)\r\n      return\r\n    }\r\n    try {\r\n      setLoading(true)\r\n\r\n      const res = await addDiscount({\r\n        variables: {\r\n          data: {\r\n            min_order: Number(datas.min_order),\r\n            customer_type: customerType,\r\n            discounted_value: Number(datas.discounted_value),\r\n            product_id: productId\r\n          }\r\n        }\r\n      })\r\n\r\n      setLoading(false)\r\n      resetForm({\r\n        min_order: '',\r\n        customer_type: '',\r\n        discounted_value: '',\r\n        product_id: ''\r\n      })\r\n      setData([...data, res.data.insert_product_discounts_one])\r\n      setCustomerType('')\r\n      handleReset()\r\n      handleClose()\r\n\r\n      setGlobalMsg('➕ Added New Product Discount')\r\n    } catch (e) {\r\n      console.log('Error ', e)\r\n    }\r\n  }\r\n\r\n  // Handle Form Reset\r\n  const handleReset = () => {\r\n    resetForm({ min_order: '', customer_type: '', discounted_value: '', product_id: '' })\r\n    setFileName('')\r\n    setCustomerType('')\r\n  }\r\n\r\n  // Handle File Upload\r\n  const handleFileUpload = event => {\r\n    const { files } = event.target\r\n\r\n    if (files && files.length !== 0) {\r\n      setFileName(files)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        open={open}\r\n        anchor='right'\r\n        variant='temporary'\r\n        onClose={handleClose}\r\n        ModalProps={{ keepMounted: true }}\r\n        sx={{ '& .MuiDrawer-paper': { width: { xs: 300, sm: 400 } } }}\r\n      >\r\n        <div className='flex items-center justify-between pli-5 plb-4'>\r\n          <Typography variant='h5'>Add Discount</Typography>\r\n          <IconButton size='small' onClick={handleClose}>\r\n            <i className='ri-close-line text-2xl' />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <div className='p-5'>\r\n          <form onSubmit={handleSubmit(data => handleFormSubmit(data))} className='flex flex-col gap-5'>\r\n            <Controller\r\n              name='min_order'\r\n              control={control}\r\n              rules={{ required: true }}\r\n              render={({ field }) => (\r\n                <TextField\r\n                  {...field}\r\n                  fullWidth\r\n                  type='number'\r\n                  label='Minimal Order'\r\n                  placeholder=''\r\n                  {...(errors.min_order && { error: true, helperText: 'This field is required.' })}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Controller\r\n              name='discounted_value'\r\n              control={control}\r\n              rules={{ required: true }}\r\n              render={({ field }) => (\r\n                <TextField\r\n                  {...field}\r\n                  fullWidth\r\n                  type='number'\r\n                  label='Discounted Value'\r\n                  placeholder=''\r\n                  {...(errors.discounted_value && { error: true, helperText: 'This field is required.' })}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <FormControl fullWidth>\r\n              <InputLabel>Select User Role</InputLabel>\r\n              <Select\r\n                label='Select Vendor'\r\n                value={customerType ? customerType : ''}\r\n                onChange={e => setCustomerType(e.target.value)}\r\n              >\r\n                {userRoles?.user_roles?.map((brand, index) => (\r\n                  <MenuItem value={brand?.role_name} key={index}>\r\n                    {brand?.role_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n\r\n              {customerTypeError && <FormHelperText sx={{ color: 'red' }}>Please select a user role.</FormHelperText>}\r\n            </FormControl>\r\n            {/* <div className='flex items-center gap-4'>\r\n              <TextField\r\n                size='small'\r\n                placeholder='No file chosen'\r\n                variant='outlined'\r\n                value={fileName}\r\n                className='flex-auto'\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  endAdornment: fileName ? (\r\n                    <InputAdornment position='end'>\r\n                      <IconButton size='small' edge='end' onClick={() => setFileName('')}>\r\n                        <i className='ri-close-line' />\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ) : null\r\n                }}\r\n              />\r\n              <Button component='label' variant='outlined' htmlFor='contained-button-file' className='min-is-fit'>\r\n                Choose\r\n                <input hidden id='contained-button-file' type='file' onChange={handleFileUpload} ref={fileInputRef} />\r\n              </Button>\r\n            </div> */}\r\n\r\n            <div className='flex items-center gap-4'>\r\n              <Button variant='contained' type='submit' loading={loading}>\r\n                Add\r\n              </Button>\r\n              <Button variant='outlined' color='error' type='reset' onClick={handleReset}>\r\n                Discard\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Drawer>\r\n      <Alert />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddDiscountDrawer\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 954, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 959, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/views/products/discount/EditDiscountDrawer.jsx"],"sourcesContent":["'use client'\r\n// React Imports\r\nimport { useState, useRef, useEffect } from 'react'\r\n\r\n// MUI Imports\r\nimport Button from '@mui/material/Button'\r\nimport Drawer from '@mui/material/Drawer'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport InputLabel from '@mui/material/InputLabel'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport Select from '@mui/material/Select'\r\nimport TextField from '@mui/material/TextField'\r\nimport Typography from '@mui/material/Typography'\r\nimport Divider from '@mui/material/Divider'\r\nimport InputAdornment from '@mui/material/InputAdornment'\r\nimport { uploadFile } from '@/utils/helper'\r\n// Third-party Imports\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { useMutation, useSuspenseQuery } from '@apollo/client'\r\nimport { ADD_CATEGORY, ADD_DISCOUNT, IMGAE_UPLOAD } from '@/graphql/mutations'\r\nimport Alert from '@/components/helper/Alert'\r\nimport { useApp } from '@/app/ApolloWrapper'\r\nimport Autocomplete from '@mui/material/Autocomplete'\r\nimport { USER_ROLES } from '@/graphql/queries'\r\nimport { FormHelperText } from '@mui/material'\r\nimport { EDIT_DISCOUNT } from '../../../graphql/mutations'\r\nconst EditDiscountDrawer = props => {\r\n  const { setGlobalMsg } = useApp()\r\n  // Props\r\n  const { open, handleClose, discountData, loading, setLoading, setData } = props\r\n  const [editDiscount] = useMutation(EDIT_DISCOUNT)\r\n  const [productId, setProductId] = useState()\r\n  const [customerType, setCustomerType] = useState()\r\n  const { data: userRoles } = useSuspenseQuery(USER_ROLES)\r\n  // States\r\n  const [fileName, setFileName] = useState('')\r\n\r\n  // Refs\r\n  const fileInputRef = useRef(null)\r\n\r\n  // Hooks\r\n  const {\r\n    control,\r\n    reset: resetForm,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({\r\n    defaultValues: {\r\n      min_order: '',\r\n      discounted_value: '',\r\n      customer_type: ''\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (discountData) {\r\n      resetForm({\r\n        min_order: discountData.min_order,\r\n        discounted_value: discountData.discounted_value,\r\n        customer_type: discountData.customer_type\r\n      })\r\n      setCustomerType(discountData.customer_type)\r\n    }\r\n  }, [discountData, resetForm])\r\n  // Handle Form Submit\r\n\r\n  const handleFormSubmit = async data => {\r\n    try {\r\n      setLoading(true)\r\n\r\n      const res = await editDiscount({\r\n        variables: {\r\n          id: discountData.id,\r\n          data: {\r\n            min_order: Number(data.min_order),\r\n            customer_type: customerType,\r\n            discounted_value: Number(data.discounted_value),\r\n            product_id: discountData.product_id\r\n          }\r\n        }\r\n      })\r\n      setLoading(false)\r\n      setData(prevData =>\r\n        prevData.map(item =>\r\n          item.id === discountData?.id ? { ...item, ...res.data.update_product_discounts_by_pk } : item\r\n        )\r\n      )\r\n      handleReset()\r\n      setGlobalMsg('✅ Product discount has been updated')\r\n    } catch (e) {\r\n      console.log('Error ', e)\r\n    }\r\n  }\r\n\r\n  // Handle Form Reset\r\n  const handleReset = () => {\r\n    handleClose()\r\n    resetForm({ title: '', description: '' })\r\n    setFileName('')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        open={open}\r\n        anchor='right'\r\n        variant='temporary'\r\n        onClose={handleReset}\r\n        ModalProps={{ keepMounted: true }}\r\n        sx={{ '& .MuiDrawer-paper': { width: { xs: 300, sm: 400 } } }}\r\n      >\r\n        <div className='flex items-center justify-between pli-5 plb-4'>\r\n          <Typography variant='h5'>Edit Discount</Typography>\r\n          <IconButton size='small' onClick={handleReset}>\r\n            <i className='ri-close-line text-2xl' />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <div className='p-5'>\r\n          <form onSubmit={handleSubmit(data => handleFormSubmit(data))} className='flex flex-col gap-5'>\r\n            <Controller\r\n              name='min_order'\r\n              control={control}\r\n              rules={{ required: true }}\r\n              render={({ field }) => (\r\n                <TextField\r\n                  {...field}\r\n                  fullWidth\r\n                  type='number'\r\n                  label='Minimal Order'\r\n                  placeholder=''\r\n                  {...(errors.min_order && { error: true, helperText: 'This field is required.' })}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Controller\r\n              name='discounted_value'\r\n              control={control}\r\n              rules={{ required: true }}\r\n              render={({ field }) => (\r\n                <TextField\r\n                  {...field}\r\n                  fullWidth\r\n                  type='number'\r\n                  label='Discounted Value'\r\n                  placeholder=''\r\n                  {...(errors.discounted_value && { error: true, helperText: 'This field is required.' })}\r\n                />\r\n              )}\r\n            />\r\n            {customerType && (\r\n              <FormControl fullWidth>\r\n                <InputLabel>Select User Role</InputLabel>\r\n                <Select\r\n                  label='Select Vendor'\r\n                  value={customerType}\r\n                  onChange={e => setCustomerType(e.target.value)}\r\n                  //     error={errors?.customer_id ? true : false}\r\n                  //     helperText={errors?.customer_id}\r\n                >\r\n                  {userRoles?.user_roles?.map((brand, index) => (\r\n                    <MenuItem value={brand?.role_name} key={index}>\r\n                      {brand?.role_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n                <FormHelperText sx={{ color: 'red' }}>{errors?.role_name}</FormHelperText>\r\n              </FormControl>\r\n            )}\r\n            {/* <div className='flex items-center gap-4'>\r\n              <TextField\r\n                size='small'\r\n                placeholder='No file chosen'\r\n                variant='outlined'\r\n                value={fileName}\r\n                className='flex-auto'\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  endAdornment: fileName ? (\r\n                    <InputAdornment position='end'>\r\n                      <IconButton size='small' edge='end' onClick={() => setFileName('')}>\r\n                        <i className='ri-close-line' />\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ) : null\r\n                }}\r\n              />\r\n              <Button component='label' variant='outlined' htmlFor='contained-button-file' className='min-is-fit'>\r\n                Choose\r\n                <input hidden id='contained-button-file' type='file' onChange={handleFileUpload} ref={fileInputRef} />\r\n              </Button>\r\n            </div> */}\r\n\r\n            <div className='flex items-center gap-4'>\r\n              <Button variant='contained' type='submit' loading={loading}>\r\n                Update\r\n              </Button>\r\n              <Button variant='outlined' color='error' type='reset' onClick={handleReset}>\r\n                Discard\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Drawer>\r\n      <Alert />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditDiscountDrawer\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1291, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1296, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/dialogs/confirmation-dialog/index.jsx"],"sourcesContent":["'use client'\r\n\r\n// React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// MUI Imports\r\nimport Dialog from '@mui/material/Dialog'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport Typography from '@mui/material/Typography'\r\nimport Button from '@mui/material/Button'\r\n\r\n// Third-party Imports\r\nimport classnames from 'classnames'\r\nimport { useMutation } from '@apollo/client'\r\nimport {\r\n  CHANGE_USER_ACTIVATE,\r\n  CHANGE_USER_STATUS,\r\n  DELETE_NEW_CAT,\r\n  DELETE_NEWS,\r\n  DELETE_ORDERS,\r\n  DELETE_PRODUCT_BRAND,\r\n  DELETE_PRODUCT_CAT,\r\n  DELETE_PRODUCT_DISCOUNT,\r\n  DELETE_SERVICE_CENTER\r\n} from '@/graphql/mutations'\r\nimport { useParams } from 'next/navigation'\r\nimport { GET_USER_BY_ID, PRODUCT_BRANDs, PRODUCT_CATS } from '@/graphql/queries'\r\n\r\nconst ConfirmationDialog = ({ open, setOpen, type, dataId, data, setData }) => {\r\n  const { userId } = useParams()\r\n  const [deletOrder] = useMutation(DELETE_ORDERS)\r\n  const [changeUserStatus] = useMutation(CHANGE_USER_STATUS, { refetchQueries: [GET_USER_BY_ID] })\r\n  const [changeUserActivate] = useMutation(CHANGE_USER_ACTIVATE, { refetchQueries: [GET_USER_BY_ID] })\r\n  const [deleteCat] = useMutation(DELETE_PRODUCT_CAT)\r\n  const [deleteBrand] = useMutation(DELETE_PRODUCT_BRAND)\r\n  const [deletNew] = useMutation(DELETE_NEWS)\r\n  const [deleteNewCat] = useMutation(DELETE_NEW_CAT)\r\n  const [deleteService] = useMutation(DELETE_SERVICE_CENTER)\r\n  const [deleteDiscount] = useMutation(DELETE_PRODUCT_DISCOUNT)\r\n  // States\r\n  const [secondDialog, setSecondDialog] = useState(false)\r\n  const [userInput, setUserInput] = useState(false)\r\n\r\n  // Vars\r\n  const Wrapper = type === 'disable-account' ? 'div' : Fragment\r\n\r\n  const handleSecondDialogClose = () => {\r\n    setSecondDialog(false)\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleConfirmation = async value => {\r\n    if (value === true) {\r\n      try {\r\n        if (type === 'disable-account') {\r\n          await changeUserStatus({\r\n            variables: {\r\n              id: userId,\r\n              data: {\r\n                status: 'disable'\r\n              }\r\n            }\r\n          })\r\n        }\r\n        if (type === 'enable-account') {\r\n          await changeUserStatus({\r\n            variables: {\r\n              id: userId,\r\n              data: {\r\n                status: 'verified'\r\n              }\r\n            }\r\n          })\r\n        }\r\n        if (type === 'verified-account') {\r\n          await changeUserActivate({ variables: { user_id: userId, is_verified: true } })\r\n        }\r\n        if (type === 'unverified-account') {\r\n          await changeUserActivate({ variables: { user_id: userId, is_verified: false } })\r\n        }\r\n        if (type === 'deleteProductCategory') {\r\n          await deleteCat({ variables: { id: dataId } })\r\n          setData(data.filter(item => item.id !== dataId))\r\n        }\r\n        if (type === 'deleteProductBrand') {\r\n          await deleteBrand({ variables: { id: dataId } })\r\n          setData(data.filter(item => item.id !== dataId))\r\n        }\r\n        if (type === 'deletePost') {\r\n          await deletNew({ variables: { id: dataId } })\r\n          setData(data.filter(item => item.id !== dataId))\r\n        }\r\n        if (type === 'deleteNewCategory') {\r\n          await deleteNewCat({ variables: { id: dataId } })\r\n          setData(data.filter(item => item.id !== dataId))\r\n        }\r\n        if (type === 'deleteServiceCenter') {\r\n          await deleteService({ variables: { id: dataId } })\r\n          setData(data.filter(item => item.id !== dataId))\r\n        }\r\n        if (type === 'deleteProductDiscount') {\r\n          await deleteDiscount({ variables: { id: dataId } })\r\n          setData(data.filter(item => item.id !== dataId))\r\n        }\r\n\r\n        setUserInput(value)\r\n        setOpen(false)\r\n      } catch (e) {\r\n        console.log('Error', e)\r\n      }\r\n    } else {\r\n      setOpen(false)\r\n    }\r\n\r\n    setUserInput(value)\r\n    setSecondDialog(true)\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog fullWidth maxWidth='xs' open={open} onClose={() => setOpen(false)}>\r\n        <DialogContent className='flex items-center flex-col text-center sm:pbs-16 sm:pbe-6 sm:pli-16'>\r\n          <i className='ri-error-warning-line text-[88px] mbe-6 text-warning' />\r\n          <Wrapper\r\n            {...(type === 'disable-account' && {\r\n              className: 'flex flex-col items-center gap-2'\r\n            })}\r\n          >\r\n            <Typography variant='h4'>\r\n              {/* {type === 'verified-account' && 'Are you sure you want to activate your account?'} */}\r\n              {type === 'unsubscribe' && 'Are you sure to cancel your subscription?'}\r\n              {type === 'disable-account' && 'Are you sure?'}\r\n              {type === 'delete-order' && 'Are you sure?'}\r\n              {type === 'delete-customer' && 'Are you sure?'}\r\n            </Typography>\r\n            {type === 'verified-account' && (\r\n              <Typography color='text.primary'>Are you sure you want to verify your account?</Typography>\r\n            )}\r\n            {type === 'unverified-account' && (\r\n              <Typography color='text.primary'>Are you sure you want to unverify your account?</Typography>\r\n            )}\r\n            {type === 'disable-account' && (\r\n              <Typography color='text.primary'>Are you sure you want to disalbe user!</Typography>\r\n            )}\r\n            {type === 'enable-account' && (\r\n              <Typography color='text.primary'>Are you sure you want to enable user!</Typography>\r\n            )}\r\n\r\n            {type === 'deleteProductCategory' && (\r\n              <Typography color='text.primary'>Are you sure you want to delete?</Typography>\r\n            )}\r\n            {type === 'deleteProductDiscount' && (\r\n              <Typography color='text.primary'>Are you sure you want to delete?</Typography>\r\n            )}\r\n            {type === 'deleteServiceCenter' && (\r\n              <Typography color='text.primary'>Are you sure you want to delete?</Typography>\r\n            )}\r\n            {type === 'deleteProductBrand' && (\r\n              <Typography color='text.primary'>Are you sure you want to delete?</Typography>\r\n            )}\r\n            {type === 'deletePost' && <Typography color='text.primary'>Are you sure you want to delete?</Typography>}\r\n            {type === 'deleteNewCategory' && (\r\n              <Typography color='text.primary'>Are you sure you want to delete?</Typography>\r\n            )}\r\n          </Wrapper>\r\n        </DialogContent>\r\n        <DialogActions className='justify-center pbs-0 sm:pbe-16 sm:pli-16'>\r\n          <Button variant='contained' onClick={() => handleConfirmation(true)}>\r\n            {type === 'disable-account'\r\n              ? 'Yes, Disabel User!'\r\n              : type === 'enable-account'\r\n                ? 'Yes, Enable User!'\r\n                : type === 'deleteProductCategory'\r\n                  ? 'Yes, Delete Category!'\r\n                  : type === 'deleteProductBrand'\r\n                    ? 'Yes, Delete Brand'\r\n                    : type === 'delete-customer'\r\n                      ? 'Yes, Delete Customer!'\r\n                      : type === 'verified-account'\r\n                        ? 'Yes , User Verify'\r\n                        : type === 'unverified-account'\r\n                          ? 'Yes, User Unverify'\r\n                          : type === 'deletePost'\r\n                            ? 'Yes, Delete Post'\r\n                            : type === 'deleteNewCategory'\r\n                              ? 'Yes, Delete Category'\r\n                              : type === 'deleteServiceCenter'\r\n                                ? 'Yes, Delete Service Center'\r\n                                : type === 'deleteProductDiscount'\r\n                                  ? 'Yes, Delete Product Discount'\r\n                                  : 'Yes'}\r\n          </Button>\r\n          <Button\r\n            variant='outlined'\r\n            color='secondary'\r\n            onClick={() => {\r\n              handleConfirmation(false)\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Delete Account Dialog */}\r\n      <Dialog open={secondDialog} onClose={handleSecondDialogClose}>\r\n        <DialogContent className='flex items-center flex-col text-center sm:pbs-16 sm:pbe-6 sm:pli-16'>\r\n          <i\r\n            className={classnames('text-[88px] mbe-6', {\r\n              'ri-checkbox-circle-line': userInput,\r\n              'text-success': userInput,\r\n              'ri-close-circle-line': !userInput,\r\n              'text-error': !userInput\r\n            })}\r\n          />\r\n          <Typography variant='h4' className='mbe-2'>\r\n            {userInput\r\n              ? `${type === 'disable-account' ? 'User Disabled' : type === 'enable-account' ? 'User Enabled' : type === 'verified-account' ? 'User Verified' : type === 'deleteProductCategory' ? 'Delete Category' : type === 'unverified' ? 'User Unverified' : type === 'deleteProductBrand' ? 'Delete Brand' : type === 'deletePost' ? 'Delete Post' : type === 'deleteNewCategory' ? 'Delete New Category' : type === 'deleteServiceCenter' ? 'Delete Service Center' : type === 'deleteProductDiscount' ? 'Delete Product Discount' : 'yes'}`\r\n              : 'Cancelled'}\r\n          </Typography>\r\n          <Typography color='text.primary'>\r\n            {userInput ? (\r\n              <>\r\n                {type === 'verified-account' && 'Your account has been verified successfully.'}\r\n                {type === 'unverified-account' && 'Your account has been unverified successfully.'}\r\n                {type === 'disable-account' && 'User has been disabled.'}\r\n                {type === 'enable-account' && 'User has been enabled.'}\r\n                {type === 'deleteProductCategory' && 'Your Category has been deleted successfully.'}\r\n                {type === 'deleteServiceCenter' && 'Your Service Center has been deleted successfully.'}\r\n                {type === 'deleteNewCategory' && 'Your New Category has been deleted successfully.'}\r\n                {type === 'deleteProductDiscount' && 'Your Product Discount has been deleted successfully.'}\r\n                {type === 'deleteProductBrand' && 'Your Category has been deleted successfully.'}\r\n                {type === 'deletePost' && 'Your Post has been deleted successfully.'}\r\n                {type === 'delete-customer' && 'Your customer removed successfully.'}\r\n              </>\r\n            ) : (\r\n              <>\r\n                {type === 'verified-account' && 'User Verify Cancelled!'}\r\n                {type === 'unverified-account' && 'User Unverify Cancelled!'}\r\n                {type === 'disable-account' && 'Cancelled Disabled :)'}\r\n                {type === 'deleteProductCategory' && 'Category Deletion Cancelled'}\r\n                {type === 'deleteProductDiscount' && 'Product Discount Deletion Cancelled'}\r\n                {type === 'deleteServiceCenter' && 'Service Center Deletion Cancelled'}\r\n                {type === 'deleteNewCategory' && 'New Category Deletion Cancelled'}\r\n                {type === 'deleteProductBrand' && 'Brand Deletion Cancelled'}\r\n                {type === 'deletePost' && 'Post Deletion Cancelled!'}\r\n\r\n                {type === 'delete-customer' && 'Customer Deletion Cancelled'}\r\n              </>\r\n            )}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions className='justify-center pbs-0 sm:pbe-16 sm:pli-16'>\r\n          <Button variant='contained' color='success' onClick={handleSecondDialogClose}>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ConfirmationDialog\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1712, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1717, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/dialogs/OpenDialogOnElementClick.jsx"],"sourcesContent":["'use client'\r\n\r\n// React Imports\r\nimport { useState } from 'react'\r\n\r\nconst OpenDialogOnElementClick = props => {\r\n  // Props\r\n  const { element: Element, dialog: Dialog, elementProps, dialogProps, dataId, setData, data } = props\r\n\r\n  // States\r\n  const [open, setOpen] = useState(false)\r\n\r\n  // Extract onClick from elementProps\r\n  const { onClick: elementOnClick, ...restElementProps } = elementProps\r\n\r\n  // Handle onClick event\r\n  const handleOnClick = e => {\r\n    elementOnClick && elementOnClick(e)\r\n    setOpen(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Receive element component as prop and we will pass onclick event which changes state to open */}\r\n      <Element onClick={handleOnClick} {...restElementProps} />\r\n      {/* Receive dialog component as prop and we will pass open and setOpen props to that component */}\r\n      <Dialog open={open} setOpen={setOpen} {...dialogProps} dataId={dataId} setData={setData} data={data} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OpenDialogOnElementClick\r\n"],"names":[],"mappings":";;;;;;AAAA;;;AAKA,MAAM,2BAA2B,CAAA;IAC/B,QAAQ;IACR,MAAM,EAAE,SAAS,OAAO,EAAE,QAAQ,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG;IAE/F,SAAS;IACT,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,8UAAA,CAAA,WAAQ,AAAD,EAAE;IAEjC,oCAAoC;IACpC,MAAM,EAAE,SAAS,cAAc,EAAE,GAAG,kBAAkB,GAAG;IAEzD,uBAAuB;IACvB,MAAM,gBAAgB,CAAA;QACpB,kBAAkB,eAAe;QACjC,QAAQ;IACV;IAEA,qBACE;;0BAEE,uXAAC;gBAAQ,SAAS;gBAAgB,GAAG,gBAAgB;;;;;;0BAErD,uXAAC;gBAAO,MAAM;gBAAM,SAAS;gBAAU,GAAG,WAAW;gBAAE,QAAQ;gBAAQ,SAAS;gBAAS,MAAM;;;;;;;;AAGrG;uCAEe"}},
    {"offset": {"line": 1764, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1769, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/views/products/discount/list/DiscountListTable.jsx"],"sourcesContent":["'use client'\r\n\r\n// React Imports\r\nimport { useEffect, useMemo, useState } from 'react'\r\n\r\n// Next Imports\r\nimport { useParams } from 'next/navigation'\r\n\r\n// MUI Imports\r\nimport Button from '@mui/material/Button'\r\nimport Card from '@mui/material/Card'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport TablePagination from '@mui/material/TablePagination'\r\nimport TextField from '@mui/material/TextField'\r\nimport Typography from '@mui/material/Typography'\r\nimport EditDiscountDrawer from '../EditDiscountDrawer'\r\n// Third-party Imports\r\nimport { rankItem } from '@tanstack/match-sorter-utils'\r\nimport {\r\n  createColumnHelper,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  getFacetedMinMaxValues,\r\n  getFacetedRowModel,\r\n  getFacetedUniqueValues,\r\n  getFilteredRowModel,\r\n  getPaginationRowModel,\r\n  getSortedRowModel,\r\n  useReactTable\r\n} from '@tanstack/react-table'\r\nimport classnames from 'classnames'\r\n\r\n// Component Imports\r\nimport ConfirmationDialog from '@components/dialogs/confirmation-dialog'\r\nimport OpenDialogOnElementClick from '@components/dialogs/OpenDialogOnElementClick'\r\nimport CustomAvatar from '@core/components/mui/Avatar'\r\n// Util Imports\r\nimport { getInitials } from '@/utils/getInitials'\r\n\r\n// Style Imports\r\nimport { DELETE_PRODUCT_DISCOUNT } from '@/graphql/mutations'\r\nimport { GET_ALL_PRODUCT_DISCOUNT, ORDER_STATUS } from '@/graphql/queries'\r\nimport { useMutation, useSuspenseQuery } from '@apollo/client'\r\nimport tableStyles from '@core/styles/table.module.css'\r\n\r\nimport { useApp } from '@/app/ApolloWrapper'\r\nimport Alert from '@/components/helper/Alert'\r\nimport AddDiscountDrawer from '../AddDiscountDrawer'\r\nconst fuzzyFilter = (row, columnId, value, addMeta) => {\r\n  // Rank the item\r\n  const itemRank = rankItem(row.getValue(columnId), value)\r\n\r\n  // Store the itemRank info\r\n  addMeta({\r\n    itemRank\r\n  })\r\n\r\n  // Return if the item should be filtered in/out\r\n  return itemRank.passed\r\n}\r\n\r\nconst DebouncedInput = ({ value: initialValue, onChange, debounce = 500, ...props }) => {\r\n  // States\r\n  const [value, setValue] = useState(initialValue)\r\n\r\n  useEffect(() => {\r\n    setValue(initialValue)\r\n  }, [initialValue])\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      onChange(value)\r\n    }, debounce)\r\n\r\n    return () => clearTimeout(timeout)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [value])\r\n\r\n  return <TextField {...props} value={value} onChange={e => setValue(e.target.value)} size='small' />\r\n}\r\n\r\n// Column Definitions\r\nconst columnHelper = createColumnHelper()\r\n\r\nconst DiscountListTable = ({ discountDatas, productId }) => {\r\n  const { data: orderStatus } = useSuspenseQuery(ORDER_STATUS)\r\n\r\n  // States\r\n  const { setGlobalMsg } = useApp()\r\n  const [status, setStatus] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [rowSelection, setRowSelection] = useState({})\r\n  const [data, setData] = useState(discountDatas)\r\n  const [discountedData, setDiscountedData] = useState()\r\n  const [discountOpen, setDiscountOpen] = useState(false)\r\n  const [filteredData, setFilteredData] = useState(data)\r\n  const [globalFilter, setGlobalFilter] = useState('')\r\n  const [editDiscountOpen, setEditDiscountOpen] = useState(false)\r\n  const [deleteDiscount] = useMutation(DELETE_PRODUCT_DISCOUNT)\r\n\r\n  const buttonProps = (children, color, variant) => ({\r\n    children,\r\n    color,\r\n    variant\r\n  })\r\n\r\n  useEffect(() => {\r\n    setData(discountDatas)\r\n  }, [discountDatas])\r\n\r\n  const handleDelete = async id => {\r\n    try {\r\n      await deleteDiscount({ variables: { id: id } })\r\n      setData(data.filter(item => item.id !== id))\r\n      setGlobalMsg('✅ Delete Successful')\r\n    } catch (e) {\r\n      console.log('Error ', e)\r\n    }\r\n  }\r\n\r\n  // Hooks\r\n  const { lang: locale } = useParams()\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      // {\r\n      //   id: 'select',\r\n      //   header: ({ table }) => (\r\n      //     <Checkbox\r\n      //       {...{\r\n      //         checked: table.getIsAllRowsSelected(),\r\n      //         indeterminate: table.getIsSomeRowsSelected(),\r\n      //         onChange: table.getToggleAllRowsSelectedHandler()\r\n      //       }}\r\n      //     />\r\n      //   ),\r\n      //   cell: ({ row }) => (\r\n      //     <Checkbox\r\n      //       {...{\r\n      //         checked: row.getIsSelected(),\r\n      //         disabled: !row.getCanSelect(),\r\n      //         indeterminate: row.getIsSomeSelected(),\r\n      //         onChange: row.getToggleSelectedHandler()\r\n      //       }}\r\n      //     />\r\n      //   )\r\n      // },\r\n      columnHelper.accessor('id', {\r\n        header: '#',\r\n        cell: ({ row }) => (\r\n          <Typography\r\n            // component={Link}\r\n            // href={getLocalizedUrl(`/products/discount/${row.original.id}`, locale)}\r\n            color='primary'\r\n          >{`${row.original.id.substring(0, 10)}`}</Typography>\r\n        )\r\n      }),\r\n\r\n      columnHelper.accessor('min_order', {\r\n        header: 'Minimal Order',\r\n        cell: ({ row }) => (\r\n          <div className='flex items-center gap-3'>\r\n            {/* <Avatar src={row.original.user.min_order} width='100px' height='100px' /> */}\r\n            <div className='flex flex-col'>\r\n              <Typography className='font-medium' color='text.primary'>\r\n                {row.original.min_order}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        )\r\n      }),\r\n      columnHelper.accessor('customer_type', {\r\n        header: 'Customer Type',\r\n        cell: ({ row }) => (\r\n          <div className='flex items-center gap-3'>\r\n            <div className='flex flex-col'>\r\n              <Typography className='font-medium' color='text.primary'>\r\n                {row.original.customer_type}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        )\r\n      }),\r\n      // columnHelper.accessor('discount_type ', {\r\n      //   header: 'Discount Type',\r\n      //   cell: ({ row }) => (\r\n      //     <div className='flex items-center gap-3'>\r\n      //       <div className='flex flex-col'>\r\n      //         <Typography className='font-medium' color='text.primary'>\r\n      //           {row.original.discount_type}\r\n      //         </Typography>\r\n      //       </div>\r\n      //     </div>\r\n      //   )\r\n      // }),\r\n\r\n      columnHelper.accessor('discounted_value', {\r\n        header: 'Discounted Value',\r\n        cell: ({ row }) => (\r\n          <Typography>{`${row.original.discounted_value !== null ? row.original?.discounted_value?.toLocaleString() : '-'}`}</Typography>\r\n        )\r\n      }),\r\n      columnHelper.accessor('created_at', {\r\n        header: 'Date',\r\n        cell: ({ row }) => <Typography>{row.original?.created_at.substring(0, 10)}</Typography>\r\n      }),\r\n      // columnHelper.accessor('discount_type', {\r\n      //   header: 'Discount Type',\r\n      //   cell: ({ row }) => (\r\n      //     <div className='flex items-center gap-3'>\r\n      //       <div className='flex flex-col'>\r\n      //         {/* <Chip\r\n      //           label={row.original.status}\r\n      //           color={orderStatusColor[row.original.status]}\r\n      //           style={{ textTransform: 'capitalize' }}\r\n      //           variant='tonal'\r\n      //           size='small'\r\n      //         /> */}\r\n      //       </div>\r\n      //     </div>\r\n      //   )\r\n      // }),\r\n      // columnHelper.accessor('issuedDate', {\r\n      //   header: 'Issued Date',\r\n      //   cell: ({ row }) => <Typography>{row.original.issuedDate}</Typography>\r\n      // }),\r\n\r\n      columnHelper.accessor('action', {\r\n        header: 'Action',\r\n        cell: ({ row }) => (\r\n          <div className='flex items-center'>\r\n            <OpenDialogOnElementClick\r\n              element={Button}\r\n              elementProps={buttonProps(<i className='ri-delete-bin-7-line text-[22px] text-red-500' />, 'error', '')}\r\n              dialog={ConfirmationDialog}\r\n              dialogProps={{ type: 'deleteProductDiscount' }}\r\n              dataId={row.original.id}\r\n              setData={setData}\r\n              data={data}\r\n            />\r\n            <IconButton\r\n              onClick={() => {\r\n                setDiscountedData(row.original)\r\n                setEditDiscountOpen(true)\r\n              }}\r\n            >\r\n              <i className='ri-pencil-line' />\r\n            </IconButton>\r\n            {/* <IconButton>\r\n              <Link href={getLocalizedUrl(`/products/discount/details/${row.original.id}`, locale)} className='flex'>\r\n                <i className='ri-eye-line text-textSecondary' />\r\n              </Link>\r\n            </IconButton> */}\r\n            {/* <OptionMenu\r\n              iconButtonProps={{ size: 'medium' }}\r\n              iconClassName='text-textSecondary'\r\n              options={[\r\n                {\r\n                  text: 'Download',\r\n                  icon: 'ri-download-line',\r\n                  menuItemProps: { className: 'flex items-center gap-2 text-textSecondary' }\r\n                },\r\n                {\r\n                  text: 'Edit',\r\n                  icon: 'ri-pencil-line',\r\n                  href: getLocalizedUrl(`/invoice/edit/${row.original.id}`, locale),\r\n                  linkProps: {\r\n                    className: 'flex items-center is-full plb-2 pli-4 gap-2 text-textSecondary'\r\n                  }\r\n                },\r\n                {\r\n                  text: 'Duplicate',\r\n                  icon: 'ri-file-copy-line',\r\n                  menuItemProps: { className: 'flex items-center gap-2 text-textSecondary' }\r\n                }\r\n              ]}\r\n            /> */}\r\n          </div>\r\n        ),\r\n        enableSorting: false\r\n      })\r\n    ],\r\n\r\n    [data, filteredData]\r\n  )\r\n\r\n  const table = useReactTable({\r\n    data: filteredData,\r\n    columns,\r\n    filterFns: {\r\n      fuzzy: fuzzyFilter\r\n    },\r\n    state: {\r\n      rowSelection,\r\n      globalFilter\r\n    },\r\n    initialState: {\r\n      pagination: {\r\n        pageSize: 10\r\n      }\r\n    },\r\n    enableRowSelection: true, //enable row selection for all rows\r\n    // enableRowSelection: row => row.original.age > 18, // or enable row selection conditionally per row\r\n    globalFilterFn: fuzzyFilter,\r\n    onRowSelectionChange: setRowSelection,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    onGlobalFilterChange: setGlobalFilter,\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n    getFacetedRowModel: getFacetedRowModel(),\r\n    getFacetedUniqueValues: getFacetedUniqueValues(),\r\n    getFacetedMinMaxValues: getFacetedMinMaxValues()\r\n  })\r\n\r\n  const getAvatar = params => {\r\n    const { avatar, name } = params\r\n\r\n    if (avatar) {\r\n      return <CustomAvatar src={avatar} skin='light' size={34} />\r\n    } else {\r\n      return (\r\n        <CustomAvatar skin='light' size={34}>\r\n          {getInitials(name)}\r\n        </CustomAvatar>\r\n      )\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const filteredData = data?.filter(invoice => {\r\n      if (status && invoice.status.toLowerCase().replace(/\\s+/g, '-') !== status) return false\r\n      return true\r\n    })\r\n\r\n    setFilteredData(filteredData)\r\n  }, [status, data, setFilteredData])\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardContent className='flex justify-between gap-4 flex-wrap flex-col sm:flex-row items-center'>\r\n          <div className='flex flex-col sm:flex-row max-sm:is-full items-center  gap-4'>\r\n            <DebouncedInput\r\n              value={globalFilter ?? ''}\r\n              onChange={value => setGlobalFilter(String(value))}\r\n              placeholder='Search Product Discount'\r\n              className='max-sm:is-full min-is-[200px]'\r\n            />\r\n\r\n            {/* <FormControl fullWidth size='small' className='min-is-[175px]'>\r\n              <InputLabel id='status-select'>Quotation Status</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                id='select-status'\r\n                value={status}\r\n                onChange={e => setStatus(e.target.value)}\r\n                label='Invoice Status'\r\n                labelId='status-select'\r\n              >\r\n                <MenuItem value=''>none</MenuItem>\r\n                {orderStatus.order_status.map(s => (\r\n                  <MenuItem value={s.name} key={s.id}>\r\n                    {s.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl> */}\r\n            <Button\r\n              variant='contained'\r\n              className='max-sm:is-full is-auto'\r\n              onClick={() => setDiscountOpen(!discountOpen)}\r\n              startIcon={<i className='ri-add-line' />}\r\n            >\r\n              Discount\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n        <div className='overflow-x-auto'>\r\n          <table className={tableStyles.table}>\r\n            <thead>\r\n              {table.getHeaderGroups().map(headerGroup => (\r\n                <tr key={headerGroup.id}>\r\n                  {headerGroup.headers.map(header => (\r\n                    <th key={header.id}>\r\n                      {header.isPlaceholder ? null : (\r\n                        <>\r\n                          <div\r\n                            className={classnames({\r\n                              'flex items-center': header.column.getIsSorted(),\r\n                              'cursor-pointer select-none': header.column.getCanSort()\r\n                            })}\r\n                            onClick={header.column.getToggleSortingHandler()}\r\n                          >\r\n                            {flexRender(header.column.columnDef.header, header.getContext())}\r\n                            {{\r\n                              asc: <i className='ri-arrow-up-s-line text-xl' />,\r\n                              desc: <i className='ri-arrow-down-s-line text-xl' />\r\n                            }[header.column.getIsSorted()] ?? null}\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            {table.getFilteredRowModel().rows.length === 0 ? (\r\n              <tbody>\r\n                <tr>\r\n                  <td colSpan={table.getVisibleFlatColumns().length} className='text-center'>\r\n                    No data available\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            ) : (\r\n              <tbody>\r\n                {table\r\n                  .getRowModel()\r\n                  .rows.slice(0, table.getState().pagination.pageSize)\r\n                  .map(row => {\r\n                    return (\r\n                      <tr key={row.id} className={classnames({ selected: row.getIsSelected() })}>\r\n                        {row.getVisibleCells().map(cell => (\r\n                          <td key={cell.id}>{flexRender(cell.column.columnDef.cell, cell.getContext())}</td>\r\n                        ))}\r\n                      </tr>\r\n                    )\r\n                  })}\r\n              </tbody>\r\n            )}\r\n          </table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50]}\r\n          component='div'\r\n          className='border-bs'\r\n          count={table.getFilteredRowModel().rows.length}\r\n          rowsPerPage={table.getState().pagination.pageSize}\r\n          page={table.getState().pagination.pageIndex}\r\n          SelectProps={{\r\n            inputProps: { 'aria-label': 'rows per page' }\r\n          }}\r\n          onPageChange={(_, page) => {\r\n            table.setPageIndex(page)\r\n          }}\r\n          onRowsPerPageChange={e => table.setPageSize(Number(e.target.value))}\r\n        />\r\n      </Card>\r\n      <Alert />\r\n\r\n      <AddDiscountDrawer\r\n        open={discountOpen}\r\n        productId={productId}\r\n        data={data}\r\n        setData={setData}\r\n        loading={loading}\r\n        setLoading={setLoading}\r\n        handleClose={() => setDiscountOpen(!discountOpen)}\r\n      />\r\n\r\n      <EditDiscountDrawer\r\n        open={editDiscountOpen}\r\n        discountData={discountedData}\r\n        setData={setData}\r\n        loading={loading}\r\n        setLoading={setLoading}\r\n        handleClose={() => setEditDiscountOpen(!editDiscountOpen)}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DiscountListTable\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2390, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/views/products/details/ProductDetailsCard.jsx"],"sourcesContent":["'use client'\r\n\r\n// React Imports\r\nimport { useState, useMemo } from 'react'\r\n\r\n// MUI Imports\r\nimport Card from '@mui/material/Card'\r\nimport CardHeader from '@mui/material/CardHeader'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport Typography from '@mui/material/Typography'\r\n\r\n// Third-party Imports\r\nimport classnames from 'classnames'\r\nimport { rankItem } from '@tanstack/match-sorter-utils'\r\nimport {\r\n  createColumnHelper,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  useReactTable,\r\n  getFilteredRowModel,\r\n  getFacetedRowModel,\r\n  getFacetedUniqueValues,\r\n  getFacetedMinMaxValues,\r\n  getPaginationRowModel,\r\n  getSortedRowModel\r\n} from '@tanstack/react-table'\r\n\r\n// Component Imports\r\nimport Link from '@components/Link'\r\n\r\n// Style Imports\r\nimport tableStyles from '@core/styles/table.module.css'\r\nimport { Button } from '@mui/material'\r\nimport AddDiscountDrawer from '../discount/AddDiscountDrawer'\r\nimport DiscountListTable from '../discount/list/DiscountListTable'\r\nimport { GET_ALL_PRODUCT_DISCOUNT } from '@/graphql/queries'\r\nimport { useSuspenseQuery } from '@apollo/client'\r\n\r\nconst fuzzyFilter = (row, columnId, value, addMeta) => {\r\n  // Rank the item\r\n  const itemRank = rankItem(row.getValue(columnId), value)\r\n\r\n  // Store the itemRank info\r\n  addMeta({\r\n    itemRank\r\n  })\r\n\r\n  // Return if the item should be filtered in/out\r\n  return itemRank.passed\r\n}\r\n\r\nconst productData = [\r\n  {\r\n    productName: 'OnePlus 7 Pro',\r\n    productImage: '/images/apps/ecommerce/product-21.png',\r\n    brand: 'OnePluse',\r\n    price: 799,\r\n    quantity: 1,\r\n    total: 799\r\n  },\r\n  {\r\n    productName: 'Magic Mouse',\r\n    productImage: '/images/apps/ecommerce/product-22.png',\r\n    brand: 'Google',\r\n    price: 89,\r\n    quantity: 1,\r\n    total: 89\r\n  },\r\n  {\r\n    productName: 'Wooden Chair',\r\n    productImage: '/images/apps/ecommerce/product-23.png',\r\n    brand: 'Insofar',\r\n    price: 289,\r\n    quantity: 2,\r\n    total: 578\r\n  },\r\n  {\r\n    productName: 'Air Jorden',\r\n    productImage: '/images/apps/ecommerce/product-24.png',\r\n    brand: 'Nike',\r\n    price: 299,\r\n    quantity: 2,\r\n    total: 598\r\n  }\r\n]\r\n\r\n// Column Definitions\r\nconst columnHelper = createColumnHelper()\r\n\r\n// const OrderTable = ({ productData }) => {\r\n//   // States\r\n\r\n//   const [rowSelection, setRowSelection] = useState({})\r\n//   const [data, setData] = useState(...[productData.order_items])\r\n//   const [globalFilter, setGlobalFilter] = useState('')\r\n\r\n//   const columns = useMemo(\r\n//     () => [\r\n//       // {\r\n//       //   id: 'select',\r\n//       //   header: ({ table }) => (\r\n//       //     <Checkbox\r\n//       //       {...{\r\n//       //         checked: table.getIsAllRowsSelected(),\r\n//       //         indeterminate: table.getIsSomeRowsSelected(),\r\n//       //         onChange: table.getToggleAllRowsSelectedHandler()\r\n//       //       }}\r\n//       //     />\r\n//       //   ),\r\n//       //   cell: ({ row }) => (\r\n//       //     <Checkbox\r\n//       //       {...{\r\n//       //         checked: row.getIsSelected(),\r\n//       //         disabled: !row.getCanSelect(),\r\n//       //         indeterminate: row.getIsSomeSelected(),\r\n//       //         onChange: row.getToggleSelectedHandler()\r\n//       //       }}\r\n//       //     />\r\n//       //   )\r\n//       // },\r\n\r\n//       columnHelper.accessor('title', {\r\n//         header: 'Product',\r\n//         cell: ({ row }) => (\r\n//           <div className='flex items-center gap-3 text-wrap'>\r\n//             {/* <img src={row.original.productImage} alt={row.original.productName} height={34} className='rounded' /> */}\r\n\r\n//             <div className='flex flex-col items-start  '>\r\n//               <Typography color='text.primary' className='font-medium w-60 text-wrap'>\r\n//                 {row.original.product.title}\r\n//               </Typography>\r\n//               <Typography variant='body2'>{row.original.product.brand.title}</Typography>\r\n//             </div>\r\n//           </div>\r\n//         )\r\n//       }),\r\n//       columnHelper.accessor('order_items?.unit_price', {\r\n//         header: 'Price',\r\n//         cell: ({ row }) => <Typography>{`${row.original.unit_price.toLocaleString()}`} Ks</Typography>\r\n//       }),\r\n//       columnHelper.accessor('quantity', {\r\n//         header: 'Qty',\r\n//         cell: ({ row }) => <Typography>{`${row.original.quantity}`}</Typography>\r\n//       }),\r\n//       columnHelper.accessor('total', {\r\n//         header: 'Total',\r\n//         cell: ({ row }) => <Typography>{`${row.original.total?.toLocaleString()}`} Ks</Typography>\r\n//       })\r\n//     ],\r\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n//     []\r\n//   )\r\n\r\n//   const table = useReactTable({\r\n//     data: data,\r\n//     columns,\r\n//     filterFns: {\r\n//       fuzzy: fuzzyFilter\r\n//     },\r\n//     state: {\r\n//       rowSelection,\r\n//       globalFilter\r\n//     },\r\n//     initialState: {\r\n//       pagination: {\r\n//         pageSize: 10\r\n//       }\r\n//     },\r\n//     enableRowSelection: true, //enable row selection for all rows\r\n//     // enableRowSelection: row => row.original.age > 18, // or enable row selection conditionally per row\r\n//     globalFilterFn: fuzzyFilter,\r\n//     onRowSelectionChange: setRowSelection,\r\n//     getCoreRowModel: getCoreRowModel(),\r\n//     onGlobalFilterChange: setGlobalFilter,\r\n//     getFilteredRowModel: getFilteredRowModel(),\r\n//     getSortedRowModel: getSortedRowModel(),\r\n//     getPaginationRowModel: getPaginationRowModel(),\r\n//     getFacetedRowModel: getFacetedRowModel(),\r\n//     getFacetedUniqueValues: getFacetedUniqueValues(),\r\n//     getFacetedMinMaxValues: getFacetedMinMaxValues()\r\n//   })\r\n\r\n//   return (\r\n//     <div className='overflow-x-auto'>\r\n//       <table className={tableStyles.table}>\r\n//         <thead>\r\n//           {table.getHeaderGroups().map(headerGroup => (\r\n//             <tr key={headerGroup.id}>\r\n//               {headerGroup.headers.map(header => (\r\n//                 <th key={header.id}>\r\n//                   {header.isPlaceholder ? null : (\r\n//                     <>\r\n//                       <div\r\n//                         className={classnames({\r\n//                           'flex items-center': header.column.getIsSorted(),\r\n//                           'cursor-pointer select-none': header.column.getCanSort()\r\n//                         })}\r\n//                         onClick={header.column.getToggleSortingHandler()}\r\n//                       >\r\n//                         {flexRender(header.column.columnDef.header, header.getContext())}\r\n//                         {{\r\n//                           asc: <i className='ri-arrow-up-s-line text-xl' />,\r\n//                           desc: <i className='ri-arrow-down-s-line text-xl' />\r\n//                         }[header.column.getIsSorted()] ?? null}\r\n//                       </div>\r\n//                     </>\r\n//                   )}\r\n//                 </th>\r\n//               ))}\r\n//             </tr>\r\n//           ))}\r\n//         </thead>\r\n//         {table.getFilteredRowModel().rows?.length === 0 ? (\r\n//           <tbody>\r\n//             <tr>\r\n//               <td colSpan={table.getVisibleFlatColumns().length} className='text-center'>\r\n//                 No data available\r\n//               </td>\r\n//             </tr>\r\n//           </tbody>\r\n//         ) : (\r\n//           <tbody className='border-be'>\r\n//             {table\r\n//               .getRowModel()\r\n//               .rows.slice(0, table.getState().pagination.pageSize)\r\n//               .map(row => {\r\n//                 return (\r\n//                   <tr key={row.id} className={classnames({ selected: row.getIsSelected() })}>\r\n//                     {row.getVisibleCells().map(cell => (\r\n//                       <td key={cell.id} className='first:is-14'>\r\n//                         {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n//                       </td>\r\n//                     ))}\r\n//                   </tr>\r\n//                 )\r\n//               })}\r\n//           </tbody>\r\n//         )}\r\n//       </table>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nconst DiscountDetailsCard = ({ productData }) => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [discountOpen, setDiscountOpen] = useState(false)\r\n\r\n  const { data: discountData } = useSuspenseQuery(GET_ALL_PRODUCT_DISCOUNT, {\r\n    variables: { product_id: productData.id },\r\n    fetchPolicy: 'network-only'\r\n  })\r\n\r\n  const [data, setData] = useState(...[discountData.product_discounts])\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader\r\n          title='Product Details'\r\n          action={\r\n            <>\r\n              {/* <Button\r\n                variant='contained'\r\n                className='max-sm:is-full is-auto'\r\n                onClick={() => setDiscountOpen(!discountOpen)}\r\n                startIcon={<i className='ri-add-line' />}\r\n              >\r\n                Disable\r\n              </Button> */}\r\n            </>\r\n          }\r\n        />\r\n        {/* <OrderTable productData={productData} /> */}\r\n        <CardContent className='flex '>\r\n          <div>\r\n            <div className='flex items-center gap-12 '>\r\n              <Typography color='text.primary' className='min-is-[100px]'>\r\n                Name :\r\n              </Typography>\r\n              <Typography color='text.primary' className='font-medium'>\r\n                {productData?.title}\r\n              </Typography>\r\n            </div>\r\n\r\n            <div className='flex items-center gap-12 mt-3'>\r\n              <Typography color='text.primary' className='min-is-[100px]'>\r\n                Brand :\r\n              </Typography>\r\n              <Typography color='text.primary' className='font-medium'>\r\n                {productData?.brand?.title}\r\n              </Typography>\r\n            </div>\r\n            <div className='flex items-center gap-12 mt-3'>\r\n              <Typography color='text.primary' className='min-is-[100px]'>\r\n                Serial Number :\r\n              </Typography>\r\n              <Typography color='text.primary' className='font-medium'>\r\n                {productData?.serial_number}\r\n              </Typography>\r\n            </div>\r\n            {/* <div className='flex items-center gap-12'>\r\n            <Typography color='text.primary' className='min-is-[100px]'>\r\n              Tax:\r\n            </Typography>\r\n            <Typography color='text.primary' className='font-medium'>\r\n              $28\r\n            </Typography>\r\n          </div> */}\r\n            <div className='flex items-center gap-12 mt-3'>\r\n              <Typography color='text.primary' className='font-medium min-is-[100px]'>\r\n                Category :\r\n              </Typography>\r\n              <Typography color='text.primary' className='font-medium'>\r\n                {productData?.product_category?.title}\r\n              </Typography>\r\n            </div>\r\n            <div className='flex items-center gap-12 mt-3'>\r\n              <Typography color='text.primary' className='min-is-[100px]'>\r\n                Description :\r\n              </Typography>\r\n              <Typography color='text.primary' className='font-medium'>\r\n                {productData?.description}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      {/* <DiscountListTable discountDatas={data} /> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DiscountDetailsCard\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2805, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2810, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/libs/styles/AppReactDropzone.js"],"sourcesContent":["'use client'\r\n\r\n// MUI imports\r\nimport Box from '@mui/material/Box'\r\nimport { styled } from '@mui/material/styles'\r\n\r\n// Styled Components\r\nconst AppReactDropzone = styled(Box)(({ theme }) => ({\r\n  '& .dropzone': {\r\n    minHeight: 300,\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    cursor: 'pointer',\r\n    position: 'relative',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(4),\r\n    borderRadius: 'var(--mui-shape-borderRadius)',\r\n    border: '2px dashed var(--mui-palette-divider)',\r\n    [theme.breakpoints.down('xs')]: {\r\n      textAlign: 'center'\r\n    },\r\n    '&:focus': {\r\n      outline: 'none'\r\n    },\r\n    '& + .MuiList-root': {\r\n      padding: 0,\r\n      marginTop: theme.spacing(6.25),\r\n      '& .MuiListItem-root': {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        borderRadius: 'var(--mui-shape-borderRadius)',\r\n        padding: theme.spacing(2.5, 2.4, 2.5, 6),\r\n        border: '1px solid var(--mui-palette-divider)',\r\n        '& .file-details': {\r\n          display: 'flex',\r\n          alignItems: 'center'\r\n        },\r\n        '& .file-preview': {\r\n          display: 'flex',\r\n          marginRight: theme.spacing(3.75),\r\n          '& svg': {\r\n            fontSize: '2rem'\r\n          }\r\n        },\r\n        '& img': {\r\n          width: 38,\r\n          height: 38,\r\n          padding: theme.spacing(0.75),\r\n          borderRadius: 'var(--mui-shape-borderRadius)',\r\n          border: '1px solid var(--mui-palette-divider)'\r\n        },\r\n        '& .file-name': {\r\n          fontWeight: 600\r\n        },\r\n        '& + .MuiListItem-root': {\r\n          marginTop: theme.spacing(3.5)\r\n        }\r\n      },\r\n      '& + .buttons': {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        marginTop: theme.spacing(6.25),\r\n        '& > :first-of-type': {\r\n          marginRight: theme.spacing(3.5)\r\n        }\r\n      }\r\n    },\r\n    '& img.single-file-image': {\r\n      objectFit: 'cover',\r\n      position: 'absolute',\r\n      width: 'calc(100% - 1rem)',\r\n      height: 'calc(100% - 1rem)',\r\n      borderRadius: 'var(--mui-shape-borderRadius)'\r\n    }\r\n  }\r\n}))\r\n\r\nexport default AppReactDropzone\r\n"],"names":[],"mappings":";;;;;;AAAA;;;AAMA,oBAAoB;AACpB,MAAM,mBAAmB,CAAA,GAAA,2YAAA,CAAA,SAAM,AAAD,EAAE,gWAAA,CAAA,UAAG,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,CAAC;QACnD,eAAe;YACb,WAAW;YACX,SAAS;YACT,UAAU;YACV,QAAQ;YACR,UAAU;YACV,YAAY;YACZ,gBAAgB;YAChB,SAAS,MAAM,OAAO,CAAC;YACvB,cAAc;YACd,QAAQ;YACR,CAAC,MAAM,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE;gBAC9B,WAAW;YACb;YACA,WAAW;gBACT,SAAS;YACX;YACA,qBAAqB;gBACnB,SAAS;gBACT,WAAW,MAAM,OAAO,CAAC;gBACzB,uBAAuB;oBACrB,SAAS;oBACT,gBAAgB;oBAChB,cAAc;oBACd,SAAS,MAAM,OAAO,CAAC,KAAK,KAAK,KAAK;oBACtC,QAAQ;oBACR,mBAAmB;wBACjB,SAAS;wBACT,YAAY;oBACd;oBACA,mBAAmB;wBACjB,SAAS;wBACT,aAAa,MAAM,OAAO,CAAC;wBAC3B,SAAS;4BACP,UAAU;wBACZ;oBACF;oBACA,SAAS;wBACP,OAAO;wBACP,QAAQ;wBACR,SAAS,MAAM,OAAO,CAAC;wBACvB,cAAc;wBACd,QAAQ;oBACV;oBACA,gBAAgB;wBACd,YAAY;oBACd;oBACA,yBAAyB;wBACvB,WAAW,MAAM,OAAO,CAAC;oBAC3B;gBACF;gBACA,gBAAgB;oBACd,SAAS;oBACT,gBAAgB;oBAChB,WAAW,MAAM,OAAO,CAAC;oBACzB,sBAAsB;wBACpB,aAAa,MAAM,OAAO,CAAC;oBAC7B;gBACF;YACF;YACA,2BAA2B;gBACzB,WAAW;gBACX,UAAU;gBACV,OAAO;gBACP,QAAQ;gBACR,cAAc;YAChB;QACF;IACF,CAAC;uCAEc"}},
    {"offset": {"line": 2891, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2896, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/views/products/add/ProductImage.jsx"],"sourcesContent":["// 'use client'\r\n\r\n// // React Imports\r\n// import { useEffect, useState } from 'react'\r\n\r\n// // MUI Imports\r\n// import Card from '@mui/material/Card'\r\n// import CardHeader from '@mui/material/CardHeader'\r\n// import CardContent from '@mui/material/CardContent'\r\n// import Button from '@mui/material/Button'\r\n// import IconButton from '@mui/material/IconButton'\r\n// import List from '@mui/material/List'\r\n// import ListItem from '@mui/material/ListItem'\r\n// import Typography from '@mui/material/Typography'\r\n// import { styled } from '@mui/material/styles'\r\n// import { uploadFile } from '@/utils/helper'\r\n\r\n// // Third-party Imports\r\n// import { useDropzone } from 'react-dropzone'\r\n\r\n// // Component Imports\r\n// import Link from '@components/Link'\r\n// import CustomAvatar from '@core/components/mui/Avatar'\r\n\r\n// // Styled Component Imports\r\n// import AppReactDropzone from '@/libs/styles/AppReactDropzone'\r\n\r\n// import { DELETE_PRODUCT_IMAGE, IMGAE_UPLOAD, PRODUCT_IMAGE_UPLOAD } from '@/graphql/mutations'\r\n// import { useMutation } from '@apollo/client'\r\n// import { useApp } from '@/app/ApolloWrapper'\r\n// import { set } from 'js-cookie'\r\n\r\n// // Styled Dropzone Component\r\n// const Dropzone = styled(AppReactDropzone)(({ theme }) => ({\r\n//   '& .dropzone': {\r\n//     minHeight: 'unset',\r\n//     padding: theme.spacing(12),\r\n//     [theme.breakpoints.down('sm')]: {\r\n//       paddingInline: theme.spacing(5)\r\n//     },\r\n//     '&+.MuiList-root .MuiListItem-root .file-name': {\r\n//       fontWeight: theme.typography.body1.fontWeight\r\n//     }\r\n//   }\r\n// }))\r\n\r\n// const ProductImage = ({ productId, productData }) => {\r\n//   const [files, setFiles] = useState([])\r\n//   const [getFileUploadUrl] = useMutation(IMGAE_UPLOAD)\r\n//   const [uploadImage] = useMutation(PRODUCT_IMAGE_UPLOAD)\r\n//   const [deleteProductImage] = useMutation(DELETE_PRODUCT_IMAGE)\r\n//   const { setGlobalMsg, loading, setLoading } = useApp()\r\n//   // Hooks\r\n\r\n//   useEffect(() => {\r\n//     setFiles(...[productData.product_medias])\r\n//   }, [productId])\r\n\r\n//   const { getRootProps, getInputProps } = useDropzone({\r\n//     onDrop: acceptedFiles => {\r\n//       setFiles(prevFiles => [...prevFiles, ...acceptedFiles.map(file => Object.assign(file))])\r\n//       handleUploadImage(acceptedFiles)\r\n//     }\r\n//   })\r\n\r\n//   const handleUploadImage = async image => {\r\n//     try {\r\n//       setLoading(true)\r\n//       const fileUploadUrl = await getFileUploadUrl({\r\n//         variables: {\r\n//           content_type: 'image',\r\n//           folder: 'products'\r\n//         }\r\n//       })\r\n//       const uploadedFileUrl = await uploadFile(image[0], fileUploadUrl.data.getFileUploadUrl.fileUploadUrl, 'image')\r\n//       await uploadImage({\r\n//         variables: {\r\n//           data: {\r\n//             product_id: productId,\r\n//             media_type: 'image',\r\n//             media_url: uploadedFileUrl\r\n//           }\r\n//         }\r\n//       })\r\n//       setLoading(false)\r\n//       setGlobalMsg('✅ Image Upload Successful')\r\n//     } catch (e) {\r\n//       console.log('Image upload error', e)\r\n//     }\r\n//   }\r\n\r\n//   const renderFilePreview = file => {\r\n//     if (file?.type?.startsWith('image')) {\r\n//       return <img width={38} height={38} alt={file.name} src={URL.createObjectURL(file)} />\r\n//     } else {\r\n//       // return <i className='ri-file-text-line' />\r\n//       return <img width={38} height={38} alt={file.name} src={file.media_url} />\r\n//     }\r\n//   }\r\n\r\n//   const handleRemoveFile = async file => {\r\n//     await deleteProductImage({ variables: { id: file?.id } })\r\n//     const uploadedFiles = files\r\n//     const filtered = uploadedFiles.filter(i => i.name !== file.name)\r\n//     setFiles([...filtered])\r\n//     setGlobalMsg('✅ Delete Successful')\r\n//   }\r\n\r\n//   const fileList = files.map(file => (\r\n//     <ListItem key={file.id} className='pis-4 plb-3'>\r\n//       <div className='file-details'>\r\n//         <div className='file-preview'>{renderFilePreview(file)}</div>\r\n//         {/* <div>\r\n//           <Typography className='file-name font-medium' color='text.primary'>\r\n//             {file.name}\r\n//           </Typography>\r\n//           <Typography className='file-size' variant='body2'>\r\n//             {Math.round(file.size / 100) / 10 > 1000\r\n//               ? `${(Math.round(file.size / 100) / 10000).toFixed(1)} mb`\r\n//               : `${(Math.round(file.size / 100) / 10).toFixed(1)} kb`}\r\n//           </Typography>\r\n//         </div> */}\r\n//       </div>\r\n//       <IconButton onClick={() => handleRemoveFile(file)}>\r\n//         <i className='ri-close-line text-xl' />\r\n//       </IconButton>\r\n//     </ListItem>\r\n//   ))\r\n\r\n//   const handleRemoveAllFiles = () => {\r\n//     setFiles([])\r\n//   }\r\n\r\n//   return (\r\n//     <Dropzone>\r\n//       <Card>\r\n//         <CardHeader\r\n//           title='Product Image'\r\n//           // action={\r\n//           //   <Typography component={Link} color='primary' className='font-medium'>\r\n//           //     Add media from URL\r\n//           //   </Typography>\r\n//           // }\r\n//           sx={{ '& .MuiCardHeader-action': { alignSelf: 'center' } }}\r\n//         />\r\n//         <CardContent>\r\n//           <div {...getRootProps({ className: 'dropzone' })}>\r\n//             <input {...getInputProps()} />\r\n//             <div className='flex items-center flex-col gap-2 text-center'>\r\n//               <CustomAvatar variant='rounded' skin='light' color='secondary'>\r\n//                 <i className='ri-upload-2-line' />\r\n//               </CustomAvatar>\r\n//               <Typography variant='h4'>Drag and Drop Your Image Here.</Typography>\r\n//               <Typography color='text.disabled'>or</Typography>\r\n//               <Button variant='outlined' size='small' loading={loading}>\r\n//                 Browse Image\r\n//               </Button>\r\n//             </div>\r\n//           </div>\r\n//           {files.length ? (\r\n//             <>\r\n//               <List>{fileList}</List>\r\n//               {/* <div className='buttons'>\r\n//                 <Button color='error' variant='outlined' onClick={handleRemoveAllFiles}>\r\n//                   Remove All\r\n//                 </Button>\r\n//                 <Button variant='contained'>Upload Files</Button>\r\n//               </div> */}\r\n//             </>\r\n//           ) : null}\r\n//         </CardContent>\r\n//       </Card>\r\n//     </Dropzone>\r\n//   )\r\n// }\r\n\r\n// export default ProductImage\r\n\r\n'use client'\r\n// React Imports\r\nimport { useState } from 'react'\r\n\r\n// MUI Imports\r\nimport Card from '@mui/material/Card'\r\nimport CardHeader from '@mui/material/CardHeader'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport Button from '@mui/material/Button'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport List from '@mui/material/List'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport Typography from '@mui/material/Typography'\r\nimport { styled } from '@mui/material/styles'\r\nimport { uploadFile } from '@/utils/helper'\r\n\r\n// Third-party Imports\r\nimport { useDropzone } from 'react-dropzone'\r\n\r\n// Component Imports\r\nimport Link from '@components/Link'\r\nimport CustomAvatar from '@core/components/mui/Avatar'\r\n\r\n// Styled Component Imports\r\nimport AppReactDropzone from '@/libs/styles/AppReactDropzone'\r\n\r\n// Styled Dropzone Component\r\nconst Dropzone = styled(AppReactDropzone)(({ theme }) => ({\r\n  '& .dropzone': {\r\n    minHeight: 'unset',\r\n    padding: theme.spacing(12),\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingInline: theme.spacing(5)\r\n    },\r\n    '&+.MuiList-root .MuiListItem-root .file-name': {\r\n      fontWeight: theme.typography.body1.fontWeight\r\n    }\r\n  }\r\n}))\r\n\r\nconst ProductImage = ({ files, setFiles }) => {\r\n  const [productMedia, setProductMedia] = useState([])\r\n  const [errorMessage, setErrorMessage] = useState(false)\r\n  // Hooks\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop: acceptedFiles => {\r\n      const imageFiles = acceptedFiles.filter(file => file.type.startsWith('image'))\r\n      if (imageFiles.length !== acceptedFiles.length) {\r\n        setErrorMessage('Only image files are allowed.')\r\n      } else {\r\n        setErrorMessage('')\r\n      }\r\n\r\n      setFiles(imageFiles.map(file => Object.assign(file)))\r\n    }\r\n  })\r\n\r\n  const renderFilePreview = file => {\r\n    if (file.type.startsWith('image')) {\r\n      return <img width={38} height={38} alt={file.name} src={URL.createObjectURL(file)} />\r\n    } else {\r\n      return <i className='ri-file-text-line' />\r\n    }\r\n  }\r\n\r\n  const handleRemoveFile = file => {\r\n    const uploadedFiles = files\r\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\r\n    setFiles([...filtered])\r\n  }\r\n\r\n  const fileList = files.map(file => (\r\n    <ListItem key={file.name} className='pis-4 plb-3'>\r\n      <div className='file-details'>\r\n        <div className='file-preview'>{renderFilePreview(file)}</div>\r\n        <div>\r\n          <Typography className='file-name font-medium' color='text.primary'>\r\n            {file.name}\r\n          </Typography>\r\n          <Typography className='file-size' variant='body2'>\r\n            {Math.round(file.size / 100) / 10 > 1000\r\n              ? `${(Math.round(file.size / 100) / 10000).toFixed(1)} mb`\r\n              : `${(Math.round(file.size / 100) / 10).toFixed(1)} kb`}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      <IconButton onClick={() => handleRemoveFile(file)}>\r\n        <i className='ri-close-line text-xl' />\r\n      </IconButton>\r\n    </ListItem>\r\n  ))\r\n\r\n  const handleRemoveAllFiles = () => {\r\n    setFiles([])\r\n  }\r\n\r\n  const handleMultiFileChange = e => {\r\n    const files = e.target.files\r\n    const urls = []\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i]\r\n      const url = URL.createObjectURL(file)\r\n      urls.push({ file: url, type: file.type.split('/')[0] })\r\n    }\r\n    setProductMedia(urls)\r\n  }\r\n\r\n  return (\r\n    <Dropzone>\r\n      <Card>\r\n        <CardHeader title='Product Image' sx={{ '& .MuiCardHeader-action': { alignSelf: 'center' } }} />\r\n        <CardContent>\r\n          <div {...getRootProps({ className: 'dropzone' })}>\r\n            <input {...getInputProps()} />\r\n            <div className='flex items-center flex-col gap-2 text-center'>\r\n              <CustomAvatar variant='rounded' skin='light' color='secondary'>\r\n                <i className='ri-upload-2-line' />\r\n              </CustomAvatar>\r\n              <Typography variant='h4'>Drag and Drop Your Image Here.</Typography>\r\n              <Typography color='text.disabled'>or</Typography>\r\n              <Button variant='outlined' size='small'>\r\n                Browse Image\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          {errorMessage && (\r\n            <Typography color='error' variant='body2'>\r\n              {errorMessage}\r\n            </Typography>\r\n          )}\r\n          {files.length ? (\r\n            <>\r\n              <List>{fileList}</List>\r\n              <div className='buttons'>\r\n                <Button color='error' variant='outlined' onClick={handleRemoveAllFiles}>\r\n                  Remove All\r\n                </Button>\r\n                {/* <Button variant='contained'>Upload Files</Button> */}\r\n              </div>\r\n            </>\r\n          ) : null}\r\n        </CardContent>\r\n      </Card>\r\n    </Dropzone>\r\n  )\r\n}\r\n\r\nexport default ProductImage\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3373, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3378, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/views/products/details/index.jsx"],"sourcesContent":["'use client'\r\n\r\n// MUI Imports\r\nimport Grid from '@mui/material/Grid'\r\n\r\n// Component Imports\r\nimport ProductDetailsCard from './ProductDetailsCard'\r\n\r\nimport { GET_ALL_PRODUCT_DISCOUNT, PRODUCTS_BY_ID } from '@/graphql/queries'\r\nimport { useSuspenseQuery } from '@apollo/client'\r\nimport { useParams } from 'next/navigation'\r\nimport ProductImage from '../add/ProductImage'\r\nimport DiscountListTable from '../discount/list/DiscountListTable'\r\nimport { useState } from 'react'\r\n\r\nconst ProductDetails = () => {\r\n  const { id } = useParams()\r\n  const { data: productId } = useSuspenseQuery(PRODUCTS_BY_ID, { variables: { id: id } })\r\n  const productData = productId?.products_by_pk\r\n  const { data: discountData } = useSuspenseQuery(GET_ALL_PRODUCT_DISCOUNT, {\r\n    variables: { product_id: productData.id },\r\n    fetchPolicy: 'network-only'\r\n  })\r\n\r\n  const [data, setData] = useState(...[discountData.product_discounts])\r\n\r\n  return (\r\n    <Grid container spacing={6}>\r\n      {/* <Grid item xs={12}>\r\n        <OrderStatusAction productData={productData} />\r\n      </Grid> */}\r\n      {/* <Grid item xs={12}>\r\n        <OrderDetailHeader productData={productData} />\r\n      </Grid> */}\r\n      <Grid item xs={12} md={12}>\r\n        <Grid container spacing={6}>\r\n          {/* <Grid item xs={12} md={6}>\r\n            <ProductImage productId={id} productData={productData} />\r\n          </Grid> */}\r\n          <Grid item xs={12} md={6}>\r\n            <ProductDetailsCard productData={productData} />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <DiscountListTable discountDatas={data} productId={id} />\r\n          </Grid>\r\n\r\n          {/* <Grid item xs={12}>\r\n            <ShippingActivity productData={productData} />\r\n          </Grid> */}\r\n        </Grid>\r\n      </Grid>\r\n      {/* <Grid item xs={12} md={4}>\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12}>\r\n            <CustomerDetails productData={productData} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <ShippingAddress productData={productData} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <BillingAddress />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid> */}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ProductDetails\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;AAeA,MAAM,iBAAiB;IACrB,MAAM,EAAE,EAAE,EAAE,GAAG,CAAA,GAAA,iQAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,MAAM,SAAS,EAAE,GAAG,CAAA,GAAA,gXAAA,CAAA,mBAAgB,AAAD,EAAE,yHAAA,CAAA,iBAAc,EAAE;QAAE,WAAW;YAAE,IAAI;QAAG;IAAE;IACrF,MAAM,cAAc,WAAW;IAC/B,MAAM,EAAE,MAAM,YAAY,EAAE,GAAG,CAAA,GAAA,gXAAA,CAAA,mBAAgB,AAAD,EAAE,yHAAA,CAAA,2BAAwB,EAAE;QACxE,WAAW;YAAE,YAAY,YAAY,EAAE;QAAC;QACxC,aAAa;IACf;IAEA,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,8UAAA,CAAA,WAAQ,AAAD,KAAK;QAAC,aAAa,iBAAiB;KAAC;IAEpE,qBACE,uXAAC,kWAAA,CAAA,UAAI;QAAC,SAAS;QAAC,SAAS;kBAOvB,cAAA,uXAAC,kWAAA,CAAA,UAAI;YAAC,IAAI;YAAC,IAAI;YAAI,IAAI;sBACrB,cAAA,uXAAC,kWAAA,CAAA,UAAI;gBAAC,SAAS;gBAAC,SAAS;;kCAIvB,uXAAC,kWAAA,CAAA,UAAI;wBAAC,IAAI;wBAAC,IAAI;wBAAI,IAAI;kCACrB,cAAA,uXAAC,0JAAA,CAAA,UAAkB;4BAAC,aAAa;;;;;;;;;;;kCAGnC,uXAAC,kWAAA,CAAA,UAAI;wBAAC,IAAI;wBAAC,IAAI;kCACb,cAAA,uXAAC,kKAAA,CAAA,UAAiB;4BAAC,eAAe;4BAAM,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuB/D;uCAEe"}},
    {"offset": {"line": 3479, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}