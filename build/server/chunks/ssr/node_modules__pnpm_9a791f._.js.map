{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@mui+utils@5.16.6_@types+react@18.3.8_react@18.3.1/node_modules/@mui/utils/esm/createChainedFunction/createChainedFunction.js"],"sourcesContent":["/**\n * Safe chained function.\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n */\nexport default function createChainedFunction(...funcs) {\n  return funcs.reduce((acc, func) => {\n    if (func == null) {\n      return acc;\n    }\n    return function chainedFunction(...args) {\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, () => {});\n}"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACc,SAAS,sBAAsB,GAAG,KAAK;IACpD,OAAO,MAAM,MAAM,CAAC,CAAC,KAAK;QACxB,IAAI,QAAQ,MAAM;YAChB,OAAO;QACT;QACA,OAAO,SAAS,gBAAgB,GAAG,IAAI;YACrC,IAAI,KAAK,CAAC,IAAI,EAAE;YAChB,KAAK,KAAK,CAAC,IAAI,EAAE;QACnB;IACF,GAAG,KAAO;AACZ"}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@mui+utils@5.16.6_@types+react@18.3.8_react@18.3.1/node_modules/@mui/utils/esm/ownerWindow/ownerWindow.js"],"sourcesContent":["import ownerDocument from '../ownerDocument';\nexport default function ownerWindow(node) {\n  const doc = ownerDocument(node);\n  return doc.defaultView || window;\n}"],"names":[],"mappings":";;;;;;AACe,SAAS,YAAY,IAAI;IACtC,MAAM,MAAM,CAAA,GAAA,4RAAA,CAAA,UAAa,AAAD,EAAE;IAC1B,OAAO,IAAI,WAAW,IAAI;AAC5B"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@mui+utils@5.16.6_@types+react@18.3.8_react@18.3.1/node_modules/@mui/utils/esm/debounce/debounce.js"],"sourcesContent":["// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func, wait = 166) {\n  let timeout;\n  function debounced(...args) {\n    const later = () => {\n      // @ts-ignore\n      func.apply(this, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n  debounced.clear = () => {\n    clearTimeout(timeout);\n  };\n  return debounced;\n}"],"names":[],"mappings":"AAAA,qCAAqC;AACrC,kFAAkF;;;;AACnE,SAAS,SAAS,IAAI,EAAE,OAAO,GAAG;IAC/C,IAAI;IACJ,SAAS,UAAU,GAAG,IAAI;QACxB,MAAM,QAAQ;YACZ,aAAa;YACb,KAAK,KAAK,CAAC,IAAI,EAAE;QACnB;QACA,aAAa;QACb,UAAU,WAAW,OAAO;IAC9B;IACA,UAAU,KAAK,GAAG;QAChB,aAAa;IACf;IACA,OAAO;AACT"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@mui+utils@5.16.6_@types+react@18.3.8_react@18.3.1/node_modules/@mui/utils/esm/isMuiElement/isMuiElement.js"],"sourcesContent":["import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  var _muiName, _element$type;\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf( // For server components `muiName` is avaialble in element.type._payload.value.muiName\n  // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45\n  // eslint-disable-next-line no-underscore-dangle\n  (_muiName = element.type.muiName) != null ? _muiName : (_element$type = element.type) == null || (_element$type = _element$type._payload) == null || (_element$type = _element$type.value) == null ? void 0 : _element$type.muiName) !== -1;\n}"],"names":[],"mappings":";;;;;;AACe,SAAS,aAAa,OAAO,EAAE,QAAQ;IACpD,IAAI,UAAU;IACd,OAAO,WAAW,GAAE,+UAAM,cAAc,CAAC,YAAY,SAAS,OAAO,CACrE,sIAAsI;IACtI,gDAAgD;IAChD,CAAC,WAAW,QAAQ,IAAI,CAAC,OAAO,KAAK,OAAO,WAAW,CAAC,gBAAgB,QAAQ,IAAI,KAAK,QAAQ,CAAC,gBAAgB,cAAc,QAAQ,KAAK,QAAQ,CAAC,gBAAgB,cAAc,KAAK,KAAK,OAAO,KAAK,IAAI,cAAc,OAAO,MAAM,CAAC;AAC5O"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@mui+lab@5.0.0-alpha.172_@emotion+react@11.13.0_@types+react@18.3.8_react@18.3.1__@emotion+st_gocggnyd3t4rtzbhqu23ohyol4/node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js"],"sourcesContent":["import generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;"],"names":[],"mappings":";;;;;;;;;AAEO,SAAS,6BAA6B,IAAI;IAC/C,OAAO,CAAA,GAAA,0SAAA,CAAA,UAAoB,AAAD,EAAE,oBAAoB;AAClD;AACA,MAAM,uBAAuB,CAAA,GAAA,8SAAA,CAAA,UAAsB,AAAD,EAAE,oBAAoB;IAAC;IAAQ;IAAW;IAAoB;IAA0B;IAAyB;IAAuB;IAAqB;CAAwB;uCACxN"}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@mui+lab@5.0.0-alpha.172_@emotion+react@11.13.0_@types+react@18.3.8_react@18.3.1__@emotion+st_gocggnyd3t4rtzbhqu23ohyol4/node_modules/@mui/lab/LoadingButton/LoadingButton.js"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"id\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled } from '@mui/material/styles';\nimport { useDefaultProps } from '@mui/material/DefaultPropsProvider';\nimport Button from '@mui/material/Button';\nimport { ButtonGroupContext } from '@mui/material/ButtonGroup';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport resolveProps from '@mui/utils/resolveProps';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\n// TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('span', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: (theme.vars || theme).palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const contextProps = React.useContext(ButtonGroupContext);\n  const resolvedProps = resolveProps(contextProps, inProps);\n  const props = useDefaultProps({\n    props: resolvedProps,\n    name: 'MuiLoadingButton'\n  });\n  const {\n      children,\n      disabled = false,\n      id: idProp,\n      loading = false,\n      loadingIndicator: loadingIndicatorProp,\n      loadingPosition = 'center',\n      variant = 'text'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const id = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": id,\n    color: \"inherit\",\n    size: 16\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const loadingButtonLoadingIndicator = loading ? /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n    className: classes.loadingIndicator,\n    ownerState: ownerState,\n    children: loadingIndicator\n  }) : null;\n  return /*#__PURE__*/_jsxs(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    id: id,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: [ownerState.loadingPosition === 'end' ? children : loadingButtonLoadingIndicator, ownerState.loadingPosition === 'end' ? loadingButtonLoadingIndicator : children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the loading indicator is shown and the button becomes disabled.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default we render a `CircularProgress` that is labelled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default LoadingButton;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 431, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@apollo+client@3.11.8_@types+react@18.3.8_graphql@16.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@apollo/src/react/hooks/useSyncExternalStore.ts"],"sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"rehackt\";\n\nimport { canUseLayoutEffect } from \"../../utilities/index.js\";\n\nlet didWarnUncachedGetSnapshot = false;\n\ntype RealUseSESHookType =\n  // This import depends only on the @types/use-sync-external-store package, not\n  // the actual use-sync-external-store package, which is not installed. It\n  // might be nice to get this type from React 18, but it still needs to work\n  // when only React 17 or earlier is installed.\n  typeof import(\"use-sync-external-store\").useSyncExternalStore;\n\n// Prevent webpack from complaining about our feature detection of the\n// useSyncExternalStore property of the React namespace, which is expected not\n// to exist when using React 17 and earlier, and that's fine.\nconst uSESKey = \"useSyncExternalStore\" as keyof typeof React;\nconst realHook = React[uSESKey] as RealUseSESHookType | undefined;\n\n// Adapted from https://www.npmjs.com/package/use-sync-external-store, with\n// Apollo Client deviations called out by \"// DEVIATION ...\" comments.\n\n// When/if React.useSyncExternalStore is defined, delegate fully to it.\nexport const useSyncExternalStore: RealUseSESHookType =\n  realHook ||\n  ((subscribe, getSnapshot, getServerSnapshot) => {\n    // Read the current snapshot from the store on every render. Again, this\n    // breaks the rules of React, and only works here because of specific\n    // implementation details, most importantly that updates are\n    // always synchronous.\n    const value = getSnapshot();\n    if (\n      // DEVIATION: Using __DEV__\n      __DEV__ &&\n      !didWarnUncachedGetSnapshot &&\n      // DEVIATION: Not using Object.is because we know our snapshots will never\n      // be exotic primitive values like NaN, which is !== itself.\n      value !== getSnapshot()\n    ) {\n      didWarnUncachedGetSnapshot = true;\n      // DEVIATION: Using invariant.error instead of console.error directly.\n      invariant.error(\n        \"The result of getSnapshot should be cached to avoid an infinite loop\"\n      );\n    }\n\n    // Because updates are synchronous, we don't queue them. Instead we force a\n    // re-render whenever the subscribed state changes by updating an some\n    // arbitrary useState hook. Then, during render, we call getSnapshot to read\n    // the current value.\n    //\n    // Because we don't actually use the state returned by the useState hook, we\n    // can save a bit of memory by storing other stuff in that slot.\n    //\n    // To implement the early bailout, we need to track some things on a mutable\n    // object. Usually, we would put that in a useRef hook, but we can stash it in\n    // our useState hook instead.\n    //\n    // To force a re-render, we call forceUpdate({inst}). That works because the\n    // new object always fails an equality check.\n    const [{ inst }, forceUpdate] = React.useState({\n      inst: { value, getSnapshot },\n    });\n\n    // Track the latest getSnapshot function with a ref. This needs to be updated\n    // in the layout phase so we can access it during the tearing check that\n    // happens on subscribe.\n    if (canUseLayoutEffect) {\n      // DEVIATION: We avoid calling useLayoutEffect when !canUseLayoutEffect,\n      // which may seem like a conditional hook, but this code ends up behaving\n      // unconditionally (one way or the other) because canUseLayoutEffect is\n      // constant.\n      React.useLayoutEffect(() => {\n        Object.assign(inst, { value, getSnapshot });\n        // Whenever getSnapshot or subscribe changes, we need to check in the\n        // commit phase if there was an interleaved mutation. In concurrent mode\n        // this can happen all the time, but even in synchronous mode, an earlier\n        // effect may have mutated the store.\n        if (checkIfSnapshotChanged(inst)) {\n          // Force a re-render.\n          forceUpdate({ inst });\n        }\n        // React Hook React.useLayoutEffect has a missing dependency: 'inst'. Either include it or remove the dependency array.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [subscribe, value, getSnapshot]);\n    } else {\n      Object.assign(inst, { value, getSnapshot });\n    }\n\n    React.useEffect(() => {\n      // Check for changes right before subscribing. Subsequent changes will be\n      // detected in the subscription handler.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({ inst });\n      }\n\n      // Subscribe to the store and return a clean-up function.\n      return subscribe(function handleStoreChange() {\n        // TODO: Because there is no cross-renderer API for batching updates, it's\n        // up to the consumer of this library to wrap their subscription event\n        // with unstable_batchedUpdates. Should we try to detect when this isn't\n        // the case and print a warning in development?\n\n        // The store changed. Check if the snapshot changed since the last time we\n        // read from the store.\n        if (checkIfSnapshotChanged(inst)) {\n          // Force a re-render.\n          forceUpdate({ inst });\n        }\n      });\n      // React Hook React.useEffect has a missing dependency: 'inst'. Either include it or remove the dependency array.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [subscribe]);\n\n    return value;\n  });\n\nfunction checkIfSnapshotChanged<Snapshot>({\n  value,\n  getSnapshot,\n}: {\n  value: Snapshot;\n  getSnapshot: () => Snapshot;\n}): boolean {\n  try {\n    return value !== getSnapshot();\n  } catch {\n    return true;\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAKA,IAAI,6BAA6B;AASjC,sEAAsE;AACtE,8EAA8E;AAC9E,6DAA6D;AAC7D,IAAM,UAAU;AAChB,IAAM,WAAW,6OAAK,CAAC,QAA0C;AAM1D,IAAM,uBACX,YACC,SAAC,SAAS,EAAE,WAAW,EAAE,iBAAiB;IACzC,wEAAwE;IACxE,qEAAqE;IACrE,4DAA4D;IAC5D,sBAAsB;IACtB,IAAM,QAAQ;IACd,IACE,2BAA2B;IAC3B,WAAO,OAAA,KAAA,SACP,CAAC,8BACD,0EAA0E;IAC1E,4DAA4D;IAC5D,UAAU,eACV;QACA,6BAA6B;QAC7B,sEAAsE;QACtE,WAAU,OACR,KAAA,SAAA,uYAAA,CAAA,YAAA,CAAA,KAAA,CAAA;IAEJ;IAEA,2EAA2E;IAC3E,sEAAsE;IACtE,4EAA4E;IAC5E,qBAAqB;IACrB,EAAE;IACF,4EAA4E;IAC5E,gEAAgE;IAChE,EAAE;IACF,4EAA4E;IAC5E,8EAA8E;IAC9E,6BAA6B;IAC7B,EAAE;IACF,4EAA4E;IAC5E,6CAA6C;IACvC,IAAA,KAA0B,8OAAM,QAAQ,CAAC;QAC7C,MAAM;YAAE,OAAK;YAAE,aAAW;QAAA;QADnB,OAAI,EAAA,CAAA,EAAA,CAAA,IAAA,EAAI,cAAW,EAAA,CAAA,EAE1B;IAEF,6EAA6E;IAC7E,wEAAwE;IACxE,wBAAwB;IACxB,IAAI,2WAAA,CAAA,qBAAkB,EAAE;QACtB,wEAAwE;QACxE,yEAAyE;QACzE,uEAAuE;QACvE,YAAY;QACZ,8OAAM,eAAe,CAAC;YACpB,OAAO,MAAM,CAAC,MAAM;gBAAE,OAAK;gBAAE,aAAW;YAAA;YACxC,qEAAqE;YACrE,wEAAwE;YACxE,yEAAyE;YACzE,qCAAqC;YACrC,IAAI,uBAAuB,OAAO;gBAChC,qBAAqB;gBACrB,YAAY;oBAAE,MAAI;gBAAA;YACpB;QACA,uHAAuH;QACvH,uDAAuD;QACzD,GAAG;YAAC;YAAW;YAAO;SAAY;IACpC,OAAO;QACL,OAAO,MAAM,CAAC,MAAM;YAAE,OAAK;YAAE,aAAW;QAAA;IAC1C;IAEA,8OAAM,SAAS,CAAC;QACd,yEAAyE;QACzE,wCAAwC;QACxC,IAAI,uBAAuB,OAAO;YAChC,qBAAqB;YACrB,YAAY;gBAAE,MAAI;YAAA;QACpB;QAEA,yDAAyD;QACzD,OAAO,UAAU,SAAS;YACxB,0EAA0E;YAC1E,sEAAsE;YACtE,wEAAwE;YACxE,+CAA+C;YAE/C,0EAA0E;YAC1E,uBAAuB;YACvB,IAAI,uBAAuB,OAAO;gBAChC,qBAAqB;gBACrB,YAAY;oBAAE,MAAI;gBAAA;YACpB;QACF;IACA,iHAAiH;IACjH,uDAAuD;IACzD,GAAG;QAAC;KAAU;IAEd,OAAO;AACT;AAEF,SAAS,uBAAiC,EAMzC;QALC,QAAK,GAAA,KAAA,EACL,cAAW,GAAA,WAAA;IAKX,IAAI;QACF,OAAO,UAAU;IACnB,EAAE,OAAA,IAAM;QACN,OAAO;IACT;AACF"}},
    {"offset": {"line": 562, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 567, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@apollo+client@3.11.8_@types+react@18.3.8_graphql@16.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@apollo/src/react/hooks/useQuery.ts"],"sourcesContent":["/**\n * Function parameters in this file try to follow a common order for the sake of\n * readability and consistency. The order is as follows:\n *\n * resultData\n * observable\n * client\n * query\n * options\n * watchQueryOptions\n * makeWatchQueryOptions\n * isSSRAllowed\n * disableNetworkFetches\n * partialRefetch\n * renderPromises\n * isSyncSSR\n * callbacks\n */\n/** */\nimport { invariant } from \"../../utilities/globals/index.js\";\n\nimport * as React from \"rehackt\";\nimport { useSyncExternalStore } from \"./useSyncExternalStore.js\";\nimport { equal } from \"@wry/equality\";\n\nimport type {\n  ApolloClient,\n  DefaultOptions,\n  OperationVariables,\n  WatchQueryFetchPolicy,\n} from \"../../core/index.js\";\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport type {\n  ApolloQueryResult,\n  ObservableQuery,\n  DocumentNode,\n  TypedDocumentNode,\n  WatchQueryOptions,\n} from \"../../core/index.js\";\nimport { NetworkStatus } from \"../../core/index.js\";\nimport type {\n  QueryHookOptions,\n  QueryResult,\n  ObservableQueryFields,\n  NoInfer,\n} from \"../types/types.js\";\n\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nimport {\n  compact,\n  isNonEmptyArray,\n  maybeDeepFreeze,\n} from \"../../utilities/index.js\";\nimport { wrapHook } from \"./internal/index.js\";\nimport type { RenderPromises } from \"../ssr/RenderPromises.js\";\n\nconst {\n  prototype: { hasOwnProperty },\n} = Object;\n\ntype InternalQueryResult<TData, TVariables extends OperationVariables> = Omit<\n  QueryResult<TData, TVariables>,\n  Exclude<keyof ObservableQueryFields<TData, TVariables>, \"variables\">\n>;\n\nfunction noop() {}\nexport const lastWatchOptions = Symbol();\n\nexport interface ObsQueryWithMeta<TData, TVariables extends OperationVariables>\n  extends ObservableQuery<TData, TVariables> {\n  [lastWatchOptions]?: WatchQueryOptions<TVariables, TData>;\n}\n\nexport interface InternalResult<TData, TVariables extends OperationVariables> {\n  // These members are populated by getCurrentResult and setResult, and it's\n  // okay/normal for them to be initially undefined.\n  current?: undefined | InternalQueryResult<TData, TVariables>;\n  previousData?: undefined | TData;\n}\n\ninterface InternalState<TData, TVariables extends OperationVariables> {\n  client: ReturnType<typeof useApolloClient>;\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>;\n  observable: ObsQueryWithMeta<TData, TVariables>;\n  resultData: InternalResult<TData, TVariables>;\n}\n\nexport type UpdateInternalState<\n  TData,\n  TVariables extends OperationVariables,\n> = (state: InternalState<TData, TVariables>) => void;\n\ninterface Callbacks<TData> {\n  // Defining these methods as no-ops on the prototype allows us to call\n  // state.onCompleted and/or state.onError without worrying about whether a\n  // callback was provided.\n  onCompleted(data: TData): void;\n  onError(error: ApolloError): void;\n}\n\n/**\n * A hook for executing queries in an Apollo application.\n *\n * To run a query within a React component, call `useQuery` and pass it a GraphQL query document.\n *\n * When your component renders, `useQuery` returns an object from Apollo Client that contains `loading`, `error`, and `data` properties you can use to render your UI.\n *\n * > Refer to the [Queries](https://www.apollographql.com/docs/react/data/queries) section for a more in-depth overview of `useQuery`.\n *\n * @example\n * ```jsx\n * import { gql, useQuery } from '@apollo/client';\n *\n * const GET_GREETING = gql`\n *   query GetGreeting($language: String!) {\n *     greeting(language: $language) {\n *       message\n *     }\n *   }\n * `;\n *\n * function Hello() {\n *   const { loading, error, data } = useQuery(GET_GREETING, {\n *     variables: { language: 'english' },\n *   });\n *   if (loading) return <p>Loading ...</p>;\n *   return <h1>Hello {data.greeting.message}!</h1>;\n * }\n * ```\n * @since 3.0.0\n * @param query - A GraphQL query document parsed into an AST by `gql`.\n * @param options - Options to control how the query is executed.\n * @returns Query result object\n */\nexport function useQuery<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options: QueryHookOptions<\n    NoInfer<TData>,\n    NoInfer<TVariables>\n  > = Object.create(null)\n): QueryResult<TData, TVariables> {\n  return wrapHook(\n    \"useQuery\",\n    _useQuery,\n    useApolloClient(options && options.client)\n  )(query, options);\n}\n\nfunction _useQuery<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options: QueryHookOptions<NoInfer<TData>, NoInfer<TVariables>>\n) {\n  const { result, obsQueryFields } = useQueryInternals(query, options);\n  return React.useMemo(\n    () => ({ ...result, ...obsQueryFields }),\n    [result, obsQueryFields]\n  );\n}\n\nfunction useInternalState<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n>(\n  client: ApolloClient<object>,\n  query: DocumentNode | TypedDocumentNode<any, any>,\n  options: QueryHookOptions<NoInfer<TData>, NoInfer<TVariables>>,\n  renderPromises: RenderPromises | undefined,\n  makeWatchQueryOptions: () => WatchQueryOptions<TVariables, TData>\n) {\n  function createInternalState(previous?: InternalState<TData, TVariables>) {\n    verifyDocumentType(query, DocumentType.Query);\n\n    const internalState: InternalState<TData, TVariables> = {\n      client,\n      query,\n      observable:\n        // See if there is an existing observable that was used to fetch the same\n        // data and if so, use it instead since it will contain the proper queryId\n        // to fetch the result set. This is used during SSR.\n        (renderPromises &&\n          renderPromises.getSSRObservable(makeWatchQueryOptions())) ||\n        client.watchQuery(\n          getObsQueryOptions(void 0, client, options, makeWatchQueryOptions())\n        ),\n      resultData: {\n        // Reuse previousData from previous InternalState (if any) to provide\n        // continuity of previousData even if/when the query or client changes.\n        previousData: previous?.resultData.current?.data,\n      },\n    };\n\n    return internalState as InternalState<TData, TVariables>;\n  }\n\n  let [internalState, updateInternalState] =\n    React.useState(createInternalState);\n\n  /**\n   * Used by `useLazyQuery` when a new query is executed.\n   * We keep this logic here since it needs to update things in unsafe\n   * ways and here we at least can keep track of that in a single place.\n   */\n  function onQueryExecuted(\n    watchQueryOptions: WatchQueryOptions<TVariables, TData>\n  ) {\n    // this needs to be set to prevent an immediate `resubscribe` in the\n    // next rerender of the `useQuery` internals\n    Object.assign(internalState.observable, {\n      [lastWatchOptions]: watchQueryOptions,\n    });\n    const resultData = internalState.resultData;\n    updateInternalState({\n      ...internalState,\n      // might be a different query\n      query: watchQueryOptions.query,\n      resultData: Object.assign(resultData, {\n        // We need to modify the previous `resultData` object as we rely on the\n        // object reference in other places\n        previousData: resultData.current?.data || resultData.previousData,\n        current: undefined,\n      }),\n    });\n  }\n\n  if (client !== internalState.client || query !== internalState.query) {\n    // If the client or query have changed, we need to create a new InternalState.\n    // This will trigger a re-render with the new state, but it will also continue\n    // to run the current render function to completion.\n    // Since we sometimes trigger some side-effects in the render function, we\n    // re-assign `state` to the new state to ensure that those side-effects are\n    // triggered with the new state.\n    const newInternalState = createInternalState(internalState);\n    updateInternalState(newInternalState);\n    return [newInternalState, onQueryExecuted] as const;\n  }\n\n  return [internalState, onQueryExecuted] as const;\n}\n\nexport function useQueryInternals<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options: QueryHookOptions<NoInfer<TData>, NoInfer<TVariables>>\n) {\n  const client = useApolloClient(options.client);\n\n  const renderPromises = React.useContext(getApolloContext()).renderPromises;\n  const isSyncSSR = !!renderPromises;\n  const disableNetworkFetches = client.disableNetworkFetches;\n  const ssrAllowed = options.ssr !== false && !options.skip;\n  const partialRefetch = options.partialRefetch;\n\n  const makeWatchQueryOptions = createMakeWatchQueryOptions(\n    client,\n    query,\n    options,\n    isSyncSSR\n  );\n\n  const [{ observable, resultData }, onQueryExecuted] = useInternalState(\n    client,\n    query,\n    options,\n    renderPromises,\n    makeWatchQueryOptions\n  );\n\n  const watchQueryOptions: Readonly<WatchQueryOptions<TVariables, TData>> =\n    makeWatchQueryOptions(observable);\n\n  useResubscribeIfNecessary<TData, TVariables>(\n    resultData, // might get mutated during render\n    observable, // might get mutated during render\n    client,\n    options,\n    watchQueryOptions\n  );\n\n  const obsQueryFields = React.useMemo<\n    Omit<ObservableQueryFields<TData, TVariables>, \"variables\">\n  >(() => bindObservableMethods(observable), [observable]);\n\n  useRegisterSSRObservable(observable, renderPromises, ssrAllowed);\n\n  const result = useObservableSubscriptionResult<TData, TVariables>(\n    resultData,\n    observable,\n    client,\n    options,\n    watchQueryOptions,\n    disableNetworkFetches,\n    partialRefetch,\n    isSyncSSR,\n    {\n      onCompleted: options.onCompleted || noop,\n      onError: options.onError || noop,\n    }\n  );\n\n  return {\n    result,\n    obsQueryFields,\n    observable,\n    resultData,\n    client,\n    onQueryExecuted,\n  };\n}\n\nfunction useObservableSubscriptionResult<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n>(\n  resultData: InternalResult<TData, TVariables>,\n  observable: ObservableQuery<TData, TVariables>,\n  client: ApolloClient<object>,\n  options: QueryHookOptions<NoInfer<TData>, NoInfer<TVariables>>,\n  watchQueryOptions: Readonly<WatchQueryOptions<TVariables, TData>>,\n  disableNetworkFetches: boolean,\n  partialRefetch: boolean | undefined,\n  isSyncSSR: boolean,\n  callbacks: {\n    onCompleted: (data: TData) => void;\n    onError: (error: ApolloError) => void;\n  }\n) {\n  const callbackRef = React.useRef<Callbacks<TData>>(callbacks);\n  React.useEffect(() => {\n    // Make sure state.onCompleted and state.onError always reflect the latest\n    // options.onCompleted and options.onError callbacks provided to useQuery,\n    // since those functions are often recreated every time useQuery is called.\n    // Like the forceUpdate method, the versions of these methods inherited from\n    // InternalState.prototype are empty no-ops, but we can override them on the\n    // base state object (without modifying the prototype).\n    callbackRef.current = callbacks;\n  });\n\n  const resultOverride =\n    (\n      (isSyncSSR || disableNetworkFetches) &&\n      options.ssr === false &&\n      !options.skip\n    ) ?\n      // If SSR has been explicitly disabled, and this function has been called\n      // on the server side, return the default loading state.\n      ssrDisabledResult\n    : options.skip || watchQueryOptions.fetchPolicy === \"standby\" ?\n      // When skipping a query (ie. we're not querying for data but still want to\n      // render children), make sure the `data` is cleared out and `loading` is\n      // set to `false` (since we aren't loading anything).\n      //\n      // NOTE: We no longer think this is the correct behavior. Skipping should\n      // not automatically set `data` to `undefined`, but instead leave the\n      // previous data in place. In other words, skipping should not mandate that\n      // previously received data is all of a sudden removed. Unfortunately,\n      // changing this is breaking, so we'll have to wait until Apollo Client 4.0\n      // to address this.\n      skipStandbyResult\n    : void 0;\n\n  const previousData = resultData.previousData;\n  const currentResultOverride = React.useMemo(\n    () =>\n      resultOverride &&\n      toQueryResult(resultOverride, previousData, observable, client),\n    [client, observable, resultOverride, previousData]\n  );\n\n  return useSyncExternalStore(\n    React.useCallback(\n      (handleStoreChange) => {\n        // reference `disableNetworkFetches` here to ensure that the rules of hooks\n        // keep it as a dependency of this effect, even though it's not used\n        disableNetworkFetches;\n\n        if (isSyncSSR) {\n          return () => {};\n        }\n\n        const onNext = () => {\n          const previousResult = resultData.current;\n          // We use `getCurrentResult()` instead of the onNext argument because\n          // the values differ slightly. Specifically, loading results will have\n          // an empty object for data instead of `undefined` for some reason.\n          const result = observable.getCurrentResult();\n          // Make sure we're not attempting to re-render similar results\n          if (\n            previousResult &&\n            previousResult.loading === result.loading &&\n            previousResult.networkStatus === result.networkStatus &&\n            equal(previousResult.data, result.data)\n          ) {\n            return;\n          }\n\n          setResult(\n            result,\n            resultData,\n            observable,\n            client,\n            partialRefetch,\n            handleStoreChange,\n            callbackRef.current\n          );\n        };\n\n        const onError = (error: Error) => {\n          subscription.current.unsubscribe();\n          subscription.current = observable.resubscribeAfterError(\n            onNext,\n            onError\n          );\n\n          if (!hasOwnProperty.call(error, \"graphQLErrors\")) {\n            // The error is not a GraphQL error\n            throw error;\n          }\n\n          const previousResult = resultData.current;\n          if (\n            !previousResult ||\n            (previousResult && previousResult.loading) ||\n            !equal(error, previousResult.error)\n          ) {\n            setResult(\n              {\n                data: (previousResult && previousResult.data) as TData,\n                error: error as ApolloError,\n                loading: false,\n                networkStatus: NetworkStatus.error,\n              },\n              resultData,\n              observable,\n              client,\n              partialRefetch,\n              handleStoreChange,\n              callbackRef.current\n            );\n          }\n        };\n\n        // TODO evaluate if we keep this in\n        // React Compiler cannot handle scoped `let` access, but a mutable object\n        // like this is fine.\n        // was:\n        // let subscription = observable.subscribe(onNext, onError);\n        const subscription = { current: observable.subscribe(onNext, onError) };\n\n        // Do the \"unsubscribe\" with a short delay.\n        // This way, an existing subscription can be reused without an additional\n        // request if \"unsubscribe\"  and \"resubscribe\" to the same ObservableQuery\n        // happen in very fast succession.\n        return () => {\n          setTimeout(() => subscription.current.unsubscribe());\n        };\n      },\n\n      [\n        disableNetworkFetches,\n        isSyncSSR,\n        observable,\n        resultData,\n        partialRefetch,\n        client,\n      ]\n    ),\n    () =>\n      currentResultOverride ||\n      getCurrentResult(\n        resultData,\n        observable,\n        callbackRef.current,\n        partialRefetch,\n        client\n      ),\n    () =>\n      currentResultOverride ||\n      getCurrentResult(\n        resultData,\n        observable,\n        callbackRef.current,\n        partialRefetch,\n        client\n      )\n  );\n}\n\nfunction useRegisterSSRObservable(\n  observable: ObsQueryWithMeta<any, any>,\n  renderPromises: RenderPromises | undefined,\n  ssrAllowed: boolean\n) {\n  if (renderPromises && ssrAllowed) {\n    renderPromises.registerSSRObservable(observable);\n\n    if (observable.getCurrentResult().loading) {\n      // TODO: This is a legacy API which could probably be cleaned up\n      renderPromises.addObservableQueryPromise(observable);\n    }\n  }\n}\n\n// this hook is not compatible with any rules of React, and there's no good way to rewrite it.\n// it should stay a separate hook that will not be optimized by the compiler\nfunction useResubscribeIfNecessary<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n>(\n  /** this hook will mutate properties on `resultData` */\n  resultData: InternalResult<TData, TVariables>,\n  /** this hook will mutate properties on `observable` */\n  observable: ObsQueryWithMeta<TData, TVariables>,\n  client: ApolloClient<object>,\n  options: QueryHookOptions<NoInfer<TData>, NoInfer<TVariables>>,\n  watchQueryOptions: Readonly<WatchQueryOptions<TVariables, TData>>\n) {\n  if (\n    observable[lastWatchOptions] &&\n    !equal(observable[lastWatchOptions], watchQueryOptions)\n  ) {\n    // Though it might be tempting to postpone this reobserve call to the\n    // useEffect block, we need getCurrentResult to return an appropriate\n    // loading:true result synchronously (later within the same call to\n    // useQuery). Since we already have this.observable here (not true for\n    // the very first call to useQuery), we are not initiating any new\n    // subscriptions, though it does feel less than ideal that reobserve\n    // (potentially) kicks off a network request (for example, when the\n    // variables have changed), which is technically a side-effect.\n    observable.reobserve(\n      getObsQueryOptions(observable, client, options, watchQueryOptions)\n    );\n\n    // Make sure getCurrentResult returns a fresh ApolloQueryResult<TData>,\n    // but save the current data as this.previousData, just like setResult\n    // usually does.\n    resultData.previousData =\n      resultData.current?.data || resultData.previousData;\n    resultData.current = void 0;\n  }\n  observable[lastWatchOptions] = watchQueryOptions;\n}\n\n/*\n * A function to massage options before passing them to ObservableQuery.\n * This is two-step curried because we want to reuse the `make` function,\n * but the `observable` might differ between calls to `make`.\n */\nexport function createMakeWatchQueryOptions<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n>(\n  client: ApolloClient<object>,\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  {\n    skip,\n    ssr,\n    onCompleted,\n    onError,\n    defaultOptions,\n    // The above options are useQuery-specific, so this ...otherOptions spread\n    // makes otherOptions almost a WatchQueryOptions object, except for the\n    // query property that we add below.\n    ...otherOptions\n  }: QueryHookOptions<TData, TVariables> = {},\n  isSyncSSR: boolean\n) {\n  return (\n    observable?: ObservableQuery<TData, TVariables>\n  ): WatchQueryOptions<TVariables, TData> => {\n    // This Object.assign is safe because otherOptions is a fresh ...rest object\n    // that did not exist until just now, so modifications are still allowed.\n    const watchQueryOptions: WatchQueryOptions<TVariables, TData> =\n      Object.assign(otherOptions, { query });\n\n    if (\n      isSyncSSR &&\n      (watchQueryOptions.fetchPolicy === \"network-only\" ||\n        watchQueryOptions.fetchPolicy === \"cache-and-network\")\n    ) {\n      // this behavior was added to react-apollo without explanation in this PR\n      // https://github.com/apollographql/react-apollo/pull/1579\n      watchQueryOptions.fetchPolicy = \"cache-first\";\n    }\n\n    if (!watchQueryOptions.variables) {\n      watchQueryOptions.variables = {} as TVariables;\n    }\n\n    if (skip) {\n      // When skipping, we set watchQueryOptions.fetchPolicy initially to\n      // \"standby\", but we also need/want to preserve the initial non-standby\n      // fetchPolicy that would have been used if not skipping.\n      watchQueryOptions.initialFetchPolicy =\n        watchQueryOptions.initialFetchPolicy ||\n        watchQueryOptions.fetchPolicy ||\n        getDefaultFetchPolicy(defaultOptions, client.defaultOptions);\n      watchQueryOptions.fetchPolicy = \"standby\";\n    } else if (!watchQueryOptions.fetchPolicy) {\n      watchQueryOptions.fetchPolicy =\n        observable?.options.initialFetchPolicy ||\n        getDefaultFetchPolicy(defaultOptions, client.defaultOptions);\n    }\n\n    return watchQueryOptions;\n  };\n}\n\nexport function getObsQueryOptions<\n  TData,\n  TVariables extends OperationVariables,\n>(\n  observable: ObservableQuery<TData, TVariables> | undefined,\n  client: ApolloClient<object>,\n  queryHookOptions: QueryHookOptions<TData, TVariables>,\n  watchQueryOptions: Partial<WatchQueryOptions<TVariables, TData>>\n): WatchQueryOptions<TVariables, TData> {\n  const toMerge: Array<Partial<WatchQueryOptions<TVariables, TData>>> = [];\n\n  const globalDefaults = client.defaultOptions.watchQuery;\n  if (globalDefaults) toMerge.push(globalDefaults);\n\n  if (queryHookOptions.defaultOptions) {\n    toMerge.push(queryHookOptions.defaultOptions);\n  }\n\n  // We use compact rather than mergeOptions for this part of the merge,\n  // because we want watchQueryOptions.variables (if defined) to replace\n  // this.observable.options.variables whole. This replacement allows\n  // removing variables by removing them from the variables input to\n  // useQuery. If the variables were always merged together (rather than\n  // replaced), there would be no way to remove existing variables.\n  // However, the variables from options.defaultOptions and globalDefaults\n  // (if provided) should be merged, to ensure individual defaulted\n  // variables always have values, if not otherwise defined in\n  // observable.options or watchQueryOptions.\n  toMerge.push(compact(observable && observable.options, watchQueryOptions));\n\n  return toMerge.reduce(mergeOptions) as WatchQueryOptions<TVariables, TData>;\n}\n\nfunction setResult<TData, TVariables extends OperationVariables>(\n  nextResult: ApolloQueryResult<TData>,\n  resultData: InternalResult<TData, TVariables>,\n  observable: ObservableQuery<TData, TVariables>,\n  client: ApolloClient<object>,\n  partialRefetch: boolean | undefined,\n  forceUpdate: () => void,\n  callbacks: Callbacks<TData>\n) {\n  const previousResult = resultData.current;\n  if (previousResult && previousResult.data) {\n    resultData.previousData = previousResult.data;\n  }\n\n  if (!nextResult.error && isNonEmptyArray(nextResult.errors)) {\n    // Until a set naming convention for networkError and graphQLErrors is\n    // decided upon, we map errors (graphQLErrors) to the error options.\n    // TODO: Is it possible for both result.error and result.errors to be\n    // defined here?\n    nextResult.error = new ApolloError({ graphQLErrors: nextResult.errors });\n  }\n\n  resultData.current = toQueryResult(\n    unsafeHandlePartialRefetch(nextResult, observable, partialRefetch),\n    resultData.previousData,\n    observable,\n    client\n  );\n  // Calling state.setResult always triggers an update, though some call sites\n  // perform additional equality checks before committing to an update.\n  forceUpdate();\n  handleErrorOrCompleted(nextResult, previousResult?.networkStatus, callbacks);\n}\n\nfunction handleErrorOrCompleted<TData>(\n  result: ApolloQueryResult<TData>,\n  previousNetworkStatus: NetworkStatus | undefined,\n  callbacks: Callbacks<TData>\n) {\n  if (!result.loading) {\n    const error = toApolloError(result);\n\n    // wait a tick in case we are in the middle of rendering a component\n    Promise.resolve()\n      .then(() => {\n        if (error) {\n          callbacks.onError(error);\n        } else if (\n          result.data &&\n          previousNetworkStatus !== result.networkStatus &&\n          result.networkStatus === NetworkStatus.ready\n        ) {\n          callbacks.onCompleted(result.data);\n        }\n      })\n      .catch((error) => {\n        invariant.warn(error);\n      });\n  }\n}\n\nfunction getCurrentResult<TData, TVariables extends OperationVariables>(\n  resultData: InternalResult<TData, TVariables>,\n  observable: ObservableQuery<TData, TVariables>,\n  callbacks: Callbacks<TData>,\n  partialRefetch: boolean | undefined,\n  client: ApolloClient<object>\n): InternalQueryResult<TData, TVariables> {\n  // Using this.result as a cache ensures getCurrentResult continues returning\n  // the same (===) result object, unless state.setResult has been called, or\n  // we're doing server rendering and therefore override the result below.\n  if (!resultData.current) {\n    // WARNING: SIDE-EFFECTS IN THE RENDER FUNCTION\n    // this could call unsafeHandlePartialRefetch\n    setResult(\n      observable.getCurrentResult(),\n      resultData,\n      observable,\n      client,\n      partialRefetch,\n      () => {},\n      callbacks\n    );\n  }\n  return resultData.current!;\n}\n\nexport function getDefaultFetchPolicy<\n  TData,\n  TVariables extends OperationVariables,\n>(\n  queryHookDefaultOptions?: Partial<WatchQueryOptions<TVariables, TData>>,\n  clientDefaultOptions?: DefaultOptions\n): WatchQueryFetchPolicy {\n  return (\n    queryHookDefaultOptions?.fetchPolicy ||\n    clientDefaultOptions?.watchQuery?.fetchPolicy ||\n    \"cache-first\"\n  );\n}\n\nexport function toApolloError<TData>(\n  result: Pick<ApolloQueryResult<TData>, \"errors\" | \"error\">\n): ApolloError | undefined {\n  return isNonEmptyArray(result.errors) ?\n      new ApolloError({ graphQLErrors: result.errors })\n    : result.error;\n}\n\nexport function toQueryResult<TData, TVariables extends OperationVariables>(\n  result: ApolloQueryResult<TData>,\n  previousData: TData | undefined,\n  observable: ObservableQuery<TData, TVariables>,\n  client: ApolloClient<object>\n): InternalQueryResult<TData, TVariables> {\n  const { data, partial, ...resultWithoutPartial } = result;\n  const queryResult: InternalQueryResult<TData, TVariables> = {\n    data, // Ensure always defined, even if result.data is missing.\n    ...resultWithoutPartial,\n    client: client,\n    observable: observable,\n    variables: observable.variables,\n    called: result !== ssrDisabledResult && result !== skipStandbyResult,\n    previousData,\n  };\n  return queryResult;\n}\n\nfunction unsafeHandlePartialRefetch<\n  TData,\n  TVariables extends OperationVariables,\n>(\n  result: ApolloQueryResult<TData>,\n  observable: ObservableQuery<TData, TVariables>,\n  partialRefetch: boolean | undefined\n): ApolloQueryResult<TData> {\n  // TODO: This code should be removed when the partialRefetch option is\n  // removed. I was unable to get this hook to behave reasonably in certain\n  // edge cases when this block was put in an effect.\n  if (\n    result.partial &&\n    partialRefetch &&\n    !result.loading &&\n    (!result.data || Object.keys(result.data).length === 0) &&\n    observable.options.fetchPolicy !== \"cache-only\"\n  ) {\n    observable.refetch();\n    return {\n      ...result,\n      loading: true,\n      networkStatus: NetworkStatus.refetch,\n    };\n  }\n  return result;\n}\n\nconst ssrDisabledResult = maybeDeepFreeze({\n  loading: true,\n  data: void 0 as any,\n  error: void 0,\n  networkStatus: NetworkStatus.loading,\n});\n\nconst skipStandbyResult = maybeDeepFreeze({\n  loading: false,\n  data: void 0 as any,\n  error: void 0,\n  networkStatus: NetworkStatus.ready,\n});\n\nfunction bindObservableMethods<TData, TVariables extends OperationVariables>(\n  observable: ObservableQuery<TData, TVariables>\n) {\n  return {\n    refetch: observable.refetch.bind(observable),\n    reobserve: observable.reobserve.bind(observable),\n    fetchMore: observable.fetchMore.bind(observable),\n    updateQuery: observable.updateQuery.bind(observable),\n    startPolling: observable.startPolling.bind(observable),\n    stopPolling: observable.stopPolling.bind(observable),\n    subscribeToMore: observable.subscribeToMore.bind(observable),\n  };\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1013, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}