{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/views/admin/lists/AdminCard.jsx"],"sourcesContent":["import CustomAvatar from '@/@core/components/mui/Avatar'\r\nimport { Card, CardContent, Typography } from '@mui/material'\r\nimport React from 'react'\r\n\r\nconst AdminCard = ({ count, title }) => {\r\n  return (\r\n    <Card>\r\n      <CardContent className='flex justify-between gap-1 '>\r\n        <div className='flex flex-col gap-1 flex-grow'>\r\n          <Typography color='text.primary' variant='h3'>\r\n            {count}\r\n          </Typography>\r\n          <div className='flex items-center gap-2 flex-wrap'>\r\n            <Typography\r\n              variant='h5'\r\n              color={`${title === 'Admin' ? 'red' : title === 'Manager' ? 'orange' : title === 'Sale' ? 'green' : title === 'Finance' ? 'blue' : title === 'Service' ? 'yellow' : 'brown'}`}\r\n            >\r\n              {title}\r\n            </Typography>\r\n          </div>\r\n          {/* <Typography variant='body2'>subtitle</Typography> */}\r\n        </div>\r\n        <CustomAvatar skin='light' variant='rounded' size={42}>\r\n          <i\r\n            className={`${title === 'Admin' ? 'ri-user-settings-fill' : title === 'Manager' ? 'ri-admin-fill' : title === 'Sale' ? 'ri-discount-percent-fill' : title === 'Finance' ? 'ri-money-pound-circle-fill' : title === 'Service' ? 'ri-service-fill' : 'ri-caravan-fill'}`}\r\n          />\r\n        </CustomAvatar>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AdminCard\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAIA,MAAM,YAAY,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE;IACjC,qBACE,wPAAC,oLAAA,CAAA,OAAI;kBACH,cAAA,wPAAC,yMAAA,CAAA,cAAW;YAAC,WAAU;;8BACrB,wPAAC;oBAAI,WAAU;;sCACb,wPAAC,sMAAA,CAAA,aAAU;4BAAC,OAAM;4BAAe,SAAQ;sCACtC;;;;;;sCAEH,wPAAC;4BAAI,WAAU;sCACb,cAAA,wPAAC,sMAAA,CAAA,aAAU;gCACT,SAAQ;gCACR,OAAO,CAAC,EAAE,UAAU,UAAU,QAAQ,UAAU,YAAY,WAAW,UAAU,SAAS,UAAU,UAAU,YAAY,SAAS,UAAU,YAAY,WAAW,QAAQ,CAAC;0CAE5K;;;;;;;;;;;;;;;;;8BAKP,wPAAC,6IAAA,CAAA,UAAY;oBAAC,MAAK;oBAAQ,SAAQ;oBAAU,MAAM;8BACjD,cAAA,wPAAC;wBACC,WAAW,CAAC,EAAE,UAAU,UAAU,0BAA0B,UAAU,YAAY,kBAAkB,UAAU,SAAS,6BAA6B,UAAU,YAAY,+BAA+B,UAAU,YAAY,oBAAoB,kBAAkB,CAAC;;;;;;;;;;;;;;;;;;;;;;AAMlR;uCAEe"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/graphql/mutations.js"],"sourcesContent":["import { gql } from '@apollo/client'\r\n\r\nexport const ADMIN_SIGN_IN = gql`\r\n  mutation adminSignIn($email: String!, $password: String!) {\r\n    AdminSignIn(email: $email, password: $password) {\r\n      token\r\n      message\r\n    }\r\n  }\r\n`\r\nexport const ADD_CATEGORY = gql`\r\n  mutation addCategory($data: product_categories_insert_input!) {\r\n    insert_product_categories_one(object: $data) {\r\n      id\r\n      title\r\n      image_url\r\n      created_at\r\n      products_aggregate {\r\n        aggregate {\r\n          count\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const ADD_BRAND = gql`\r\n  mutation addCategory($data: brands_insert_input!) {\r\n    insert_brands_one(object: $data) {\r\n      id\r\n      title\r\n      image_url\r\n      created_at\r\n      products_aggregate {\r\n        aggregate {\r\n          count\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const ADD_PRODUCT = gql`\r\n  mutation addProduct(\r\n    $title: String!\r\n    $description_html: String!\r\n    $brand_id: uuid!\r\n    $category_id: uuid!\r\n    $serial_number: String!\r\n    $price: numeric!\r\n    $product_medias: product_medias_arr_rel_insert_input!\r\n  ) {\r\n    insert_products_one(\r\n      object: {\r\n        title: $title\r\n        description_html: $description_html\r\n        brand_id: $brand_id\r\n        category_id: $category_id\r\n        serial_number: $serial_number\r\n        price: $price\r\n        product_medias: $product_medias\r\n      }\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const EDIT_RPODUCTS = gql`\r\n  mutation editProduct(\r\n    $id: uuid!\r\n    $title: String!\r\n    $description_html: String!\r\n    $brand_id: uuid!\r\n    $category_id: uuid!\r\n    $serial_number: String!\r\n    $price: numeric!\r\n  ) {\r\n    update_products_by_pk(\r\n      pk_columns: { id: $id }\r\n      _set: {\r\n        title: $title\r\n        description_html: $description_html\r\n        brand_id: $brand_id\r\n        category_id: $category_id\r\n        serial_number: $serial_number\r\n        price: $price\r\n      }\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const ADD_NEWS = gql`\r\n  mutation addNews($data: news_insert_input!) {\r\n    insert_news_one(object: $data) {\r\n      id\r\n      image_url\r\n      body_html\r\n      created_at\r\n      news_category {\r\n        title\r\n        id\r\n      }\r\n      disabled\r\n      news_category_id\r\n      title\r\n      updated_at\r\n    }\r\n  }\r\n`\r\n// delete\r\nexport const DELETE_PRODUCT = gql`\r\n  mutation deleteProduct($id: uuid!) {\r\n    delete_products_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const DELETE_PRODUCT_BRAND = gql`\r\n  mutation deleteBrand($id: uuid!) {\r\n    delete_brands_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const DELETE_PRODUCT_CAT = gql`\r\n  mutation deleteProductCat($id: uuid!) {\r\n    delete_product_categories_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const DELETE_NEW_CAT = gql`\r\n  mutation deleteNewCat($id: uuid!) {\r\n    delete_news_categories_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const ADD_NEWS_CAT = gql`\r\n  mutation addNewCat($title: String!) {\r\n    insert_news_categories_one(object: { title: $title }) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const DELETE_NEWS = gql`\r\n  mutation deleteNews($id: uuid!) {\r\n    delete_news_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const DELETE_INVOICE = gql`\r\n  mutation deleteInvoice($id: uuid!) {\r\n    delete_invoices_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const DELETE_ORDERS = gql`\r\n  mutation aa($id: uuid!) {\r\n    delete_orders_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const DELETE_DEALER = gql`\r\n  mutation deleteDealer($id: uuid!) {\r\n    delete_dealers_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const ADD_DEALERS = gql`\r\n  mutation addDealer($data: dealers_insert_input!) {\r\n    insert_dealers_one(object: $data) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const ADD_NEWS_PRODUCTS = gql`\r\n  mutation addNewProducts($data: news_related_products_insert_input!) {\r\n    insert_news_related_products_one(object: $data) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const EDIT_NEWS = gql`\r\n  mutation editNewProducts($id: uuid!, $data: news_set_input!) {\r\n    update_news_by_pk(pk_columns: { id: $id }, _set: $data) {\r\n      id\r\n      image_url\r\n      body_html\r\n      created_at\r\n      news_category {\r\n        title\r\n        id\r\n      }\r\n      disabled\r\n      news_category_id\r\n      title\r\n      updated_at\r\n    }\r\n  }\r\n`\r\nexport const DELETE_NEW_RELATED_PRODUCTS = gql`\r\n  mutation aa($news_id: uuid!) {\r\n    delete_news_related_products(where: { news_id: { _eq: $news_id } }) {\r\n      returning {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const IMGAE_UPLOAD = gql`\r\n  mutation aa($content_type: String!, $folder: String!) {\r\n    getFileUploadUrl(content_type: $content_type, folder: $folder) {\r\n      error\r\n      message\r\n      fileName\r\n      fileUploadUrl\r\n    }\r\n  }\r\n`\r\nexport const CHANGE_ORDER_STATUS = gql`\r\n  mutation orderStatus($order_id: uuid!, $status: String!) {\r\n    updateOrderStatus(order_id: $order_id, status: $status) {\r\n      message\r\n    }\r\n  }\r\n`\r\nexport const CHANGE_SERVICE_STATUS = gql`\r\n  mutation updateServiceStatus($service_token_id: uuid!, $status: String!) {\r\n    updateServiceStatus(service_token_id: $service_token_id, status: $status) {\r\n      message\r\n    }\r\n  }\r\n`\r\nexport const ACCEPT_SERVICE_TOKEN = gql`\r\n  mutation updateServiceStatus($is_warranty_valid: Boolean!, $service_fee: numeric!, $service_token_id: uuid!) {\r\n    acceptServiceToken(\r\n      is_warranty_valid: $is_warranty_valid\r\n      service_fee: $service_fee\r\n      service_token_id: $service_token_id\r\n    ) {\r\n      message\r\n    }\r\n  }\r\n`\r\n\r\nexport const REJECT_SERVICE_TOKEN = gql`\r\n  mutation rejectServiceToken($rejected_reason: String!, $service_token_id: uuid!) {\r\n    rejectServiceToken(rejected_reason: $rejected_reason, service_token_id: $service_token_id) {\r\n      message\r\n    }\r\n  }\r\n`\r\nexport const CHANGE_USER_STATUS = gql`\r\n  mutation changeUserStatus($id: uuid!, $data: users_set_input!) {\r\n    update_users_by_pk(pk_columns: { id: $id }, _set: $data) {\r\n      id\r\n      role\r\n      status\r\n    }\r\n  }\r\n`\r\nexport const CHANGE_USER_ACTIVATE = gql`\r\n  mutation userStatus($user_id: uuid!, $is_verified: Boolean!) {\r\n    updateUserStatus(user_id: $user_id, is_verified: $is_verified) {\r\n      message\r\n    }\r\n  }\r\n`\r\nexport const CHANGE_QUOTATION_STATUS = gql`\r\n  mutation updateQuotationStatus($quotation_id: uuid!, $status: String!) {\r\n    updateQuotationStatus(quotation_id: $quotation_id, status: $status) {\r\n      message\r\n    }\r\n  }\r\n`\r\nexport const CHANGE_INVOICE_STATUS = gql`\r\n  mutation changeInvoiceStatus($id: uuid!, $data: invoices_set_input!) {\r\n    update_invoices_by_pk(pk_columns: { id: $id }, _set: $data) {\r\n      id\r\n      status\r\n    }\r\n  }\r\n`\r\nexport const SEND_QUOTATION_FILE = gql`\r\n  mutation updateQuotationStatus($quotation_file_url: String!, $quotation_id: uuid!) {\r\n    sendQuotationFIle(quotation_file_url: $quotation_file_url, quotation_id: $quotation_id) {\r\n      message\r\n    }\r\n  }\r\n`\r\n\r\nexport const ADD_PARYMENT = gql`\r\n  mutation addPayment($amount: numeric!, $invoice_id: uuid!, $payment_date: timestamp!, $payment_method: String!) {\r\n    addInvoicePayment(\r\n      amount: $amount\r\n      invoice_id: $invoice_id\r\n      payment_date: $payment_date\r\n      payment_method: $payment_method\r\n    ) {\r\n      message\r\n    }\r\n  }\r\n`\r\nexport const SEND_Q_INVOICE_FILE = gql`\r\n  mutation sendQInvoice($discounted_amount: numeric!, $quotation_id: uuid!) {\r\n    sendInvoice(discounted_amount: $discounted_amount, quotation_id: $quotation_id) {\r\n      message\r\n    }\r\n  }\r\n`\r\nexport const SEND_INVOICE_FILE = gql`\r\n  mutation sendQuotationPdf($id: uuid!, $invoice_file_url: String!) {\r\n    update_invoices_by_pk(pk_columns: { id: $id }, _set: { invoice_file_url: $invoice_file_url }) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const DELETE_ADMIN = gql`\r\n  mutation deleteAdmin($id: uuid!) {\r\n    delete_admins_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const DELETE_SERVICE_CENTER = gql`\r\n  mutation deleteServiceCenter($id: uuid!) {\r\n    delete_service_centers_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const ADD_ADMIN = gql`\r\n  mutation aa($email: String!, $password: String!, $name: String!, $role: String!) {\r\n    AdminSignUp(email: $email, password: $password, name: $name, role: $role) {\r\n      message\r\n      token\r\n    }\r\n  }\r\n`\r\nexport const EDIT_ADMIN = gql`\r\n  mutation updateAdmin($id: uuid!, $data: admins_set_input!) {\r\n    update_admins_by_pk(pk_columns: { id: $id }, _set: $data) {\r\n      id\r\n      name\r\n      email\r\n      role\r\n    }\r\n  }\r\n`\r\nexport const ADD_USER = gql`\r\n  mutation aa($name: String!, $password: String!, $role: String!, $phone: String!) {\r\n    UserSignUp(name: $name, password: $password, role: $role, phone: $phone) {\r\n      message\r\n      token\r\n    }\r\n  }\r\n`\r\nexport const ADD_SERVICE_CENTER = gql`\r\n  mutation addSeriveCenter($data: service_centers_insert_input!) {\r\n    insert_service_centers_one(object: $data) {\r\n      id\r\n      name\r\n      phone\r\n      address\r\n      created_at\r\n      updated_at\r\n    }\r\n  }\r\n`\r\nexport const IS_WARRANTY_VALID = gql`\r\n  mutation editService($id: uuid!, $data: service_tokens_set_input!) {\r\n    update_service_tokens_by_pk(pk_columns: { id: $id }, _set: $data) {\r\n      id\r\n      service_fee\r\n    }\r\n  }\r\n`\r\nexport const EDIT_SERVICE_CENTER = gql`\r\n  mutation editServiceCenter($id: uuid!, $data: service_centers_set_input!) {\r\n    update_service_centers_by_pk(pk_columns: { id: $id }, _set: $data) {\r\n      id\r\n      name\r\n      phone\r\n      address\r\n    }\r\n  }\r\n`\r\nexport const DELETE_PRODUCT_DISCOUNT = gql`\r\n  mutation deleteProductDiscount($id: uuid!) {\r\n    delete_product_discounts_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport const ADD_DISCOUNT = gql`\r\n  mutation addDiscount($data: product_discounts_insert_input!) {\r\n    insert_product_discounts_one(object: $data) {\r\n      id\r\n      min_order\r\n      discount_type\r\n      customer_type\r\n      created_at\r\n      updated_at\r\n    }\r\n  }\r\n`\r\n\r\nexport const EDIT_DISCOUNT = gql`\r\n  mutation updateProductDiscount($id: uuid!, $data: product_discounts_set_input!) {\r\n    update_product_discounts_by_pk(pk_columns: { id: $id }, _set: $data) {\r\n      id\r\n      min_order\r\n      discount_type\r\n      customer_type\r\n      created_at\r\n      updated_at\r\n    }\r\n  }\r\n`\r\n\r\nexport const EDIT_PRODUCT_CATEGORY = gql`\r\n  mutation editCategory($id: uuid!, $data: product_categories_set_input!) {\r\n    update_product_categories_by_pk(pk_columns: { id: $id }, _set: $data) {\r\n      id\r\n      title\r\n      image_url\r\n    }\r\n  }\r\n`\r\nexport const EDIT_BRAND = gql`\r\n  mutation eidtBrand($id: uuid!, $data: brands_set_input!) {\r\n    update_brands_by_pk(pk_columns: { id: $id }, _set: $data) {\r\n      id\r\n      title\r\n      image_url\r\n    }\r\n  }\r\n`\r\nexport const EDIt_NEWS_CAT = gql`\r\n  mutation editNewCat($id: uuid!, $title: String!) {\r\n    update_news_categories_by_pk(pk_columns: { id: $id }, _set: { title: $title }) {\r\n      id\r\n      title\r\n    }\r\n  }\r\n`\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 586, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 591, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/helper/Alert.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Snackbar } from '@mui/material'\r\nimport { useApp } from '@/app/ApolloWrapper'\r\nconst Alert = () => {\r\n  const { globalMsg, setGlobalMsg } = useApp()\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          horizontal: 'center',\r\n          vertical: 'top'\r\n        }}\r\n        open={Boolean(globalMsg)}\r\n        autoHideDuration={3000}\r\n        onClose={() => setGlobalMsg(null)}\r\n        message={globalMsg}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n"],"names":[],"mappings":";;;;;;;;;;;;AAGA,MAAM,QAAQ;IACZ,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,SAAM,AAAD;IAEzC,qBACE,wPAAC;kBACC,cAAA,wPAAC,gMAAA,CAAA,WAAQ;YACP,cAAc;gBACZ,YAAY;gBACZ,UAAU;YACZ;YACA,MAAM,QAAQ;YACd,kBAAkB;YAClB,SAAS,IAAM,aAAa;YAC5B,SAAS;;;;;;;;;;;AAIjB;uCAEe"}},
    {"offset": {"line": 627, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 632, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/views/admin/lists/AddAdminDrawer.jsx"],"sourcesContent":["// React Imports\r\nimport { useState, useRef } from 'react'\r\n\r\n// MUI Imports\r\nimport Button from '@mui/material/Button'\r\nimport Drawer from '@mui/material/Drawer'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport InputLabel from '@mui/material/InputLabel'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport Select from '@mui/material/Select'\r\nimport TextField from '@mui/material/TextField'\r\nimport Typography from '@mui/material/Typography'\r\nimport Divider from '@mui/material/Divider'\r\nimport InputAdornment from '@mui/material/InputAdornment'\r\n\r\n// Third-party Imports\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { useMutation, useSuspenseQuery } from '@apollo/client'\r\nimport { ADD_ADMIN } from '@/graphql/mutations'\r\nimport Alert from '@/components/helper/Alert'\r\nimport { useApp } from '@/app/ApolloWrapper'\r\nimport { ADMIN_ROLES, GET_USERS } from '@/graphql/queries'\r\n\r\nconst AddCategoryDrawer = props => {\r\n  const { setGlobalMsg } = useApp()\r\n  // Props\r\n  const { open, handleClose, adminData, setData } = props\r\n  const [userId, setUserId] = useState()\r\n  const [addAdmin] = useMutation(ADD_ADMIN)\r\n  const { data: adminRoles } = useSuspenseQuery(ADMIN_ROLES)\r\n  // Refs\r\n  const fileInputRef = useRef(null)\r\n\r\n  // Hooks\r\n  const {\r\n    control,\r\n    reset: resetForm,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({\r\n    defaultValues: {\r\n      title: ''\r\n    }\r\n  })\r\n\r\n  // Handle Form Submit\r\n  const handleFormSubmit = async data => {\r\n    const res = await addAdmin({\r\n      variables: {\r\n        email: data.email,\r\n        name: data.name,\r\n        password: data.password,\r\n        role: data.role\r\n      }\r\n    })\r\n\r\n    setData([...(adminData ?? []), res])\r\n    handleReset()\r\n    setGlobalMsg('➕ Added New Data')\r\n  }\r\n\r\n  // Handle Form Reset\r\n  const handleReset = () => {\r\n    handleClose()\r\n    resetForm({ title: '', description: '' })\r\n  }\r\n\r\n  // Handle File Upload\r\n  const handleFileUpload = event => {\r\n    const { files } = event.target\r\n\r\n    if (files && files.length !== 0) {\r\n      setFileName(files[0].name)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        open={open}\r\n        anchor='right'\r\n        variant='temporary'\r\n        onClose={handleReset}\r\n        ModalProps={{ keepMounted: true }}\r\n        sx={{ '& .MuiDrawer-paper': { width: { xs: 300, sm: 400 } } }}\r\n      >\r\n        <div className='flex items-center justify-between pli-5 plb-4'>\r\n          <Typography variant='h5'>Add Admin</Typography>\r\n          <IconButton size='small' onClick={handleReset}>\r\n            <i className='ri-close-line text-2xl' />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <div className='p-5'>\r\n          <form onSubmit={handleSubmit(data => handleFormSubmit(data))} className='flex flex-col gap-5'>\r\n            {/* name */}\r\n            <Controller\r\n              name='name'\r\n              control={control}\r\n              rules={{ required: true }}\r\n              render={({ field }) => (\r\n                <TextField\r\n                  {...field}\r\n                  fullWidth\r\n                  label='Name'\r\n                  placeholder=''\r\n                  {...(errors.name && { error: true, helperText: 'This field is required.' })}\r\n                />\r\n              )}\r\n            />\r\n            {/* email */}\r\n            <Controller\r\n              name='email'\r\n              control={control}\r\n              rules={{ required: true }}\r\n              render={({ field }) => (\r\n                <TextField\r\n                  {...field}\r\n                  fullWidth\r\n                  label='Email'\r\n                  type='email'\r\n                  placeholder=''\r\n                  {...(errors.email && { error: true, helperText: 'This field is required.' })}\r\n                />\r\n              )}\r\n            />\r\n            {/* role */}\r\n            <FormControl fullWidth>\r\n              <InputLabel id='country' error={Boolean(errors.role)}>\r\n                Select Role\r\n              </InputLabel>\r\n\r\n              <Controller\r\n                name='role'\r\n                control={control}\r\n                rules={{ required: true }}\r\n                render={({ field }) => (\r\n                  <Select label='Select Role' {...field} error={Boolean(errors.role)}>\r\n                    <MenuItem value='sale'>Sale</MenuItem>\r\n                    <MenuItem value='finance'>Finance</MenuItem>\r\n                    <MenuItem value='service'>Service</MenuItem>\r\n                    <MenuItem value='delivery'>Delivery</MenuItem>\r\n                    <MenuItem value='admin'>Admin</MenuItem>\r\n                    <MenuItem value='manager'>Manager</MenuItem>\r\n                  </Select>\r\n                )}\r\n              />\r\n              {errors.role && <FormHelperText error>This field is required.</FormHelperText>}\r\n            </FormControl>\r\n            {/* phone */}\r\n            <Controller\r\n              name='password'\r\n              control={control}\r\n              rules={{ required: true }}\r\n              render={({ field }) => (\r\n                <TextField\r\n                  {...field}\r\n                  fullWidth\r\n                  label='Password'\r\n                  type='password'\r\n                  placeholder=''\r\n                  {...(errors.password && { error: true, helperText: 'This field is required.' })}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <div className='flex items-center gap-4'>\r\n              <Button variant='contained' type='submit'>\r\n                Add\r\n              </Button>\r\n              <Button variant='outlined' color='error' type='reset' onClick={handleReset}>\r\n                Discard\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Drawer>\r\n      <Alert />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddCategoryDrawer\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1013, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1018, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/views/admin/lists/EditAdminDrawer.jsx"],"sourcesContent":["// React Imports\r\nimport { useState, useRef, useEffect } from 'react'\r\n\r\n// MUI Imports\r\nimport Button from '@mui/material/Button'\r\nimport Drawer from '@mui/material/Drawer'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport InputLabel from '@mui/material/InputLabel'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport Select from '@mui/material/Select'\r\nimport TextField from '@mui/material/TextField'\r\nimport Typography from '@mui/material/Typography'\r\nimport Divider from '@mui/material/Divider'\r\nimport InputAdornment from '@mui/material/InputAdornment'\r\n\r\n// Third-party Imports\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { useMutation, useSuspenseQuery } from '@apollo/client'\r\nimport { EDIT_ADMIN } from '@/graphql/mutations'\r\nimport Alert from '@/components/helper/Alert'\r\nimport { useApp } from '@/app/ApolloWrapper'\r\nimport { ADMIN_ROLES } from '@/graphql/queries'\r\n\r\nconst EditAdminDrawer = props => {\r\n  const { setGlobalMsg } = useApp()\r\n  // Props\r\n  const { open, handleClose, adminData, setData } = props\r\n\r\n  const [editAdmin] = useMutation(EDIT_ADMIN)\r\n  const { data: adminRoles } = useSuspenseQuery(ADMIN_ROLES)\r\n\r\n  // Hooks\r\n  const {\r\n    control,\r\n    reset: resetForm,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({\r\n    defaultValues: {\r\n      name: '',\r\n      email: '',\r\n      role: ''\r\n    }\r\n  })\r\n\r\n  // Handle Form Submit\r\n  const handleFormSubmit = async data => {\r\n    const res = await editAdmin({\r\n      variables: {\r\n        id: adminData.id,\r\n        data: {\r\n          email: data.email,\r\n          name: data.name,\r\n          role: data.role\r\n        }\r\n      }\r\n    })\r\n\r\n    setData(prevData =>\r\n      prevData.map(item => (item.id === adminData?.id ? { ...item, ...res.data.update_admins_by_pk } : item))\r\n    )\r\n    handleReset()\r\n    setGlobalMsg('✅ Staff Data has been updated')\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (adminData) {\r\n      resetForm({\r\n        name: adminData.name,\r\n        email: adminData.email,\r\n        role: adminData.role\r\n      })\r\n    }\r\n  }, [adminData, resetForm])\r\n  // Handle Form Reset\r\n  const handleReset = () => {\r\n    handleClose()\r\n    resetForm({ title: '', description: '' })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        open={open}\r\n        anchor='right'\r\n        variant='temporary'\r\n        onClose={handleReset}\r\n        ModalProps={{ keepMounted: true }}\r\n        sx={{ '& .MuiDrawer-paper': { width: { xs: 300, sm: 400 } } }}\r\n      >\r\n        <div className='flex items-center justify-between pli-5 plb-4'>\r\n          <Typography variant='h5'>Edit Staff</Typography>\r\n          <IconButton size='small' onClick={handleReset}>\r\n            <i className='ri-close-line text-2xl' />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <div className='p-5'>\r\n          <form onSubmit={handleSubmit(data => handleFormSubmit(data))} className='flex flex-col gap-5'>\r\n            {/* name */}\r\n            <Controller\r\n              name='name'\r\n              control={control}\r\n              rules={{ required: true }}\r\n              render={({ field }) => (\r\n                <TextField\r\n                  {...field}\r\n                  fullWidth\r\n                  label='Name'\r\n                  placeholder=''\r\n                  {...(errors.name && { error: true, helperText: 'This field is required.' })}\r\n                />\r\n              )}\r\n            />\r\n            {/* email */}\r\n            <Controller\r\n              name='email'\r\n              control={control}\r\n              rules={{ required: true }}\r\n              render={({ field }) => (\r\n                <TextField\r\n                  {...field}\r\n                  fullWidth\r\n                  label='Email'\r\n                  type='email'\r\n                  placeholder=''\r\n                  {...(errors.email && { error: true, helperText: 'This field is required.' })}\r\n                />\r\n              )}\r\n            />\r\n            {/* role */}\r\n            <FormControl fullWidth>\r\n              <InputLabel id='country' error={Boolean(errors.role)}>\r\n                Select Role\r\n              </InputLabel>\r\n\r\n              <Controller\r\n                name='role'\r\n                control={control}\r\n                rules={{ required: true }}\r\n                render={({ field }) => (\r\n                  <Select label='Select Role' {...field} error={Boolean(errors.role)}>\r\n                    <MenuItem value='sale'>Sale</MenuItem>\r\n                    <MenuItem value='finance'>Finance</MenuItem>\r\n                    <MenuItem value='service'>Service</MenuItem>\r\n                    <MenuItem value='delivery'>Delivery</MenuItem>\r\n                    <MenuItem value='admin'>Admin</MenuItem>\r\n                    <MenuItem value='manager'>Manager</MenuItem>\r\n                  </Select>\r\n                )}\r\n              />\r\n              {errors.role && <FormHelperText error>This field is required.</FormHelperText>}\r\n            </FormControl>\r\n            {/* password */}\r\n            {/* <Controller\r\n              name='password'\r\n              control={control}\r\n              rules={{ required: true }}\r\n              render={({ field }) => (\r\n                <TextField\r\n                  {...field}\r\n                  fullWidth\r\n                  label='Password'\r\n                  type='password'\r\n                  placeholder=''\r\n                  {...(errors.password && { error: true, helperText: 'This field is required.' })}\r\n                />\r\n              )}\r\n            /> */}\r\n\r\n            <div className='flex items-center gap-4'>\r\n              <Button variant='contained' type='submit'>\r\n                Update\r\n              </Button>\r\n              <Button variant='outlined' color='error' type='reset' onClick={handleReset}>\r\n                Discard\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Drawer>\r\n      <Alert />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditAdminDrawer\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1379, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1384, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/@core/components/option-menu/index.jsx"],"sourcesContent":["'use client'\r\n\r\n// React Imports\r\nimport { useRef, useState } from 'react'\r\n\r\n// Next Imports\r\nimport Link from 'next/link'\r\n\r\n// MUI Imports\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport Box from '@mui/material/Box'\r\nimport Popper from '@mui/material/Popper'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport MenuList from '@mui/material/MenuList'\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\r\nimport Fade from '@mui/material/Fade'\r\nimport Paper from '@mui/material/Paper'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Divider from '@mui/material/Divider'\r\n\r\n// Third-party Imports\r\nimport classnames from 'classnames'\r\n\r\n// Hook Imports\r\nimport { useSettings } from '@core/hooks/useSettings'\r\n\r\nconst IconButtonWrapper = props => {\r\n  // Props\r\n  const { tooltipProps, children } = props\r\n\r\n  return tooltipProps?.title ? <Tooltip {...tooltipProps}>{children}</Tooltip> : children\r\n}\r\n\r\nconst MenuItemWrapper = ({ children, option }) => {\r\n  if (option.href) {\r\n    return (\r\n      <Box component={Link} href={option.href} {...option.linkProps}>\r\n        {children}\r\n      </Box>\r\n    )\r\n  } else {\r\n    return <>{children}</>\r\n  }\r\n}\r\n\r\nconst OptionMenu = props => {\r\n  // Props\r\n  const { tooltipProps, icon, iconClassName, options, leftAlignMenu, iconButtonProps } = props\r\n\r\n  // States\r\n  const [open, setOpen] = useState(false)\r\n\r\n  // Refs\r\n  const anchorRef = useRef(null)\r\n\r\n  // Hooks\r\n  const { settings } = useSettings()\r\n\r\n  const handleToggle = () => {\r\n    setOpen(prevOpen => !prevOpen)\r\n  }\r\n\r\n  const handleClose = event => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return\r\n    }\r\n\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButtonWrapper tooltipProps={tooltipProps}>\r\n        <IconButton ref={anchorRef} size='small' onClick={handleToggle} {...iconButtonProps}>\r\n          {typeof icon === 'string' ? (\r\n            <i className={classnames(icon, iconClassName)} />\r\n          ) : icon ? (\r\n            icon\r\n          ) : (\r\n            <i className={classnames('ri-more-2-line', iconClassName)} />\r\n          )}\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n      <Popper\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        placement={leftAlignMenu ? 'bottom-start' : 'bottom-end'}\r\n        transition\r\n        disablePortal\r\n        sx={{ zIndex: 1 }}\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps}>\r\n            <Paper className={settings.skin === 'bordered' ? 'border shadow-none' : 'shadow-lg'}>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MenuList autoFocusItem={open}>\r\n                  {options.map((option, index) => {\r\n                    if (typeof option === 'string') {\r\n                      return (\r\n                        <MenuItem key={index} onClick={handleClose}>\r\n                          {option}\r\n                        </MenuItem>\r\n                      )\r\n                    } else if ('divider' in option) {\r\n                      return option.divider && <Divider key={index} {...option.dividerProps} />\r\n                    } else {\r\n                      return (\r\n                        <MenuItem\r\n                          key={index}\r\n                          {...option.menuItemProps}\r\n                          {...(option.href && { className: 'p-0' })}\r\n                          onClick={e => {\r\n                            handleClose(e)\r\n                            option.menuItemProps && option.menuItemProps.onClick\r\n                              ? option.menuItemProps.onClick(e)\r\n                              : null\r\n                          }}\r\n                        >\r\n                          <MenuItemWrapper option={option}>\r\n                            {(typeof option.icon === 'string' ? <i className={option.icon} /> : option.icon) || null}\r\n                            {option.text}\r\n                          </MenuItemWrapper>\r\n                        </MenuItem>\r\n                      )\r\n                    }\r\n                  })}\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OptionMenu\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1597, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1601, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/@core/styles/table.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"cellWithInput\": \"table-module__Mig-TG__cellWithInput\",\n  \"table\": \"table-module__Mig-TG__table\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 1605, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1610, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/views/admin/lists/AdminTable.jsx"],"sourcesContent":["'use client'\r\n\r\n// React Imports\r\nimport { useEffect, useMemo, useState } from 'react'\r\n\r\n// MUI Imports\r\nimport Card from '@mui/material/Card'\r\nimport Button from '@mui/material/Button'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport TablePagination from '@mui/material/TablePagination'\r\nimport TextField from '@mui/material/TextField'\r\nimport Typography from '@mui/material/Typography'\r\n\r\n// Third-party Imports\r\nimport classnames from 'classnames'\r\nimport { rankItem } from '@tanstack/match-sorter-utils'\r\nimport {\r\n  createColumnHelper,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  useReactTable,\r\n  getFilteredRowModel,\r\n  getFacetedRowModel,\r\n  getFacetedUniqueValues,\r\n  getFacetedMinMaxValues,\r\n  getPaginationRowModel,\r\n  getSortedRowModel\r\n} from '@tanstack/react-table'\r\n\r\n// Component Imports\r\nimport AddAdminDrawer from './AddAdminDrawer'\r\nimport EditAdminDrawer from './EditAdminDrawer'\r\nimport OptionMenu from '@core/components/option-menu'\r\n\r\n// Style Imports\r\nimport tableStyles from '@core/styles/table.module.css'\r\nimport { useMutation, useSuspenseQuery } from '@apollo/client'\r\nimport { GET_ALL_ADMINS, GET_ALL_DEALERS, GET_PRODUCT_CATEGORIES } from '@/graphql/queries'\r\nimport { DELETE_ADMIN, DELETE_DEALER, DELETE_PRODUCT_CAT } from '@/graphql/mutations'\r\nimport Alert from '@/components/helper/Alert'\r\nimport { useApp } from '@/app/ApolloWrapper'\r\nimport { CSVLink } from 'react-csv'\r\nconst fuzzyFilter = (row, columnId, value, addMeta) => {\r\n  // Rank the item\r\n  const itemRank = rankItem(row.getValue(columnId), value)\r\n\r\n  // Store the itemRank info\r\n  addMeta({\r\n    itemRank\r\n  })\r\n\r\n  // Return if the item should be filtered in/out\r\n  return itemRank.passed\r\n}\r\n\r\nconst DebouncedInput = ({ value: initialValue, onChange, debounce = 500, ...props }) => {\r\n  // States\r\n  const [value, setValue] = useState(initialValue)\r\n\r\n  useEffect(() => {\r\n    setValue(initialValue)\r\n  }, [initialValue])\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      onChange(value)\r\n    }, debounce)\r\n\r\n    return () => clearTimeout(timeout)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [value])\r\n\r\n  return <TextField {...props} value={value} onChange={e => setValue(e.target.value)} size='small' />\r\n}\r\n\r\n// Vars\r\n\r\n// Column Definitions\r\nconst columnHelper = createColumnHelper()\r\nconst headers = [\r\n  { label: 'Name', key: 'name' },\r\n  { label: 'Email', key: 'Email' },\r\n  { label: 'Role', key: 'role' },\r\n  { label: 'Created At', key: 'created_at' },\r\n  { label: 'Updated At', key: 'updated_at' }\r\n]\r\nconst AdminTable = () => {\r\n  const { setGlobalMsg } = useApp()\r\n  // States\r\n  const { data: adminData } = useSuspenseQuery(GET_ALL_ADMINS)\r\n  const [deleteAdmin] = useMutation(DELETE_ADMIN)\r\n  const [addDealerOpen, setAddDealerOpen] = useState(false)\r\n  const [rowSelection, setRowSelection] = useState({})\r\n  const [data, setData] = useState(...[adminData.admins])\r\n  const [globalFilter, setGlobalFilter] = useState('')\r\n  const [editAdminOpen, setEditAdminOpen] = useState(false)\r\n  const [editAdmin, setEditAdmin] = useState()\r\n\r\n  const temp = data.map(item => ({\r\n    ...item,\r\n\r\n    created_at: new Date(item.created_at).toLocaleString(),\r\n    updated_at: new Date(item.updated_at).toLocaleString()\r\n  }))\r\n\r\n  const handleDelete = async id => {\r\n    try {\r\n      await deleteAdmin({ variables: { id: id } })\r\n      setData(data.filter(item => item.id !== id))\r\n      setGlobalMsg('✅ Delete Successful')\r\n    } catch (e) {\r\n      setGlobalMsg('❌ Delete Error')\r\n      console.log('Delete Error')\r\n    }\r\n  }\r\n\r\n  const handleEdit = data => {\r\n    setEditAdmin(data)\r\n    setEditAdminOpen(!editAdminOpen)\r\n  }\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      columnHelper.accessor('id', {\r\n        header: 'ID',\r\n        cell: ({ row }) => <Typography>{row.index + 1}</Typography>\r\n      }),\r\n      columnHelper.accessor('name', {\r\n        header: 'Name',\r\n        cell: ({ row }) => (\r\n          <div className='flex items-center gap-3'>\r\n            <div className='flex flex-col items-start'>\r\n              <Typography className='font-medium' color='text.primary'>\r\n                {row.original.name}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        )\r\n      }),\r\n      columnHelper.accessor('email', {\r\n        header: 'Email',\r\n        cell: ({ row }) => <Typography>{row.original.email}</Typography>\r\n      }),\r\n      columnHelper.accessor('role', {\r\n        header: 'Role',\r\n        cell: ({ row }) => <Typography>{row.original.role}</Typography>\r\n      }),\r\n      columnHelper.accessor('created_at', {\r\n        header: 'Date',\r\n        cell: ({ row }) => <Typography>{row.original.created_at?.substring(0, 10)}</Typography>\r\n      }),\r\n      columnHelper.accessor('actions', {\r\n        header: 'Actions',\r\n        cell: ({ row }) => (\r\n          <div className='flex items-center'>\r\n            <IconButton size='small' onClick={() => handleEdit(row.original)}>\r\n              <i className='ri-edit-box-line text-[22px] text-textSecondary' />\r\n            </IconButton>\r\n            {/* <IconButton size='small' onClick={() => handleDelete(row?.original?.id)}>\r\n              <i className='ri-delete-bin-7-line text-[22px] text-red-500' />\r\n            </IconButton> */}\r\n            {/* <OptionMenu\r\n              iconButtonProps={{ size: 'medium' }}\r\n              iconClassName='text-textSecondary text-[22px]'\r\n              options={[\r\n                { text: 'Download', icon: 'ri-download-line', menuItemProps: { className: 'gap-2' } },\r\n                {\r\n                  text: 'Delete',\r\n                  icon: 'ri-delete-bin-7-line',\r\n                  menuItemProps: {\r\n                    className: 'gap-2',\r\n                    onClick: () => setData(data.filter(category => category.id !== row.original.id))\r\n                  }\r\n                },\r\n                { text: 'Duplicate', icon: 'ri-stack-line', menuItemProps: { className: 'gap-2' } }\r\n              ]}\r\n            /> */}\r\n          </div>\r\n        ),\r\n        enableSorting: false\r\n      })\r\n    ],\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [data]\r\n  )\r\n\r\n  const table = useReactTable({\r\n    data: data,\r\n    columns,\r\n    filterFns: {\r\n      fuzzy: fuzzyFilter\r\n    },\r\n    state: {\r\n      rowSelection,\r\n      globalFilter\r\n    },\r\n    initialState: {\r\n      pagination: {\r\n        pageSize: 10\r\n      }\r\n    },\r\n    enableRowSelection: true, //enable row selection for all rows\r\n    // enableRowSelection: row => row.original.age > 18, // or enable row selection conditionally per row\r\n    globalFilterFn: fuzzyFilter,\r\n    onRowSelectionChange: setRowSelection,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    onGlobalFilterChange: setGlobalFilter,\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n    getFacetedRowModel: getFacetedRowModel(),\r\n    getFacetedUniqueValues: getFacetedUniqueValues(),\r\n    getFacetedMinMaxValues: getFacetedMinMaxValues()\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <div className='flex items-start justify-between max-sm:flex-col sm:items-center gap-y-4 p-5'>\r\n          <DebouncedInput\r\n            value={globalFilter ?? ''}\r\n            onChange={value => setGlobalFilter(String(value))}\r\n            placeholder='Search'\r\n            className='max-sm:is-full'\r\n          />\r\n          <div className='flex items-center max-sm:flex-col gap-4 max-sm:is-full is-auto'>\r\n            <Button\r\n              color='secondary'\r\n              variant='outlined'\r\n              startIcon={<i className='ri-upload-2-line text-xl' />}\r\n              className='max-sm:is-full'\r\n            >\r\n              <CSVLink\r\n                className='exportBtn'\r\n                data={temp}\r\n                headers={headers}\r\n                filename={`all-staffs-${new Date().toISOString()}.csv`}\r\n              >\r\n                Export\r\n              </CSVLink>\r\n            </Button>\r\n            <Button\r\n              variant='contained'\r\n              className='max-sm:is-full is-auto'\r\n              onClick={() => setAddDealerOpen(!addDealerOpen)}\r\n              startIcon={<i className='ri-add-line' />}\r\n            >\r\n              Add User Role\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className='overflow-x-auto'>\r\n          <table className={tableStyles.table}>\r\n            <thead>\r\n              {table.getHeaderGroups().map(headerGroup => (\r\n                <tr key={headerGroup.id}>\r\n                  {headerGroup.headers.map(header => (\r\n                    <th key={header.id}>\r\n                      {header.isPlaceholder ? null : (\r\n                        <>\r\n                          <div\r\n                            className={classnames({\r\n                              'flex items-center': header.column.getIsSorted(),\r\n                              'cursor-pointer select-none': header.column.getCanSort()\r\n                            })}\r\n                            onClick={header.column.getToggleSortingHandler()}\r\n                          >\r\n                            {flexRender(header.column.columnDef.header, header.getContext())}\r\n                            {{\r\n                              asc: <i className='ri-arrow-up-s-line text-xl' />,\r\n                              desc: <i className='ri-arrow-down-s-line text-xl' />\r\n                            }[header.column.getIsSorted()] ?? null}\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            {table.getFilteredRowModel().rows.length === 0 ? (\r\n              <tbody>\r\n                <tr>\r\n                  <td colSpan={table.getVisibleFlatColumns().length} className='text-center'>\r\n                    No data available\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            ) : (\r\n              <tbody>\r\n                {table\r\n                  .getRowModel()\r\n                  .rows.slice(0, table.getState().pagination.pageSize)\r\n                  .map(row => {\r\n                    return (\r\n                      <tr key={row.id} className={classnames({ selected: row.getIsSelected() })}>\r\n                        {row.getVisibleCells().map(cell => (\r\n                          <td key={cell.id}>{flexRender(cell.column.columnDef.cell, cell.getContext())}</td>\r\n                        ))}\r\n                      </tr>\r\n                    )\r\n                  })}\r\n              </tbody>\r\n            )}\r\n          </table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 15, 25]}\r\n          component='div'\r\n          className='border-bs'\r\n          count={table.getFilteredRowModel().rows.length}\r\n          rowsPerPage={table.getState().pagination.pageSize}\r\n          page={table.getState().pagination.pageIndex}\r\n          onPageChange={(_, page) => {\r\n            table.setPageIndex(page)\r\n          }}\r\n          onRowsPerPageChange={e => table.setPageSize(Number(e.target.value))}\r\n        />\r\n      </Card>\r\n      <AddAdminDrawer\r\n        open={addDealerOpen}\r\n        adminData={data}\r\n        setData={setData}\r\n        handleClose={() => setAddDealerOpen(!addDealerOpen)}\r\n      />\r\n\r\n      <EditAdminDrawer\r\n        open={editAdminOpen}\r\n        adminData={editAdmin}\r\n        setData={setData}\r\n        handleClose={() => setEditAdminOpen(!editAdminOpen)}\r\n      />\r\n      <Alert />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminTable\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2131, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/[lang]/(dashboard)/admin/page.jsx"],"sourcesContent":["'use client'\r\n\r\nimport { ADMIN_ROLES_AGGREGATE } from '@/graphql/queries'\r\nimport AdminCard from '@/views/admin/lists/AdminCard'\r\n// Component Imports\r\nimport AdminTable from '@/views/admin/lists/AdminTable'\r\nimport { useSuspenseQuery } from '@apollo/client'\r\nimport { Grid } from '@mui/material'\r\n\r\nconst eCommerceProductsCategory = () => {\r\n  const { data: adminRoles } = useSuspenseQuery(ADMIN_ROLES_AGGREGATE)\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item md={2} xs={12} sm={6}>\r\n        <AdminCard count={adminRoles.adminRole.aggregate.count} title='Admin' />\r\n      </Grid>\r\n      <Grid item md={2} xs={12} sm={6}>\r\n        <AdminCard count={adminRoles.managerRole.aggregate.count} title='Manager' />\r\n      </Grid>\r\n      <Grid item md={2} xs={12} sm={6}>\r\n        <AdminCard count={adminRoles.saleRole.aggregate.count} title='Sale' />\r\n      </Grid>\r\n      <Grid item md={2} xs={12} sm={6}>\r\n        <AdminCard count={adminRoles.financeRole.aggregate.count} title='Finance' />\r\n      </Grid>\r\n      <Grid item md={2} xs={12} sm={6}>\r\n        <AdminCard count={adminRoles.deliveryRole.aggregate.count} title='Delivery' />\r\n      </Grid>\r\n      <Grid item md={2} xs={12} sm={6}>\r\n        <AdminCard count={adminRoles.serviceRole.aggregate.count} title='Service' />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <AdminTable />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default eCommerceProductsCategory\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;;;;AASA,MAAM,4BAA4B;IAChC,MAAM,EAAE,MAAM,UAAU,EAAE,GAAG,CAAA,GAAA,wKAAA,CAAA,mBAAgB,AAAD,EAAE,yHAAA,CAAA,wBAAqB;IAEnE,qBACE,wPAAC,oLAAA,CAAA,OAAI;QAAC,SAAS;QAAC,SAAS;;0BACvB,wPAAC,oLAAA,CAAA,OAAI;gBAAC,IAAI;gBAAC,IAAI;gBAAG,IAAI;gBAAI,IAAI;0BAC5B,cAAA,wPAAC,4IAAA,CAAA,UAAS;oBAAC,OAAO,WAAW,SAAS,CAAC,SAAS,CAAC,KAAK;oBAAE,OAAM;;;;;;;;;;;0BAEhE,wPAAC,oLAAA,CAAA,OAAI;gBAAC,IAAI;gBAAC,IAAI;gBAAG,IAAI;gBAAI,IAAI;0BAC5B,cAAA,wPAAC,4IAAA,CAAA,UAAS;oBAAC,OAAO,WAAW,WAAW,CAAC,SAAS,CAAC,KAAK;oBAAE,OAAM;;;;;;;;;;;0BAElE,wPAAC,oLAAA,CAAA,OAAI;gBAAC,IAAI;gBAAC,IAAI;gBAAG,IAAI;gBAAI,IAAI;0BAC5B,cAAA,wPAAC,4IAAA,CAAA,UAAS;oBAAC,OAAO,WAAW,QAAQ,CAAC,SAAS,CAAC,KAAK;oBAAE,OAAM;;;;;;;;;;;0BAE/D,wPAAC,oLAAA,CAAA,OAAI;gBAAC,IAAI;gBAAC,IAAI;gBAAG,IAAI;gBAAI,IAAI;0BAC5B,cAAA,wPAAC,4IAAA,CAAA,UAAS;oBAAC,OAAO,WAAW,WAAW,CAAC,SAAS,CAAC,KAAK;oBAAE,OAAM;;;;;;;;;;;0BAElE,wPAAC,oLAAA,CAAA,OAAI;gBAAC,IAAI;gBAAC,IAAI;gBAAG,IAAI;gBAAI,IAAI;0BAC5B,cAAA,wPAAC,4IAAA,CAAA,UAAS;oBAAC,OAAO,WAAW,YAAY,CAAC,SAAS,CAAC,KAAK;oBAAE,OAAM;;;;;;;;;;;0BAEnE,wPAAC,oLAAA,CAAA,OAAI;gBAAC,IAAI;gBAAC,IAAI;gBAAG,IAAI;gBAAI,IAAI;0BAC5B,cAAA,wPAAC,4IAAA,CAAA,UAAS;oBAAC,OAAO,WAAW,WAAW,CAAC,SAAS,CAAC,KAAK;oBAAE,OAAM;;;;;;;;;;;0BAGlE,wPAAC,oLAAA,CAAA,OAAI;gBAAC,IAAI;gBAAC,IAAI;0BACb,cAAA,wPAAC,6IAAA,CAAA,UAAU;;;;;;;;;;;;;;;;AAInB;uCAEe"}},
    {"offset": {"line": 2283, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}