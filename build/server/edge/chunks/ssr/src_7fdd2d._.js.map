{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/utils/routes.js"],"sourcesContent":["export const adminRoutes = [\r\n  '/en/dashboards',\r\n  '/en/products',\r\n  '/en/user',\r\n  '/en/orders',\r\n  '/en/news',\r\n  '/en/services',\r\n  '/en/invoice',\r\n  '/en/quotations',\r\n  '/en/service_token',\r\n  '/en/admin',\r\n  '/en/service_center'\r\n]\r\n\r\nexport const managerRoutes = ['/en/products', '/en/news']\r\nexport const saleRoutes = ['/en/orders', '/en/invoice', '/en/quotations']\r\nexport const serviceRoutes = ['/en/service_token']\r\nexport const deliveryRoutes = ['']\r\nexport const financeRoutes = ['/en/orders', '/en/invoice']\r\n"],"names":[],"mappings":";;;;;;;;AAAO,MAAM,cAAc;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,gBAAgB;IAAC;IAAgB;CAAW;AAClD,MAAM,aAAa;IAAC;IAAc;IAAe;CAAiB;AAClE,MAAM,gBAAgB;IAAC;CAAoB;AAC3C,MAAM,iBAAiB;IAAC;CAAG;AAC3B,MAAM,gBAAgB;IAAC;IAAc;CAAc"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/middleware.js"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport { jwtDecode } from 'jwt-decode'\r\nimport { adminRoutes, deliveryRoutes, financeRoutes, managerRoutes, saleRoutes, serviceRoutes } from '@/utils/routes'\r\n\r\nexport function middleware(req) {\r\n  const token = req.cookies.get('token')?.value\r\n\r\n  let role = null\r\n  if (token) {\r\n    role = jwtDecode(token).role\r\n  }\r\n\r\n  const { pathname } = req.nextUrl\r\n  if (pathname.startsWith('/en/login') || pathname.startsWith('/en/pages/misc/401-not-authorized')) {\r\n    return NextResponse.next()\r\n  }\r\n  if (!role) {\r\n    return NextResponse.redirect(new URL('/en/login', req.url))\r\n  } else if (role === 'admin' && adminRoutes.some(route => pathname.startsWith(route))) {\r\n    return NextResponse.next()\r\n  } else if (role === 'manager' && managerRoutes.some(route => pathname.startsWith(route))) {\r\n    return NextResponse.next()\r\n  } else if (role === 'service' && serviceRoutes.some(route => pathname.startsWith(route))) {\r\n    return NextResponse.next()\r\n  } else if (role === 'sale' && saleRoutes.some(route => pathname.startsWith(route))) {\r\n    return NextResponse.next()\r\n  } else if (role === 'delivery' && deliveryRoutes.some(route => pathname.startsWith(route))) {\r\n    return NextResponse.next()\r\n  } else if (role === 'finance' && financeRoutes.some(route => pathname.startsWith(route))) {\r\n    return NextResponse.next()\r\n  } else {\r\n    return NextResponse.redirect(new URL('/en/pages/misc/401-not-authorized', req.url))\r\n  }\r\n}\r\n\r\nexport const config = {\r\n  matcher: '/en/:path*'\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;AAIO,SAAS,WAAW,GAAG;IAC5B,MAAM,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU;IAExC,IAAI,OAAO;IACX,IAAI,OAAO;QACT,OAAO,CAAA,GAAA,sJAAA,CAAA,YAAS,AAAD,EAAE,OAAO,IAAI;IAC9B;IAEA,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,OAAO;IAChC,IAAI,SAAS,UAAU,CAAC,gBAAgB,SAAS,UAAU,CAAC,sCAAsC;QAChG,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IACA,IAAI,CAAC,MAAM;QACT,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,aAAa,IAAI,GAAG;IAC3D,OAAO,IAAI,SAAS,WAAW,sHAAA,CAAA,cAAW,CAAC,IAAI,CAAC,CAAA,QAAS,SAAS,UAAU,CAAC,SAAS;QACpF,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;IAC1B,OAAO,IAAI,SAAS,aAAa,sHAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,CAAA,QAAS,SAAS,UAAU,CAAC,SAAS;QACxF,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;IAC1B,OAAO,IAAI,SAAS,aAAa,sHAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,CAAA,QAAS,SAAS,UAAU,CAAC,SAAS;QACxF,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;IAC1B,OAAO,IAAI,SAAS,UAAU,sHAAA,CAAA,aAAU,CAAC,IAAI,CAAC,CAAA,QAAS,SAAS,UAAU,CAAC,SAAS;QAClF,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;IAC1B,OAAO,IAAI,SAAS,cAAc,sHAAA,CAAA,iBAAc,CAAC,IAAI,CAAC,CAAA,QAAS,SAAS,UAAU,CAAC,SAAS;QAC1F,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;IAC1B,OAAO,IAAI,SAAS,aAAa,sHAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,CAAA,QAAS,SAAS,UAAU,CAAC,SAAS;QACxF,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;IAC1B,OAAO;QACL,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,qCAAqC,IAAI,GAAG;IACnF;AACF;AAEO,MAAM,SAAS;IACpB,SAAS;AACX"}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}